/**
 * kinvey-nativescript-sdk - Kinvey NativeScript SDK for developing NativeScript applications.
 * @version v3.9.6
 * @author Kinvey, Inc.
 * @link http://www.kinvey.com
 * @license Apache-2.0
 */
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 142);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!**********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/base.js ***!
  \**********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BaseError = BaseError;
function BaseError(message, debug, code, kinveyRequestId) {
  this.name = 'BaseError';
  this.message = message || 'An error occurred.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
BaseError.prototype = Object.create(Error.prototype);
BaseError.prototype.constructor = BaseError;

/***/ }),
/* 1 */
/*!***********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/index.js ***!
  \***********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _activeUser = __webpack_require__(/*! ./activeUser */ 213);

Object.keys(_activeUser).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _activeUser[key];
    }
  });
});

var _apiVersionNotAvailable = __webpack_require__(/*! ./apiVersionNotAvailable */ 214);

Object.keys(_apiVersionNotAvailable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _apiVersionNotAvailable[key];
    }
  });
});

var _apiVersionNotImplemented = __webpack_require__(/*! ./apiVersionNotImplemented */ 215);

Object.keys(_apiVersionNotImplemented).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _apiVersionNotImplemented[key];
    }
  });
});

var _appProblem = __webpack_require__(/*! ./appProblem */ 216);

Object.keys(_appProblem).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _appProblem[key];
    }
  });
});

var _badRequest = __webpack_require__(/*! ./badRequest */ 217);

Object.keys(_badRequest).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _badRequest[key];
    }
  });
});

var _base = __webpack_require__(/*! ./base */ 0);

Object.keys(_base).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _base[key];
    }
  });
});

var _bl = __webpack_require__(/*! ./bl */ 218);

Object.keys(_bl).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _bl[key];
    }
  });
});

var _corsDisabled = __webpack_require__(/*! ./corsDisabled */ 219);

Object.keys(_corsDisabled).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _corsDisabled[key];
    }
  });
});

var _duplicateEndUsers = __webpack_require__(/*! ./duplicateEndUsers */ 220);

Object.keys(_duplicateEndUsers).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _duplicateEndUsers[key];
    }
  });
});

var _featureUnavailable = __webpack_require__(/*! ./featureUnavailable */ 221);

Object.keys(_featureUnavailable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _featureUnavailable[key];
    }
  });
});

var _incompleteRequestBody = __webpack_require__(/*! ./incompleteRequestBody */ 222);

Object.keys(_incompleteRequestBody).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _incompleteRequestBody[key];
    }
  });
});

var _indirectCollectionAccessDisallowed = __webpack_require__(/*! ./indirectCollectionAccessDisallowed */ 223);

Object.keys(_indirectCollectionAccessDisallowed).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _indirectCollectionAccessDisallowed[key];
    }
  });
});

var _insufficientCredentials = __webpack_require__(/*! ./insufficientCredentials */ 224);

Object.keys(_insufficientCredentials).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _insufficientCredentials[key];
    }
  });
});

var _invalidCredentials = __webpack_require__(/*! ./invalidCredentials */ 225);

Object.keys(_invalidCredentials).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _invalidCredentials[key];
    }
  });
});

var _invalidIdentifier = __webpack_require__(/*! ./invalidIdentifier */ 226);

Object.keys(_invalidIdentifier).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _invalidIdentifier[key];
    }
  });
});

var _invalidQuerySyntax = __webpack_require__(/*! ./invalidQuerySyntax */ 227);

Object.keys(_invalidQuerySyntax).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _invalidQuerySyntax[key];
    }
  });
});

var _jsonParse = __webpack_require__(/*! ./jsonParse */ 228);

Object.keys(_jsonParse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _jsonParse[key];
    }
  });
});

var _kinveyInternalErrorRetry = __webpack_require__(/*! ./kinveyInternalErrorRetry */ 229);

Object.keys(_kinveyInternalErrorRetry).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _kinveyInternalErrorRetry[key];
    }
  });
});

var _kinveyInternalErrorStop = __webpack_require__(/*! ./kinveyInternalErrorStop */ 230);

Object.keys(_kinveyInternalErrorStop).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _kinveyInternalErrorStop[key];
    }
  });
});

var _kinvey = __webpack_require__(/*! ./kinvey */ 231);

Object.keys(_kinvey).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _kinvey[key];
    }
  });
});

var _missingQuery = __webpack_require__(/*! ./missingQuery */ 232);

Object.keys(_missingQuery).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _missingQuery[key];
    }
  });
});

var _missingRequestHeader = __webpack_require__(/*! ./missingRequestHeader */ 233);

Object.keys(_missingRequestHeader).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _missingRequestHeader[key];
    }
  });
});

var _missingRequestParameter = __webpack_require__(/*! ./missingRequestParameter */ 234);

Object.keys(_missingRequestParameter).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _missingRequestParameter[key];
    }
  });
});

var _mobileIdentityConnect = __webpack_require__(/*! ./mobileIdentityConnect */ 235);

Object.keys(_mobileIdentityConnect).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _mobileIdentityConnect[key];
    }
  });
});

var _networkConnection = __webpack_require__(/*! ./networkConnection */ 236);

Object.keys(_networkConnection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _networkConnection[key];
    }
  });
});

var _noActiveUser = __webpack_require__(/*! ./noActiveUser */ 237);

Object.keys(_noActiveUser).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _noActiveUser[key];
    }
  });
});

var _noResponse = __webpack_require__(/*! ./noResponse */ 238);

Object.keys(_noResponse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _noResponse[key];
    }
  });
});

var _notFound = __webpack_require__(/*! ./notFound */ 239);

Object.keys(_notFound).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _notFound[key];
    }
  });
});

var _parameterValueOutOfRange = __webpack_require__(/*! ./parameterValueOutOfRange */ 240);

Object.keys(_parameterValueOutOfRange).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _parameterValueOutOfRange[key];
    }
  });
});

var _popup = __webpack_require__(/*! ./popup */ 241);

Object.keys(_popup).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _popup[key];
    }
  });
});

var _query = __webpack_require__(/*! ./query */ 242);

Object.keys(_query).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _query[key];
    }
  });
});

var _server = __webpack_require__(/*! ./server */ 243);

Object.keys(_server).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _server[key];
    }
  });
});

var _staleRequest = __webpack_require__(/*! ./staleRequest */ 244);

Object.keys(_staleRequest).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _staleRequest[key];
    }
  });
});

var _sync = __webpack_require__(/*! ./sync */ 245);

Object.keys(_sync).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _sync[key];
    }
  });
});

var _timeout = __webpack_require__(/*! ./timeout */ 246);

Object.keys(_timeout).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _timeout[key];
    }
  });
});

var _userAlreadyExists = __webpack_require__(/*! ./userAlreadyExists */ 247);

Object.keys(_userAlreadyExists).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _userAlreadyExists[key];
    }
  });
});

var _writesToCollectionDisallowed = __webpack_require__(/*! ./writesToCollectionDisallowed */ 248);

Object.keys(_writesToCollectionDisallowed).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _writesToCollectionDisallowed[key];
    }
  });
});

/***/ }),
/* 2 */
/*!**********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/utils/index.js ***!
  \**********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _object = __webpack_require__(/*! ./object */ 110);

Object.keys(_object).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _object[key];
    }
  });
});

var _string = __webpack_require__(/*! ./string */ 252);

Object.keys(_string).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _string[key];
    }
  });
});

var _url = __webpack_require__(/*! ./url */ 253);

Object.keys(_url).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _url[key];
    }
  });
});

/***/ }),
/* 3 */
/*!**********************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/flow_interfaces.js ***!
  \**********************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {};
//# sourceMappingURL=flow_interfaces.js.map


/***/ }),
/* 4 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isArray.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),
/* 5 */
/*!***************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/constants/operations.js ***!
  \***************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  PNTimeOperation: 'PNTimeOperation',

  PNHistoryOperation: 'PNHistoryOperation',
  PNDeleteMessagesOperation: 'PNDeleteMessagesOperation',
  PNFetchMessagesOperation: 'PNFetchMessagesOperation',

  PNSubscribeOperation: 'PNSubscribeOperation',
  PNUnsubscribeOperation: 'PNUnsubscribeOperation',
  PNPublishOperation: 'PNPublishOperation',

  PNPushNotificationEnabledChannelsOperation: 'PNPushNotificationEnabledChannelsOperation',
  PNRemoveAllPushNotificationsOperation: 'PNRemoveAllPushNotificationsOperation',

  PNWhereNowOperation: 'PNWhereNowOperation',
  PNSetStateOperation: 'PNSetStateOperation',
  PNHereNowOperation: 'PNHereNowOperation',
  PNGetStateOperation: 'PNGetStateOperation',
  PNHeartbeatOperation: 'PNHeartbeatOperation',

  PNChannelGroupsOperation: 'PNChannelGroupsOperation',
  PNRemoveGroupOperation: 'PNRemoveGroupOperation',
  PNChannelsForGroupOperation: 'PNChannelsForGroupOperation',
  PNAddChannelsToGroupOperation: 'PNAddChannelsToGroupOperation',
  PNRemoveChannelsFromGroupOperation: 'PNRemoveChannelsFromGroupOperation',

  PNAccessManagerGrant: 'PNAccessManagerGrant',
  PNAccessManagerAudit: 'PNAccessManagerAudit'
};
module.exports = exports['default'];
//# sourceMappingURL=operations.js.map


/***/ }),
/* 6 */
/*!*******************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/es6-promise/dist/es6-promise.js ***!
  \*******************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, global) {var require;/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   4.1.1
 */

(function (global, factory) {
	 true ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.ES6Promise = factory());
}(this, (function () { 'use strict';

function objectOrFunction(x) {
  var type = typeof x;
  return x !== null && (type === 'object' || type === 'function');
}

function isFunction(x) {
  return typeof x === 'function';
}

var _isArray = undefined;
if (Array.isArray) {
  _isArray = Array.isArray;
} else {
  _isArray = function (x) {
    return Object.prototype.toString.call(x) === '[object Array]';
  };
}

var isArray = _isArray;

var len = 0;
var vertxNext = undefined;
var customSchedulerFn = undefined;

var asap = function asap(callback, arg) {
  queue[len] = callback;
  queue[len + 1] = arg;
  len += 2;
  if (len === 2) {
    // If len is 2, that means that we need to schedule an async flush.
    // If additional callbacks are queued before the queue is flushed, they
    // will be processed by this flush that we are scheduling.
    if (customSchedulerFn) {
      customSchedulerFn(flush);
    } else {
      scheduleFlush();
    }
  }
};

function setScheduler(scheduleFn) {
  customSchedulerFn = scheduleFn;
}

function setAsap(asapFn) {
  asap = asapFn;
}

var browserWindow = typeof window !== 'undefined' ? window : undefined;
var browserGlobal = browserWindow || {};
var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';

// test for web worker but not in IE10
var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';

// node
function useNextTick() {
  // node version 0.10.x displays a deprecation warning when nextTick is used recursively
  // see https://github.com/cujojs/when/issues/410 for details
  return function () {
    return process.nextTick(flush);
  };
}

// vertx
function useVertxTimer() {
  if (typeof vertxNext !== 'undefined') {
    return function () {
      vertxNext(flush);
    };
  }

  return useSetTimeout();
}

function useMutationObserver() {
  var iterations = 0;
  var observer = new BrowserMutationObserver(flush);
  var node = document.createTextNode('');
  observer.observe(node, { characterData: true });

  return function () {
    node.data = iterations = ++iterations % 2;
  };
}

// web worker
function useMessageChannel() {
  var channel = new MessageChannel();
  channel.port1.onmessage = flush;
  return function () {
    return channel.port2.postMessage(0);
  };
}

function useSetTimeout() {
  // Store setTimeout reference so es6-promise will be unaffected by
  // other code modifying setTimeout (like sinon.useFakeTimers())
  var globalSetTimeout = setTimeout;
  return function () {
    return globalSetTimeout(flush, 1);
  };
}

var queue = new Array(1000);
function flush() {
  for (var i = 0; i < len; i += 2) {
    var callback = queue[i];
    var arg = queue[i + 1];

    callback(arg);

    queue[i] = undefined;
    queue[i + 1] = undefined;
  }

  len = 0;
}

function attemptVertx() {
  try {
    var r = require;
    var vertx = __webpack_require__(/*! vertx */ 145);
    vertxNext = vertx.runOnLoop || vertx.runOnContext;
    return useVertxTimer();
  } catch (e) {
    return useSetTimeout();
  }
}

var scheduleFlush = undefined;
// Decide what async method to use to triggering processing of queued callbacks:
if (isNode) {
  scheduleFlush = useNextTick();
} else if (BrowserMutationObserver) {
  scheduleFlush = useMutationObserver();
} else if (isWorker) {
  scheduleFlush = useMessageChannel();
} else if (browserWindow === undefined && "function" === 'function') {
  scheduleFlush = attemptVertx();
} else {
  scheduleFlush = useSetTimeout();
}

function then(onFulfillment, onRejection) {
  var _arguments = arguments;

  var parent = this;

  var child = new this.constructor(noop);

  if (child[PROMISE_ID] === undefined) {
    makePromise(child);
  }

  var _state = parent._state;

  if (_state) {
    (function () {
      var callback = _arguments[_state - 1];
      asap(function () {
        return invokeCallback(_state, child, callback, parent._result);
      });
    })();
  } else {
    subscribe(parent, child, onFulfillment, onRejection);
  }

  return child;
}

/**
  `Promise.resolve` returns a promise that will become resolved with the
  passed `value`. It is shorthand for the following:

  ```javascript
  let promise = new Promise(function(resolve, reject){
    resolve(1);
  });

  promise.then(function(value){
    // value === 1
  });
  ```

  Instead of writing the above, your code now simply becomes the following:

  ```javascript
  let promise = Promise.resolve(1);

  promise.then(function(value){
    // value === 1
  });
  ```

  @method resolve
  @static
  @param {Any} value value that the returned promise will be resolved with
  Useful for tooling.
  @return {Promise} a promise that will become fulfilled with the given
  `value`
*/
function resolve$1(object) {
  /*jshint validthis:true */
  var Constructor = this;

  if (object && typeof object === 'object' && object.constructor === Constructor) {
    return object;
  }

  var promise = new Constructor(noop);
  resolve(promise, object);
  return promise;
}

var PROMISE_ID = Math.random().toString(36).substring(16);

function noop() {}

var PENDING = void 0;
var FULFILLED = 1;
var REJECTED = 2;

var GET_THEN_ERROR = new ErrorObject();

function selfFulfillment() {
  return new TypeError("You cannot resolve a promise with itself");
}

function cannotReturnOwn() {
  return new TypeError('A promises callback cannot return that same promise.');
}

function getThen(promise) {
  try {
    return promise.then;
  } catch (error) {
    GET_THEN_ERROR.error = error;
    return GET_THEN_ERROR;
  }
}

function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {
  try {
    then$$1.call(value, fulfillmentHandler, rejectionHandler);
  } catch (e) {
    return e;
  }
}

function handleForeignThenable(promise, thenable, then$$1) {
  asap(function (promise) {
    var sealed = false;
    var error = tryThen(then$$1, thenable, function (value) {
      if (sealed) {
        return;
      }
      sealed = true;
      if (thenable !== value) {
        resolve(promise, value);
      } else {
        fulfill(promise, value);
      }
    }, function (reason) {
      if (sealed) {
        return;
      }
      sealed = true;

      reject(promise, reason);
    }, 'Settle: ' + (promise._label || ' unknown promise'));

    if (!sealed && error) {
      sealed = true;
      reject(promise, error);
    }
  }, promise);
}

function handleOwnThenable(promise, thenable) {
  if (thenable._state === FULFILLED) {
    fulfill(promise, thenable._result);
  } else if (thenable._state === REJECTED) {
    reject(promise, thenable._result);
  } else {
    subscribe(thenable, undefined, function (value) {
      return resolve(promise, value);
    }, function (reason) {
      return reject(promise, reason);
    });
  }
}

function handleMaybeThenable(promise, maybeThenable, then$$1) {
  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {
    handleOwnThenable(promise, maybeThenable);
  } else {
    if (then$$1 === GET_THEN_ERROR) {
      reject(promise, GET_THEN_ERROR.error);
      GET_THEN_ERROR.error = null;
    } else if (then$$1 === undefined) {
      fulfill(promise, maybeThenable);
    } else if (isFunction(then$$1)) {
      handleForeignThenable(promise, maybeThenable, then$$1);
    } else {
      fulfill(promise, maybeThenable);
    }
  }
}

function resolve(promise, value) {
  if (promise === value) {
    reject(promise, selfFulfillment());
  } else if (objectOrFunction(value)) {
    handleMaybeThenable(promise, value, getThen(value));
  } else {
    fulfill(promise, value);
  }
}

function publishRejection(promise) {
  if (promise._onerror) {
    promise._onerror(promise._result);
  }

  publish(promise);
}

function fulfill(promise, value) {
  if (promise._state !== PENDING) {
    return;
  }

  promise._result = value;
  promise._state = FULFILLED;

  if (promise._subscribers.length !== 0) {
    asap(publish, promise);
  }
}

function reject(promise, reason) {
  if (promise._state !== PENDING) {
    return;
  }
  promise._state = REJECTED;
  promise._result = reason;

  asap(publishRejection, promise);
}

function subscribe(parent, child, onFulfillment, onRejection) {
  var _subscribers = parent._subscribers;
  var length = _subscribers.length;

  parent._onerror = null;

  _subscribers[length] = child;
  _subscribers[length + FULFILLED] = onFulfillment;
  _subscribers[length + REJECTED] = onRejection;

  if (length === 0 && parent._state) {
    asap(publish, parent);
  }
}

function publish(promise) {
  var subscribers = promise._subscribers;
  var settled = promise._state;

  if (subscribers.length === 0) {
    return;
  }

  var child = undefined,
      callback = undefined,
      detail = promise._result;

  for (var i = 0; i < subscribers.length; i += 3) {
    child = subscribers[i];
    callback = subscribers[i + settled];

    if (child) {
      invokeCallback(settled, child, callback, detail);
    } else {
      callback(detail);
    }
  }

  promise._subscribers.length = 0;
}

function ErrorObject() {
  this.error = null;
}

var TRY_CATCH_ERROR = new ErrorObject();

function tryCatch(callback, detail) {
  try {
    return callback(detail);
  } catch (e) {
    TRY_CATCH_ERROR.error = e;
    return TRY_CATCH_ERROR;
  }
}

function invokeCallback(settled, promise, callback, detail) {
  var hasCallback = isFunction(callback),
      value = undefined,
      error = undefined,
      succeeded = undefined,
      failed = undefined;

  if (hasCallback) {
    value = tryCatch(callback, detail);

    if (value === TRY_CATCH_ERROR) {
      failed = true;
      error = value.error;
      value.error = null;
    } else {
      succeeded = true;
    }

    if (promise === value) {
      reject(promise, cannotReturnOwn());
      return;
    }
  } else {
    value = detail;
    succeeded = true;
  }

  if (promise._state !== PENDING) {
    // noop
  } else if (hasCallback && succeeded) {
      resolve(promise, value);
    } else if (failed) {
      reject(promise, error);
    } else if (settled === FULFILLED) {
      fulfill(promise, value);
    } else if (settled === REJECTED) {
      reject(promise, value);
    }
}

function initializePromise(promise, resolver) {
  try {
    resolver(function resolvePromise(value) {
      resolve(promise, value);
    }, function rejectPromise(reason) {
      reject(promise, reason);
    });
  } catch (e) {
    reject(promise, e);
  }
}

var id = 0;
function nextId() {
  return id++;
}

function makePromise(promise) {
  promise[PROMISE_ID] = id++;
  promise._state = undefined;
  promise._result = undefined;
  promise._subscribers = [];
}

function Enumerator$1(Constructor, input) {
  this._instanceConstructor = Constructor;
  this.promise = new Constructor(noop);

  if (!this.promise[PROMISE_ID]) {
    makePromise(this.promise);
  }

  if (isArray(input)) {
    this.length = input.length;
    this._remaining = input.length;

    this._result = new Array(this.length);

    if (this.length === 0) {
      fulfill(this.promise, this._result);
    } else {
      this.length = this.length || 0;
      this._enumerate(input);
      if (this._remaining === 0) {
        fulfill(this.promise, this._result);
      }
    }
  } else {
    reject(this.promise, validationError());
  }
}

function validationError() {
  return new Error('Array Methods must be provided an Array');
}

Enumerator$1.prototype._enumerate = function (input) {
  for (var i = 0; this._state === PENDING && i < input.length; i++) {
    this._eachEntry(input[i], i);
  }
};

Enumerator$1.prototype._eachEntry = function (entry, i) {
  var c = this._instanceConstructor;
  var resolve$$1 = c.resolve;

  if (resolve$$1 === resolve$1) {
    var _then = getThen(entry);

    if (_then === then && entry._state !== PENDING) {
      this._settledAt(entry._state, i, entry._result);
    } else if (typeof _then !== 'function') {
      this._remaining--;
      this._result[i] = entry;
    } else if (c === Promise$2) {
      var promise = new c(noop);
      handleMaybeThenable(promise, entry, _then);
      this._willSettleAt(promise, i);
    } else {
      this._willSettleAt(new c(function (resolve$$1) {
        return resolve$$1(entry);
      }), i);
    }
  } else {
    this._willSettleAt(resolve$$1(entry), i);
  }
};

Enumerator$1.prototype._settledAt = function (state, i, value) {
  var promise = this.promise;

  if (promise._state === PENDING) {
    this._remaining--;

    if (state === REJECTED) {
      reject(promise, value);
    } else {
      this._result[i] = value;
    }
  }

  if (this._remaining === 0) {
    fulfill(promise, this._result);
  }
};

Enumerator$1.prototype._willSettleAt = function (promise, i) {
  var enumerator = this;

  subscribe(promise, undefined, function (value) {
    return enumerator._settledAt(FULFILLED, i, value);
  }, function (reason) {
    return enumerator._settledAt(REJECTED, i, reason);
  });
};

/**
  `Promise.all` accepts an array of promises, and returns a new promise which
  is fulfilled with an array of fulfillment values for the passed promises, or
  rejected with the reason of the first passed promise to be rejected. It casts all
  elements of the passed iterable to promises as it runs this algorithm.

  Example:

  ```javascript
  let promise1 = resolve(1);
  let promise2 = resolve(2);
  let promise3 = resolve(3);
  let promises = [ promise1, promise2, promise3 ];

  Promise.all(promises).then(function(array){
    // The array here would be [ 1, 2, 3 ];
  });
  ```

  If any of the `promises` given to `all` are rejected, the first promise
  that is rejected will be given as an argument to the returned promises's
  rejection handler. For example:

  Example:

  ```javascript
  let promise1 = resolve(1);
  let promise2 = reject(new Error("2"));
  let promise3 = reject(new Error("3"));
  let promises = [ promise1, promise2, promise3 ];

  Promise.all(promises).then(function(array){
    // Code here never runs because there are rejected promises!
  }, function(error) {
    // error.message === "2"
  });
  ```

  @method all
  @static
  @param {Array} entries array of promises
  @param {String} label optional string for labeling the promise.
  Useful for tooling.
  @return {Promise} promise that is fulfilled when all `promises` have been
  fulfilled, or rejected if any of them become rejected.
  @static
*/
function all$1(entries) {
  return new Enumerator$1(this, entries).promise;
}

/**
  `Promise.race` returns a new promise which is settled in the same way as the
  first passed promise to settle.

  Example:

  ```javascript
  let promise1 = new Promise(function(resolve, reject){
    setTimeout(function(){
      resolve('promise 1');
    }, 200);
  });

  let promise2 = new Promise(function(resolve, reject){
    setTimeout(function(){
      resolve('promise 2');
    }, 100);
  });

  Promise.race([promise1, promise2]).then(function(result){
    // result === 'promise 2' because it was resolved before promise1
    // was resolved.
  });
  ```

  `Promise.race` is deterministic in that only the state of the first
  settled promise matters. For example, even if other promises given to the
  `promises` array argument are resolved, but the first settled promise has
  become rejected before the other promises became fulfilled, the returned
  promise will become rejected:

  ```javascript
  let promise1 = new Promise(function(resolve, reject){
    setTimeout(function(){
      resolve('promise 1');
    }, 200);
  });

  let promise2 = new Promise(function(resolve, reject){
    setTimeout(function(){
      reject(new Error('promise 2'));
    }, 100);
  });

  Promise.race([promise1, promise2]).then(function(result){
    // Code here never runs
  }, function(reason){
    // reason.message === 'promise 2' because promise 2 became rejected before
    // promise 1 became fulfilled
  });
  ```

  An example real-world use case is implementing timeouts:

  ```javascript
  Promise.race([ajax('foo.json'), timeout(5000)])
  ```

  @method race
  @static
  @param {Array} promises array of promises to observe
  Useful for tooling.
  @return {Promise} a promise which settles in the same way as the first passed
  promise to settle.
*/
function race$1(entries) {
  /*jshint validthis:true */
  var Constructor = this;

  if (!isArray(entries)) {
    return new Constructor(function (_, reject) {
      return reject(new TypeError('You must pass an array to race.'));
    });
  } else {
    return new Constructor(function (resolve, reject) {
      var length = entries.length;
      for (var i = 0; i < length; i++) {
        Constructor.resolve(entries[i]).then(resolve, reject);
      }
    });
  }
}

/**
  `Promise.reject` returns a promise rejected with the passed `reason`.
  It is shorthand for the following:

  ```javascript
  let promise = new Promise(function(resolve, reject){
    reject(new Error('WHOOPS'));
  });

  promise.then(function(value){
    // Code here doesn't run because the promise is rejected!
  }, function(reason){
    // reason.message === 'WHOOPS'
  });
  ```

  Instead of writing the above, your code now simply becomes the following:

  ```javascript
  let promise = Promise.reject(new Error('WHOOPS'));

  promise.then(function(value){
    // Code here doesn't run because the promise is rejected!
  }, function(reason){
    // reason.message === 'WHOOPS'
  });
  ```

  @method reject
  @static
  @param {Any} reason value that the returned promise will be rejected with.
  Useful for tooling.
  @return {Promise} a promise rejected with the given `reason`.
*/
function reject$1(reason) {
  /*jshint validthis:true */
  var Constructor = this;
  var promise = new Constructor(noop);
  reject(promise, reason);
  return promise;
}

function needsResolver() {
  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
}

function needsNew() {
  throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
}

/**
  Promise objects represent the eventual result of an asynchronous operation. The
  primary way of interacting with a promise is through its `then` method, which
  registers callbacks to receive either a promise's eventual value or the reason
  why the promise cannot be fulfilled.

  Terminology
  -----------

  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
  - `thenable` is an object or function that defines a `then` method.
  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
  - `exception` is a value that is thrown using the throw statement.
  - `reason` is a value that indicates why a promise was rejected.
  - `settled` the final resting state of a promise, fulfilled or rejected.

  A promise can be in one of three states: pending, fulfilled, or rejected.

  Promises that are fulfilled have a fulfillment value and are in the fulfilled
  state.  Promises that are rejected have a rejection reason and are in the
  rejected state.  A fulfillment value is never a thenable.

  Promises can also be said to *resolve* a value.  If this value is also a
  promise, then the original promise's settled state will match the value's
  settled state.  So a promise that *resolves* a promise that rejects will
  itself reject, and a promise that *resolves* a promise that fulfills will
  itself fulfill.


  Basic Usage:
  ------------

  ```js
  let promise = new Promise(function(resolve, reject) {
    // on success
    resolve(value);

    // on failure
    reject(reason);
  });

  promise.then(function(value) {
    // on fulfillment
  }, function(reason) {
    // on rejection
  });
  ```

  Advanced Usage:
  ---------------

  Promises shine when abstracting away asynchronous interactions such as
  `XMLHttpRequest`s.

  ```js
  function getJSON(url) {
    return new Promise(function(resolve, reject){
      let xhr = new XMLHttpRequest();

      xhr.open('GET', url);
      xhr.onreadystatechange = handler;
      xhr.responseType = 'json';
      xhr.setRequestHeader('Accept', 'application/json');
      xhr.send();

      function handler() {
        if (this.readyState === this.DONE) {
          if (this.status === 200) {
            resolve(this.response);
          } else {
            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
          }
        }
      };
    });
  }

  getJSON('/posts.json').then(function(json) {
    // on fulfillment
  }, function(reason) {
    // on rejection
  });
  ```

  Unlike callbacks, promises are great composable primitives.

  ```js
  Promise.all([
    getJSON('/posts'),
    getJSON('/comments')
  ]).then(function(values){
    values[0] // => postsJSON
    values[1] // => commentsJSON

    return values;
  });
  ```

  @class Promise
  @param {function} resolver
  Useful for tooling.
  @constructor
*/
function Promise$2(resolver) {
  this[PROMISE_ID] = nextId();
  this._result = this._state = undefined;
  this._subscribers = [];

  if (noop !== resolver) {
    typeof resolver !== 'function' && needsResolver();
    this instanceof Promise$2 ? initializePromise(this, resolver) : needsNew();
  }
}

Promise$2.all = all$1;
Promise$2.race = race$1;
Promise$2.resolve = resolve$1;
Promise$2.reject = reject$1;
Promise$2._setScheduler = setScheduler;
Promise$2._setAsap = setAsap;
Promise$2._asap = asap;

Promise$2.prototype = {
  constructor: Promise$2,

  /**
    The primary way of interacting with a promise is through its `then` method,
    which registers callbacks to receive either a promise's eventual value or the
    reason why the promise cannot be fulfilled.
  
    ```js
    findUser().then(function(user){
      // user is available
    }, function(reason){
      // user is unavailable, and you are given the reason why
    });
    ```
  
    Chaining
    --------
  
    The return value of `then` is itself a promise.  This second, 'downstream'
    promise is resolved with the return value of the first promise's fulfillment
    or rejection handler, or rejected if the handler throws an exception.
  
    ```js
    findUser().then(function (user) {
      return user.name;
    }, function (reason) {
      return 'default name';
    }).then(function (userName) {
      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
      // will be `'default name'`
    });
  
    findUser().then(function (user) {
      throw new Error('Found user, but still unhappy');
    }, function (reason) {
      throw new Error('`findUser` rejected and we're unhappy');
    }).then(function (value) {
      // never reached
    }, function (reason) {
      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
    });
    ```
    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
  
    ```js
    findUser().then(function (user) {
      throw new PedagogicalException('Upstream error');
    }).then(function (value) {
      // never reached
    }).then(function (value) {
      // never reached
    }, function (reason) {
      // The `PedgagocialException` is propagated all the way down to here
    });
    ```
  
    Assimilation
    ------------
  
    Sometimes the value you want to propagate to a downstream promise can only be
    retrieved asynchronously. This can be achieved by returning a promise in the
    fulfillment or rejection handler. The downstream promise will then be pending
    until the returned promise is settled. This is called *assimilation*.
  
    ```js
    findUser().then(function (user) {
      return findCommentsByAuthor(user);
    }).then(function (comments) {
      // The user's comments are now available
    });
    ```
  
    If the assimliated promise rejects, then the downstream promise will also reject.
  
    ```js
    findUser().then(function (user) {
      return findCommentsByAuthor(user);
    }).then(function (comments) {
      // If `findCommentsByAuthor` fulfills, we'll have the value here
    }, function (reason) {
      // If `findCommentsByAuthor` rejects, we'll have the reason here
    });
    ```
  
    Simple Example
    --------------
  
    Synchronous Example
  
    ```javascript
    let result;
  
    try {
      result = findResult();
      // success
    } catch(reason) {
      // failure
    }
    ```
  
    Errback Example
  
    ```js
    findResult(function(result, err){
      if (err) {
        // failure
      } else {
        // success
      }
    });
    ```
  
    Promise Example;
  
    ```javascript
    findResult().then(function(result){
      // success
    }, function(reason){
      // failure
    });
    ```
  
    Advanced Example
    --------------
  
    Synchronous Example
  
    ```javascript
    let author, books;
  
    try {
      author = findAuthor();
      books  = findBooksByAuthor(author);
      // success
    } catch(reason) {
      // failure
    }
    ```
  
    Errback Example
  
    ```js
  
    function foundBooks(books) {
  
    }
  
    function failure(reason) {
  
    }
  
    findAuthor(function(author, err){
      if (err) {
        failure(err);
        // failure
      } else {
        try {
          findBoooksByAuthor(author, function(books, err) {
            if (err) {
              failure(err);
            } else {
              try {
                foundBooks(books);
              } catch(reason) {
                failure(reason);
              }
            }
          });
        } catch(error) {
          failure(err);
        }
        // success
      }
    });
    ```
  
    Promise Example;
  
    ```javascript
    findAuthor().
      then(findBooksByAuthor).
      then(function(books){
        // found books
    }).catch(function(reason){
      // something went wrong
    });
    ```
  
    @method then
    @param {Function} onFulfilled
    @param {Function} onRejected
    Useful for tooling.
    @return {Promise}
  */
  then: then,

  /**
    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
    as the catch block of a try/catch statement.
  
    ```js
    function findAuthor(){
      throw new Error('couldn't find that author');
    }
  
    // synchronous
    try {
      findAuthor();
    } catch(reason) {
      // something went wrong
    }
  
    // async with promises
    findAuthor().catch(function(reason){
      // something went wrong
    });
    ```
  
    @method catch
    @param {Function} onRejection
    Useful for tooling.
    @return {Promise}
  */
  'catch': function _catch(onRejection) {
    return this.then(null, onRejection);
  }
};

/*global self*/
function polyfill$1() {
    var local = undefined;

    if (typeof global !== 'undefined') {
        local = global;
    } else if (typeof self !== 'undefined') {
        local = self;
    } else {
        try {
            local = Function('return this')();
        } catch (e) {
            throw new Error('polyfill failed because global object is unavailable in this environment');
        }
    }

    var P = local.Promise;

    if (P) {
        var promiseToString = null;
        try {
            promiseToString = Object.prototype.toString.call(P.resolve());
        } catch (e) {
            // silently ignored
        }

        if (promiseToString === '[object Promise]' && !P.cast) {
            return;
        }
    }

    local.Promise = Promise$2;
}

// Strange compat..
Promise$2.polyfill = polyfill$1;
Promise$2.Promise = Promise$2;

return Promise$2;

})));

//# sourceMappingURL=es6-promise.map

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../../../../../../.nvm/versions/node/v8.6.0/lib/node_modules/webpack/node_modules/process/browser.js */ 144), __webpack_require__(/*! ./../../../../../../../../../.nvm/versions/node/v8.6.0/lib/node_modules/webpack/buildin/global.js */ 23)))

/***/ }),
/* 7 */
/*!************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/index.js ***!
  \************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cache = __webpack_require__(/*! ./cache */ 94);

Object.keys(_cache).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _cache[key];
    }
  });
});

var _deltafetch = __webpack_require__(/*! ./deltafetch */ 307);

Object.keys(_deltafetch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _deltafetch[key];
    }
  });
});

var _headers = __webpack_require__(/*! ./headers */ 50);

Object.keys(_headers).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _headers[key];
    }
  });
});

var _network = __webpack_require__(/*! ./network */ 126);

Object.keys(_network).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _network[key];
    }
  });
});

var _request = __webpack_require__(/*! ./request */ 49);

Object.keys(_request).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _request[key];
    }
  });
});

var _response = __webpack_require__(/*! ./response */ 34);

Object.keys(_response).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _response[key];
    }
  });
});

var _rack = __webpack_require__(/*! ./rack */ 76);

Object.keys(_rack).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _rack[key];
    }
  });
});

var _middleware = __webpack_require__(/*! ./middleware */ 122);

Object.keys(_middleware).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _middleware[key];
    }
  });
});

/***/ }),
/* 8 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isString.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 18),
    isArray = __webpack_require__(/*! ./isArray */ 4),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 15);

/** `Object#toString` result references. */
var stringTag = '[object String]';

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
function isString(value) {
  return typeof value == 'string' ||
    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
}

module.exports = isString;


/***/ }),
/* 9 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/utils.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function objectToList(o) {
  var l = [];
  Object.keys(o).forEach(function (key) {
    return l.push(key);
  });
  return l;
}

function encodeString(input) {
  return encodeURIComponent(input).replace(/[!~*'()]/g, function (x) {
    return '%' + x.charCodeAt(0).toString(16).toUpperCase();
  });
}

function objectToListSorted(o) {
  return objectToList(o).sort();
}

function signPamFromParams(params) {
  var l = objectToListSorted(params);
  return l.map(function (paramKey) {
    return paramKey + '=' + encodeString(params[paramKey]);
  }).join('&');
}

function endsWith(searchString, suffix) {
  return searchString.indexOf(suffix, this.length - suffix.length) !== -1;
}

function createPromise() {
  var successResolve = void 0;
  var failureResolve = void 0;
  var promise = new Promise(function (fulfill, reject) {
    successResolve = fulfill;
    failureResolve = reject;
  });

  return { promise: promise, reject: failureResolve, fulfill: successResolve };
}

module.exports = { signPamFromParams: signPamFromParams, endsWith: endsWith, createPromise: createPromise, encodeString: encodeString };
//# sourceMappingURL=utils.js.map


/***/ }),
/* 10 */
/*!*****************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/client.js ***!
  \*****************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Client = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _fastMemoryCache = __webpack_require__(/*! fast-memory-cache */ 115);

var _fastMemoryCache2 = _interopRequireDefault(_fastMemoryCache);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _isNumber = __webpack_require__(/*! lodash/isNumber */ 75);

var _isNumber2 = _interopRequireDefault(_isNumber);

var _errors = __webpack_require__(/*! ./errors */ 1);

var _log = __webpack_require__(/*! ./log */ 21);

var _utils = __webpack_require__(/*! ./utils */ 2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DEFAULT_TIMEOUT = 60000;
var ACTIVE_USER_KEY = 'active_user';
var _sharedInstance = null;

var ActiveUserStorage = function () {
  function ActiveUserStorage() {
    _classCallCheck(this, ActiveUserStorage);

    this.memory = new _fastMemoryCache2.default();
  }

  _createClass(ActiveUserStorage, [{
    key: 'get',
    value: function get(key) {
      if (!(0, _isString2.default)(key)) {
        throw new _errors.KinveyError('ActiveUserStorage key must be a string.');
      }

      try {
        return JSON.parse(this.memory.get(key));
      } catch (e) {
        return null;
      }
    }
  }, {
    key: 'set',
    value: function set(key, value) {
      if (!(0, _isString2.default)(key)) {
        throw new _errors.KinveyError('ActiveUserStorage key must be a string.');
      }

      if ((0, _utils.isDefined)(value)) {
        this.memory.set(key, JSON.stringify(value));
      } else {
        this.memory.delete(key);
      }

      return value;
    }
  }]);

  return ActiveUserStorage;
}();

/**
 * The Client class stores information about your application on the Kinvey platform. You can create mutiple clients
 * to send requests to different environments on the Kinvey platform.
 */


var Client = exports.Client = function () {
  /**
   * Creates a new instance of the Client class.
   *
   * @param {Object}    options                                            Options
   * @param {string}    [options.apiHostname='https://baas.kinvey.com']    Host name used for Kinvey API requests
   * @param {string}    [options.micHostname='https://auth.kinvey.com']    Host name used for Kinvey MIC requests
   * @param {string}    [options.appKey]                                   App Key
   * @param {string}    [options.appSecret]                                App Secret
   * @param {string}    [options.masterSecret]                             App Master Secret
   * @param {string}    [options.encryptionKey]                            App Encryption Key
   * @param {string}    [options.appVersion]                               App Version
   * @return {Client}                                                      An instance of the Client class.
   *
   * @example
   * var client = new Kinvey.Client({
   *   appKey: '<appKey>',
   *   appSecret: '<appSecret>'
   * });
   */

  function Client() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Client);

    var apiHostname = (0, _isString2.default)(config.apiHostname) ? config.apiHostname : 'https://baas.kinvey.com';
    if (/^https?:\/\//i.test(apiHostname) === false) {
      apiHostname = 'https://' + apiHostname;
    }

    var apiHostnameParsed = _url2.default.parse(apiHostname);

    /**
     * @type {string}
     */
    this.deviceId = (0, _utils.uuidv4)();

    /**
     * @type {string}
     */
    this.apiProtocol = apiHostnameParsed.protocol;

    /**
     * @type {string}
     */
    this.apiHost = apiHostnameParsed.host;

    var micHostname = (0, _isString2.default)(config.micHostname) ? config.micHostname : 'https://auth.kinvey.com';
    if (/^https?:\/\//i.test(micHostname) === false) {
      micHostname = 'https://' + micHostname;
    }

    var micHostnameParsed = _url2.default.parse(micHostname);

    /**
     * @type {string}
     */
    this.micProtocol = micHostnameParsed.protocol;

    /**
     * @type {string}
     */
    this.micHost = micHostnameParsed.host;

    /**
     * @type {?string}
     */
    this.appKey = config.appKey;

    /**
     * @type {?string}
     */
    this.appSecret = config.appSecret;

    /**
     * @type {?string}
     */
    this.masterSecret = config.masterSecret;

    /**
     * @type {?string}
     */
    this.encryptionKey = config.encryptionKey;

    /**
     * @type {?string}
     */
    this.appVersion = config.appVersion;

    /**
     * @type {?number}
     */
    this.defaultTimeout = (0, _isNumber2.default)(config.defaultTimeout) && config.defaultTimeout >= 0 ? config.defaultTimeout : DEFAULT_TIMEOUT;

    /**
     * @private
     */
    this.activeUserStorage = new ActiveUserStorage();
  }

  /**
   * Get the active user.
   */


  _createClass(Client, [{
    key: 'getActiveUser',
    value: function getActiveUser() {
      return this.activeUserStorage.get(this.appKey + '.' + ACTIVE_USER_KEY);
    }

    /**
     * Set the active user
     */

  }, {
    key: 'setActiveUser',
    value: function setActiveUser(activeUser) {
      return this.activeUserStorage.set(this.appKey + '.' + ACTIVE_USER_KEY, activeUser);
    }

    /**
     * API host name used for Kinvey API requests.
     */

  }, {
    key: 'toPlainObject',


    /**
     * Returns an object containing all the information for this Client.
     *
     * @return {Object} Object
     */
    value: function toPlainObject() {
      return {
        deviceId: this.deviceId,
        apiHostname: this.apiHostname,
        apiProtocol: this.apiProtocol,
        apiHost: this.apiHost,
        micHostname: this.micHostname,
        micProtocol: this.micProtocol,
        micHost: this.micHost,
        appKey: this.appKey,
        appSecret: this.appSecret,
        masterSecret: this.masterSecret,
        encryptionKey: this.encryptionKey,
        appVersion: this.appVersion
      };
    }

    /**
     * Initializes the Client class by creating a new instance of the
     * Client class and storing it as a shared instance. The returned promise
     * resolves with the shared instance of the Client class.
     *
     * @param {Object}    options                                            Options
     * @param {string}    [options.apiHostname='https://baas.kinvey.com']    Host name used for Kinvey API requests
     * @param {string}    [options.micHostname='https://auth.kinvey.com']    Host name used for Kinvey MIC requests
     * @param {string}    [options.appKey]                                   App Key
     * @param {string}    [options.appSecret]                                App Secret
     * @param {string}    [options.masterSecret]                             App Master Secret
     * @param {string}    [options.encryptionKey]                            App Encryption Key
     * @param {string}    [options.appVersion]                               App Version
     * @return {Promise}                                                     A promise.
     */

  }, {
    key: 'apiHostname',
    get: function get() {
      return _url2.default.format({
        protocol: this.apiProtocol,
        host: this.apiHost
      });
    }

    /**
     * Mobile Identity Connect host name used for MIC requests.
     */

  }, {
    key: 'micHostname',
    get: function get() {
      return _url2.default.format({
        protocol: this.micProtocol,
        host: this.micHost
      });
    }

    /**
     * The version of your app. It will sent with Kinvey API requests
     * using the X-Kinvey-Api-Version header.
     */

  }, {
    key: 'appVersion',
    get: function get() {
      return this._appVersion;
    }

    /**
     * Set the version of your app. It will sent with Kinvey API requests
     * using the X-Kinvey-Api-Version header.
     *
     * @param  {String} appVersion  App version.
     */
    ,
    set: function set(appVersion) {
      if (appVersion && !(0, _isString2.default)(appVersion)) {
        appVersion = String(appVersion);
      }

      this._appVersion = appVersion;
    }
  }, {
    key: 'defaultTimeout',
    get: function get() {
      return this._defaultTimeout;
    },
    set: function set(timeout) {
      timeout = parseInt(timeout, 10);

      if ((0, _isNumber2.default)(timeout) === false || isNaN(timeout)) {
        throw new _errors.KinveyError('Invalid timeout. Timeout must be a number.');
      }

      if (timeout < 0) {
        _log.Log.info('Default timeout is less than 0. Setting default timeout to ' + defaultTimeout + 'ms.');
        timeout = defaultTimeout;
      }

      this._defaultTimeout = timeout;
    }
  }], [{
    key: 'initialize',
    value: function initialize() {
      throw new _errors.KinveyError('Please use Client.init().');
    }

    /**
     * Initializes the Client class by creating a new instance of the
     * Client class and storing it as a shared instance. The returned promise
     * resolves with the shared instance of the Client class.
     *
     * @param {Object}    options                                            Options
     * @param {string}    [options.apiHostname='https://baas.kinvey.com']    Host name used for Kinvey API requests
     * @param {string}    [options.micHostname='https://auth.kinvey.com']    Host name used for Kinvey MIC requests
     * @param {string}    [options.appKey]                                   App Key
     * @param {string}    [options.appSecret]                                App Secret
     * @param {string}    [options.masterSecret]                             App Master Secret
     * @param {string}    [options.encryptionKey]                            App Encryption Key
     * @param {string}    [options.appVersion]                               App Version
     * @return {Promise}                                                     A promise.
     */

  }, {
    key: 'init',
    value: function init(config) {
      _sharedInstance = new Client(config);
      return _sharedInstance;
    }

    /**
     * Returns the shared instance of the Client class used by the SDK.
     *
     * @throws {KinveyError} If a shared instance does not exist.
     *
     * @return {Client} The shared instance.
     *
     * @example
     * var client = Kinvey.Client.sharedInstance();
     */

  }, {
    key: 'sharedInstance',
    value: function sharedInstance() {
      if ((0, _utils.isDefined)(_sharedInstance) === false) {
        throw new _errors.KinveyError('You have not initialized the library. ' + 'Please call Kinvey.init() to initialize the library.');
      }

      return _sharedInstance;
    }
  }]);

  return Client;
}();

/***/ }),
/* 11 */
/*!*****************************************!*\
  !*** (webpack)/node_modules/url/url.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var punycode = __webpack_require__(/*! punycode */ 148);
var util = __webpack_require__(/*! ./util */ 149);

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = __webpack_require__(/*! querystring */ 150);

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};


/***/ }),
/* 12 */
/*!****************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/query.js ***!
  \****************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Query = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _sift = __webpack_require__(/*! sift */ 249);

var _sift2 = _interopRequireDefault(_sift);

var _isPlainObject = __webpack_require__(/*! lodash/isPlainObject */ 32);

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _errors = __webpack_require__(/*! ./errors */ 1);

var _utils = __webpack_require__(/*! ./utils */ 2);

var _log = __webpack_require__(/*! ./log */ 21);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var UNSUPPORTED_CONDITIONS = ['$nearSphere'];

/**
 * The Query class is used to query for a subset of
 * entities using the Kinvey API.
 *
 * @example
 * var query = new Kinvey.Query();
 * query.equalTo('name', 'Kinvey');
 */

var Query = function () {
  /**
   * Create an instance of the Query class.
   *
   * @param {Object} options Options
   * @param {string[]} [options.fields=[]] Fields to select.
   * @param {Object} [options.filter={}] MongoDB query.
   * @param {Object} [options.sort={}] The sorting order.
   * @param {?number} [options.limit=null] Number of entities to select.
   * @param {number} [options.skip=0] Number of entities to skip from the start.
   * @return {Query} The query.
   */
  function Query(options) {
    _classCallCheck(this, Query);

    options = Object.assign({
      fields: [],
      filter: {},
      sort: null,
      limit: null,
      skip: 0
    }, options);

    /**
     * Fields to select.
     *
     * @type {string[]}
     */
    this.fields = options.fields;

    /**
     * The MongoDB query.
     *
     * @type {Object}
     */
    this.filter = options.filter;

    /**
     * The sorting order.
     *
     * @type {Object}
     */
    this.sort = options.sort;

    /**
     * Number of entities to select.
     *
     * @type {?number}
     */
    this.limit = options.limit;

    /**
     * Number of entities to skip from the start.
     *
     * @type {number}
     */
    this.skip = options.skip;

    /**
     * Maintain reference to the parent query in case the query is part of a
     * join.
     *
     * @type {?Query}
     */
    this._parent = null;
  }

  /**
   * @type {string[]}
   */


  _createClass(Query, [{
    key: 'isSupportedOffline',
    value: function isSupportedOffline() {
      var _this = this;

      return Object.keys(this.filter).reduce(function (supported, key) {
        if (supported) {
          var value = _this.filter[key];
          return UNSUPPORTED_CONDITIONS.some(function (unsupportedConditions) {
            if (!value) {
              return true;
            }

            return !Object.keys(value).some(function (condition) {
              return condition === unsupportedConditions;
            });
          });
        }

        return supported;
      }, true);
    }

    /**
     * Adds an equal to filter to the query. Requires `field` to equal `value`.
     * Any existing filters on `field` will be discarded.
     * @see https://docs.mongodb.com/manual/reference/operator/query/#comparison
     *
     * @param {string} field Field
     * @param {*} value Value
     * @returns {Query} The query.
     */

  }, {
    key: 'equalTo',
    value: function equalTo(field, value) {
      return this.addFilter(field, value);
    }

    /**
     * Adds a contains filter to the query. Requires `field` to contain at least
     * one of the members of `list`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/in
     *
     * @param {string} field Field
     * @param {array} values List of values.
     * @throws {QueryError} `values` must be of type `Array`.
     * @returns {Query} The query.
     */

  }, {
    key: 'contains',
    value: function contains(field, values) {
      if ((0, _utils.isDefined)(values) === false) {
        throw new _errors.QueryError('You must supply a value.');
      }

      if (Array.isArray(values) === false) {
        values = [values];
      }

      return this.addFilter(field, '$in', values);
    }

    /**
     * Adds a contains all filter to the query. Requires `field` to contain all
     * members of `list`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/all
     *
     * @param {string} field Field
     * @param {Array} values List of values.
     * @throws {QueryError} `values` must be of type `Array`.
     * @returns {Query} The query.
     */

  }, {
    key: 'containsAll',
    value: function containsAll(field, values) {
      if ((0, _utils.isDefined)(values) === false) {
        throw new _errors.QueryError('You must supply a value.');
      }

      if (Array.isArray(values) === false) {
        values = [values];
      }

      return this.addFilter(field, '$all', values);
    }

    /**
     * Adds a greater than filter to the query. Requires `field` to be greater
     * than `value`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/gt
     *
     * @param {string} field Field
     * @param {number|string} value Value
     * @throws {QueryError} `value` must be of type `number` or `string`.
     * @returns {Query} The query.
     */

  }, {
    key: 'greaterThan',
    value: function greaterThan(field, value) {
      if ((0, _utils.isNumber)(value) === false && typeof value !== 'string') {
        throw new _errors.QueryError('You must supply a number or string.');
      }

      return this.addFilter(field, '$gt', value);
    }

    /**
     * Adds a greater than or equal to filter to the query. Requires `field` to
     * be greater than or equal to `value`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/gte
     *
     * @param {string} field Field.
     * @param {number|string} value Value.
     * @throws {QueryError} `value` must be of type `number` or `string`.
     * @returns {Query} The query.
     */

  }, {
    key: 'greaterThanOrEqualTo',
    value: function greaterThanOrEqualTo(field, value) {
      if ((0, _utils.isNumber)(value) === false && typeof value !== 'string') {
        throw new _errors.QueryError('You must supply a number or string.');
      }

      return this.addFilter(field, '$gte', value);
    }

    /**
     * Adds a less than filter to the query. Requires `field` to be less than
     * `value`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/lt
     *
     * @param {string} field Field
     * @param {number|string} value Value
     * @throws {QueryError} `value` must be of type `number` or `string`.
     * @returns {Query} The query.
     */

  }, {
    key: 'lessThan',
    value: function lessThan(field, value) {
      if ((0, _utils.isNumber)(value) === false && typeof value !== 'string') {
        throw new _errors.QueryError('You must supply a number or string.');
      }

      return this.addFilter(field, '$lt', value);
    }

    /**
     * Adds a less than or equal to filter to the query. Requires `field` to be
     * less than or equal to `value`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/lte
     *
     * @param {string} field Field
     * @param {number|string} value Value
     * @throws {QueryError} `value` must be of type `number` or `string`.
     * @returns {Query} The query.
     */

  }, {
    key: 'lessThanOrEqualTo',
    value: function lessThanOrEqualTo(field, value) {
      if ((0, _utils.isNumber)(value) === false && typeof value !== 'string') {
        throw new _errors.QueryError('You must supply a number or string.');
      }

      return this.addFilter(field, '$lte', value);
    }

    /**
     * Adds a not equal to filter to the query. Requires `field` not to equal
     * `value`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/ne
     *
     * @param {string} field Field
     * @param {*} value Value
     * @returns {Query} The query.
     */

  }, {
    key: 'notEqualTo',
    value: function notEqualTo(field, value) {
      return this.addFilter(field, '$ne', value);
    }

    /**
     * Adds a not contained in filter to the query. Requires `field` not to
     * contain any of the members of `list`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/nin
     *
     * @param {string} field Field
     * @param {Array} values List of values.
     * @throws {QueryError} `values` must be of type `Array`.
     * @returns {Query} The query.
     */

  }, {
    key: 'notContainedIn',
    value: function notContainedIn(field, values) {
      if (Array.isArray(values) === false) {
        values = [values];
      }

      return this.addFilter(field, '$nin', values);
    }

    /**
     * Performs a logical AND operation on the query and the provided queries.
     * @see https://docs.mongodb.com/manual/reference/operator/query/and
     *
     * @param {...Query|...Object} args Queries
     * @throws {QueryError} `query` must be of type `Array<Query>` or `Array<Object>`.
     * @returns {Query} The query.
     */

  }, {
    key: 'and',
    value: function and() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      // AND has highest precedence. Therefore, even if this query is part of a
      // JOIN already, apply it on this query.
      return this.join('$and', args);
    }

    /**
     * Performs a logical NOR operation on the query and the provided queries.
     * @see https://docs.mongodb.com/manual/reference/operator/query/nor
     *
     * @param {...Query|...Object} args Queries
     * @throws {QueryError} `query` must be of type `Array<Query>` or `Array<Object>`.
     * @returns {Query} The query.
     */

  }, {
    key: 'nor',
    value: function nor() {
      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      // NOR is preceded by AND. Therefore, if this query is part of an AND-join,
      // apply the NOR onto the parent to make sure AND indeed precedes NOR.
      if ((0, _utils.isDefined)(this._parent) && Object.hasOwnProperty.call(this._parent.filter, '$and')) {
        var _parent;

        return (_parent = this._parent).nor.apply(_parent, args);
      }

      return this.join('$nor', args);
    }

    /**
     * Performs a logical OR operation on the query and the provided queries.
     * @see https://docs.mongodb.com/manual/reference/operator/query/or
     *
     * @param {...Query|...Object} args Queries.
     * @throws {QueryError} `query` must be of type `Array<Query>` or `Array<Object>`.
     * @returns {Query} The query.
     */

  }, {
    key: 'or',
    value: function or() {
      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      // OR has lowest precedence. Therefore, if this query is part of any join,
      // apply the OR onto the parent to make sure OR has indeed the lowest
      // precedence.
      if ((0, _utils.isDefined)(this._parent)) {
        var _parent2;

        return (_parent2 = this._parent).or.apply(_parent2, args);
      }

      return this.join('$or', args);
    }

    /**
     * Adds an exists filter to the query. Requires `field` to exist if `flag` is
     * `true`, or not to exist if `flag` is `false`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/exists
     *
     * @param {string} field Field
     * @param {boolean} [flag=true] The exists flag.
     * @returns {Query} The query.
     */

  }, {
    key: 'exists',
    value: function exists(field, flag) {
      flag = typeof flag === 'undefined' ? true : flag || false;
      return this.addFilter(field, '$exists', flag);
    }

    /**
     * Adds a modulus filter to the query. Requires `field` modulo `divisor` to
     * have remainder `remainder`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/mod
     *
     * @param {string} field Field
     * @param {number} divisor Divisor
     * @param {number} [remainder=0] Remainder
     * @throws {QueryError} `divisor` must be of type: `number`.
     * @throws {QueryError} `remainder` must be of type: `number`.
     * @returns {Query} The query.
     */

  }, {
    key: 'mod',
    value: function mod(field, divisor) {
      var remainder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (typeof divisor === 'string') {
        divisor = parseFloat(divisor);
      }

      if (typeof remainder === 'string') {
        remainder = parseFloat(remainder);
      }

      if (!(0, _utils.isNumber)(divisor)) {
        throw new _errors.QueryError('divisor must be a number');
      }

      if (!(0, _utils.isNumber)(remainder)) {
        throw new _errors.QueryError('remainder must be a number');
      }

      return this.addFilter(field, '$mod', [divisor, remainder]);
    }

    /**
     * Adds a match filter to the query. Requires `field` to match `regExp`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/regex
     *
     * @param {string} field Field
     * @param {RegExp|string} regExp Regular expression.
     * @param {Object} [options] Options
     * @param {boolean} [options.ignoreCase=inherit] Toggles case-insensitivity.
     * @param {boolean} [options.multiline=inherit] Toggles multiline matching.
     * @param {boolean} [options.extended=false] Toggles extended capability.
     * @param {boolean} [options.dotMatchesAll=false] Toggles dot matches all.
     * @returns {Query} The query.
     */

  }, {
    key: 'matches',
    value: function matches(field, regExp) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var flags = [];

      if (!(regExp instanceof RegExp)) {
        regExp = new RegExp(regExp);
      }

      if (regExp.source.indexOf('^') !== 0) {
        throw new _errors.QueryError('regExp must have \'^\' at the beginning of the expression' + ' to make it an anchored expression.');
      }

      if ((regExp.ignoreCase || options.ignoreCase) && options.ignoreCase !== false) {
        throw new _errors.QueryError('ignoreCase flag is not supported');
      }

      if ((regExp.multiline || options.multiline) && options.multiline !== false) {
        flags.push('m');
      }

      if (options.extended === true) {
        flags.push('x');
      }

      if (options.dotMatchesAll === true) {
        flags.push('s');
      }

      if (flags.length > 0) {
        this.addFilter(field, '$options', flags.join(''));
      }

      return this.addFilter(field, '$regex', regExp.source);
    }

    /**
     * Adds a near filter to the query. Requires `field` to be a coordinate
     * within `maxDistance` of `coord`. Sorts documents from nearest to farthest.
     * @see https://docs.mongodb.com/manual/reference/operator/query/near
     *
     * @param {string} field The field.
     * @param {Array<number, number>} coord The coordinate (longitude, latitude).
     * @param {number} [maxDistance] The maximum distance (miles).
     * @throws {QueryError} `coord` must be of type `Array<number, number>`.
     * @returns {Query} The query.
     */

  }, {
    key: 'near',
    value: function near(field, coord, maxDistance) {
      if (!Array.isArray(coord) || !(0, _utils.isNumber)(coord[0]) || !(0, _utils.isNumber)(coord[1])) {
        throw new _errors.QueryError('coord must be a [number, number]');
      }

      var result = this.addFilter(field, '$nearSphere', [coord[0], coord[1]]);

      if ((0, _utils.isNumber)(maxDistance)) {
        this.addFilter(field, '$maxDistance', maxDistance);
      }

      return result;
    }

    /**
     * Adds a within box filter to the query. Requires `field` to be a coordinate
     * within the bounds of the rectangle defined by `bottomLeftCoord`,
     * `bottomRightCoord`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/box
     *
     * @param {string} field The field.
     * @param {Array<number, number>} bottomLeftCoord The bottom left coordinate (longitude, latitude).
     * @param {Array<number, number>} upperRightCoord The bottom right coordinate (longitude, latitude).
     * @throws {QueryError} `bottomLeftCoord` must be of type `Array<number, number>`.
     * @throws {QueryError} `bottomRightCoord` must be of type `Array<number, number>`.
     * @returns {Query} The query.
     */

  }, {
    key: 'withinBox',
    value: function withinBox(field, bottomLeftCoord, upperRightCoord) {
      if (!Array.isArray(bottomLeftCoord) || !(0, _utils.isNumber)(bottomLeftCoord[0]) || !(0, _utils.isNumber)(bottomLeftCoord[1])) {
        throw new _errors.QueryError('bottomLeftCoord must be a [number, number]');
      }

      if (!Array.isArray(upperRightCoord) || !(0, _utils.isNumber)(upperRightCoord[0]) || !(0, _utils.isNumber)(upperRightCoord[1])) {
        throw new _errors.QueryError('upperRightCoord must be a [number, number]');
      }

      bottomLeftCoord[0] = parseFloat(bottomLeftCoord[0]);
      bottomLeftCoord[1] = parseFloat(bottomLeftCoord[1]);
      upperRightCoord[0] = parseFloat(upperRightCoord[0]);
      upperRightCoord[1] = parseFloat(upperRightCoord[1]);

      var coords = [[bottomLeftCoord[0], bottomLeftCoord[1]], [upperRightCoord[0], upperRightCoord[1]]];
      return this.addFilter(field, '$within', { $box: coords });
    }

    /**
     * Adds a within polygon filter to the query. Requires `field` to be a
     * coordinate within the bounds of the polygon defined by `coords`.
     * @see https://docs.mongodb.com/manual/reference/operator/query/polygon
     *
     * @param {string} field The field.
     * @param {Array<Array<number, number>>} coords List of coordinates.
     * @throws {QueryError} `coords` must be of type `Array<Array<number, number>>`.
     * @returns {Query} The query.
     */

  }, {
    key: 'withinPolygon',
    value: function withinPolygon(field, coords) {
      if (Array.isArray(coords) === false || coords.length === 0 || coords.length > 3) {
        throw new _errors.QueryError('coords must be a [[number, number]]');
      }

      coords = coords.map(function (coord) {
        if ((0, _utils.isNumber)(coord[0]) === false || (0, _utils.isNumber)(coord[1]) === false) {
          throw new _errors.QueryError('coords argument must be a [number, number]');
        }

        return [parseFloat(coord[0]), parseFloat(coord[1])];
      });

      return this.addFilter(field, '$within', { $polygon: coords });
    }

    /**
     * Adds a size filter to the query. Requires `field` to be an `Array` with
     * exactly `size` members.
     * @see https://docs.mongodb.com/manual/reference/operator/query/size
     *
     * @param {string} field Field
     * @param {number} size Size
     * @throws {QueryError} `size` must be of type: `number`.
     * @returns {Query} The query.
     */

  }, {
    key: 'size',
    value: function size(field, _size) {
      if (typeof _size === 'string') {
        _size = parseFloat(_size);
      }

      if (!(0, _utils.isNumber)(_size)) {
        throw new _errors.QueryError('size must be a number');
      }

      return this.addFilter(field, '$size', _size);
    }

    /**
     * Adds an ascending sort modifier to the query. Sorts by `field`, ascending.
     *
     * @param {string} field Field
     * @returns {Query} The query.
     */

  }, {
    key: 'ascending',
    value: function ascending(field) {
      if ((0, _utils.isDefined)(this._parent)) {
        this._parent.ascending(field);
      } else {
        this.sort[field] = 1;
      }

      return this;
    }

    /**
     * Adds an descending sort modifier to the query. Sorts by `field`,
     * descending.
     *
     * @param {string} field Field
     * @returns {Query} The query.
     */

  }, {
    key: 'descending',
    value: function descending(field) {
      if ((0, _utils.isDefined)(this._parent)) {
        this._parent.descending(field);
      } else {
        this.sort[field] = -1;
      }

      return this;
    }

    /**
     * Adds a filter to the query.
     *
     * @param {string} field Field
     * @param {string} condition Condition
     * @param {*} values Values
     * @returns {Query} The query.
     */

  }, {
    key: 'addFilter',
    value: function addFilter(field, condition, values) {
      if ((0, _utils.isDefined)(condition) && ((0, _utils.isDefined)(values) || arguments.length === 3)) {
        if (!(0, _isPlainObject2.default)(this.filter[field])) {
          this.filter[field] = {};
        }

        this.filter[field][condition] = values;
      } else {
        this.filter[field] = condition;
      }

      return this;
    }

    /**
     * @private
     * Joins the current query with another query using an operator.
     *
     * @param {string} operator Operator
     * @param {Query[]|Object[]} queries Queries
     * @throws {QueryError} `query` must be of type `Query[]` or `Object[]`.
     * @returns {Query} The query.
     */

  }, {
    key: 'join',
    value: function join(operator, queries) {
      var _this2 = this;

      var that = this;
      var currentQuery = {};

      // Cast, validate, and parse arguments. If `queries` are supplied, obtain
      // the `filter` for joining. The eventual return function will be the
      // current query.
      queries = queries.map(function (query) {
        if (!(query instanceof Query)) {
          if ((0, _isPlainObject2.default)(query)) {
            query = new Query(query);
          } else {
            throw new _errors.QueryError('query argument must be of type: Kinvey.Query[] or Object[].');
          }
        }

        return query.toPlainObject().filter;
      });

      // If there are no `queries` supplied, create a new (empty) `Query`.
      // This query is the right-hand side of the join expression, and will be
      // returned to allow for a fluent interface.
      if (queries.length === 0) {
        that = new Query();
        queries = [that.toPlainObject().filter];
        that._parent = this; // Required for operator precedence and `toJSON`.
      }

      // Join operators operate on the top-level of `filter`. Since the `toJSON`
      // magic requires `filter` to be passed by reference, we cannot simply re-
      // assign `filter`. Instead, empty it without losing the reference.
      var members = Object.keys(this.filter);
      members.forEach(function (member) {
        currentQuery[member] = _this2.filter[member];
        delete _this2.filter[member];
      });

      // `currentQuery` is the left-hand side query. Join with `queries`.
      this.filter[operator] = [currentQuery].concat(queries);

      // Return the current query if there are `queries`, and the new (empty)
      // `PrivateQuery` otherwise.
      return that;
    }

    /**
     * @private
     * Processes the data by applying fields, sort, limit, and skip.
     *
     * @param {Array} data The raw data.
     * @throws {QueryError} `data` must be of type `Array`.
     * @returns {Array} The processed data.
     */

  }, {
    key: 'process',
    value: function process(data) {
      if (!this.isSupportedOffline()) {
        var message = 'This query is not able to run locally. The following filters are not supported' + ' locally:';

        UNSUPPORTED_CONDITIONS.forEach(function (filter) {
          message = message + ' ' + filter;
        });

        _log.Log.error(message);
        throw new _errors.QueryError(message);
      }

      // Validate arguments.
      if (!Array.isArray(data)) {
        throw new _errors.QueryError('data argument must be of type: Array.');
      }

      _log.Log.debug('Data length before processiong query', data.length);

      // Apply the query
      var json = this.toPlainObject();
      data = (0, _sift2.default)(json.filter, data);

      _log.Log.debug('Data length after applying query filter', json.filter, data.length);

      /* eslint-disable no-restricted-syntax, no-prototype-builtins  */
      // Sorting.
      if ((0, _utils.isDefined)(json.sort)) {
        _log.Log.debug('Sorting data', json.sort);
        data.sort(function (a, b) {
          for (var field in json.sort) {
            if (json.sort.hasOwnProperty(field)) {
              // Find field in objects.
              var aField = (0, _utils.nested)(a, field);
              var bField = (0, _utils.nested)(b, field);

              if ((0, _utils.isDefined)(aField) && (0, _utils.isDefined)(bField) === false) {
                return -1;
              } else if ((0, _utils.isDefined)(bField) && (0, _utils.isDefined)(aField) === false) {
                return 1;
              } else if (aField !== bField) {
                var modifier = json.sort[field]; // 1 or -1.
                return (aField < bField ? -1 : 1) * modifier;
              }
            }
          }

          return 0;
        });
      }
      /* eslint-enable no-restricted-syntax, no-prototype-builtins */

      // Remove fields
      if (Array.isArray(json.fields) && json.fields.length > 0) {
        _log.Log.debug('Removing fields from data', json.fields);
        data = data.map(function (item) {
          var keys = Object.keys(item);
          keys.forEach(function (key) {
            if (json.fields.indexOf(key) === -1) {
              delete item[key];
            }
          });

          return item;
        });
      }

      // Limit and skip.
      if ((0, _utils.isNumber)(json.skip)) {
        if ((0, _utils.isNumber)(json.limit) && json.limit > 0) {
          _log.Log.debug('Skipping and limiting data', json.skip, json.limit);
          return data.slice(json.skip, json.skip + json.limit);
        }

        _log.Log.debug('Skipping data', json.skip);
        return data.slice(json.skip);
      }

      return data;
    }

    /**
     * Returns Object representation of the query.
     *
     * @returns {Object} Object
     */

  }, {
    key: 'toPlainObject',
    value: function toPlainObject() {
      if ((0, _utils.isDefined)(this._parent)) {
        return this._parent.toPlainObject();
      }

      // Return set of parameters.
      var json = {
        fields: this.fields,
        filter: this.filter,
        sort: this.sort,
        skip: this.skip,
        limit: this.limit
      };

      return json;
    }

    /**
     * Returns query string representation of the query.
     *
     * @returns {Object} Query string object.
     */

  }, {
    key: 'toQueryString',
    value: function toQueryString() {
      var queryString = {};

      if (Object.keys(this.filter).length > 0) {
        queryString.query = this.filter;
      }

      if (this.fields.length > 0) {
        queryString.fields = this.fields.join(',');
      }

      if ((0, _utils.isNumber)(this.limit)) {
        queryString.limit = this.limit;
      }

      if ((0, _utils.isNumber)(this.skip) && this.skip > 0) {
        queryString.skip = this.skip;
      }

      if (Object.keys(this.sort).length > 0) {
        queryString.sort = this.sort;
      }

      var keys = Object.keys(queryString);
      keys.forEach(function (key) {
        queryString[key] = typeof queryString[key] === 'string' ? queryString[key] : JSON.stringify(queryString[key]);
      });

      return queryString;
    }

    /**
     * Returns query string representation of the query.
     *
     * @return {string} Query string string.
     */

  }, {
    key: 'toString',
    value: function toString() {
      return JSON.stringify(this.toQueryString());
    }
  }, {
    key: 'fields',
    get: function get() {
      return this._fields;
    }

    /**
     * @type {string[]}
     */
    ,
    set: function set(fields) {
      fields = fields || [];

      if (!Array.isArray(fields)) {
        throw new _errors.QueryError('fields must be an Array');
      }

      if ((0, _utils.isDefined)(this._parent)) {
        this._parent.fields = fields;
      } else {
        this._fields = fields;
      }
    }

    /**
     * @type {Object}
     */

  }, {
    key: 'filter',
    get: function get() {
      return this._filter;
    }

    /**
     * @type {Object}
     */
    ,
    set: function set(filter) {
      this._filter = filter;
    }

    /**
     * @type {Object}
     */

  }, {
    key: 'sort',
    get: function get() {
      return this._sort;
    }

    /**
     * @type {Object}
     */
    ,
    set: function set(sort) {
      if (sort && !(0, _isPlainObject2.default)(sort)) {
        throw new _errors.QueryError('sort must an Object');
      }

      if ((0, _utils.isDefined)(this._parent)) {
        this._parent.sort = sort;
      } else {
        this._sort = sort || {};
      }
    }

    /**
     * @type {?number}
     */

  }, {
    key: 'limit',
    get: function get() {
      return this._limit;
    }

    /**
     * @type {?number}
     */
    ,
    set: function set(limit) {
      if (typeof limit === 'string') {
        limit = parseFloat(limit);
      }

      if ((0, _utils.isDefined)(limit) && (0, _utils.isNumber)(limit) === false) {
        throw new _errors.QueryError('limit must be a number');
      }

      if (this._parent) {
        this._parent.limit = limit;
      } else {
        this._limit = limit;
      }
    }

    /**
     * @type {number}
     */

  }, {
    key: 'skip',
    get: function get() {
      return this._skip;
    }

    /**
     * @type {number}
     */
    ,
    set: function set(skip) {
      if (typeof skip === 'string') {
        skip = parseFloat(skip);
      }

      if ((0, _utils.isNumber)(skip) === false) {
        throw new _errors.QueryError('skip must be a number');
      }

      if ((0, _utils.isDefined)(this._parent)) {
        this._parent.skip = skip;
      } else {
        this._skip = skip;
      }
    }
  }]);

  return Query;
}();

exports.Query = Query;

/***/ }),
/* 13 */
/*!***************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_root.js ***!
  \***************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ 93);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 14 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isObject.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 15 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isObjectLike.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 16 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isArrayLike.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ 19),
    isLength = __webpack_require__(/*! ./isLength */ 65);

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),
/* 17 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/assign.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(/*! ./_assignValue */ 62),
    copyObject = __webpack_require__(/*! ./_copyObject */ 25),
    createAssigner = __webpack_require__(/*! ./_createAssigner */ 73),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ 31),
    keys = __webpack_require__(/*! ./keys */ 20);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function(object, source) {
  if (isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

module.exports = assign;


/***/ }),
/* 18 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseGetTag.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 26),
    getRawTag = __webpack_require__(/*! ./_getRawTag */ 146),
    objectToString = __webpack_require__(/*! ./_objectToString */ 147);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),
/* 19 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isFunction.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 18),
    isObject = __webpack_require__(/*! ./isObject */ 14);

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),
/* 20 */
/*!**************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/keys.js ***!
  \**************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ 99),
    baseKeys = __webpack_require__(/*! ./_baseKeys */ 101),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16);

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),
/* 21 */
/*!**************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/log.js ***!
  \**************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Log = undefined;

var _loglevel = __webpack_require__(/*! loglevel */ 261);

var _loglevel2 = _interopRequireDefault(_loglevel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_loglevel2.default.setDefaultLevel(_loglevel2.default.levels.SILENT);

var originalFactory = _loglevel2.default.methodFactory;
_loglevel2.default.methodFactory = function methodFactory(methodName, logLevel, loggerName) {
  var rawMethod = originalFactory(methodName, logLevel, loggerName);

  return function log(message) {
    message = 'Kinvey: ' + message;

    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (args.length > 0) {
      rawMethod(message, args);
    } else {
      rawMethod(message);
    }
  };
};

exports.Log = _loglevel2.default;

/***/ }),
/* 22 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseIteratee.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseMatches = __webpack_require__(/*! ./_baseMatches */ 267),
    baseMatchesProperty = __webpack_require__(/*! ./_baseMatchesProperty */ 276),
    identity = __webpack_require__(/*! ./identity */ 46),
    isArray = __webpack_require__(/*! ./isArray */ 4),
    property = __webpack_require__(/*! ./property */ 286);

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;


/***/ }),
/* 23 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 24 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getNative.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ 165),
    getValue = __webpack_require__(/*! ./_getValue */ 168);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),
/* 25 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_copyObject.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(/*! ./_assignValue */ 62),
    baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ 63);

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),
/* 26 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_Symbol.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ 13);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),
/* 27 */
/*!**********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/aggregation.js ***!
  \**********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Aggregation = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _assign = __webpack_require__(/*! lodash/assign */ 17);

var _assign2 = _interopRequireDefault(_assign);

var _forEach = __webpack_require__(/*! lodash/forEach */ 48);

var _forEach2 = _interopRequireDefault(_forEach);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _isObject = __webpack_require__(/*! lodash/isObject */ 14);

var _isObject2 = _interopRequireDefault(_isObject);

var _isFunction = __webpack_require__(/*! lodash/isFunction */ 19);

var _isFunction2 = _interopRequireDefault(_isFunction);

var _cloneDeep = __webpack_require__(/*! lodash/cloneDeep */ 95);

var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

var _errors = __webpack_require__(/*! ./errors */ 1);

var _utils = __webpack_require__(/*! ./utils */ 2);

var _query = __webpack_require__(/*! ./query */ 12);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Aggregation = exports.Aggregation = function () {
  function Aggregation(options) {
    _classCallCheck(this, Aggregation);

    options = (0, _assign2.default)({
      query: null,
      initial: {},
      key: {},
      reduceFn: function () {}.toString()
    }, options);

    this.query = options.query;
    this.initial = options.initial;
    this.key = options.key;
    this.reduceFn = options.reduceFn;
  }

  _createClass(Aggregation, [{
    key: 'by',
    value: function by(field) {
      this.key[field] = true;
      return this;
    }
  }, {
    key: 'process',
    value: function process() {
      var entities = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      var aggregation = this.toPlainObject();
      var keys = Object.keys(aggregation.key);
      var reduceFn = aggregation.reduceFn.replace(/function[\s\S]*?\([\s\S]*?\)/, '');
      aggregation.reduce = new Function(['doc', 'out'], reduceFn); // eslint-disable-line no-new-func

      if (this.query) {
        entities = this.query.process(entities);
      }

      if (keys.length > 0) {
        var results = [];

        keys.forEach(function (key) {
          var groups = {};

          entities.forEach(function (entity) {
            var keyVal = entity[key];
            var result = (0, _utils.isDefined)(groups[keyVal]) ? groups[keyVal] : (0, _cloneDeep2.default)(aggregation.initial);
            var newResult = aggregation.reduce(entity, result);

            if ((0, _utils.isDefined)(newResult)) {
              result = newResult;
            }

            groups[keyVal] = result;
          });

          Object.keys(groups).forEach(function (groupKey) {
            var result = {};
            result[key] = groupKey;
            result = (0, _assign2.default)({}, result, groups[groupKey]);
            results.push(result);
          });
        });

        return results;
      }

      var result = (0, _cloneDeep2.default)(aggregation.initial);
      (0, _forEach2.default)(entities, function (entity) {
        var newResult = aggregation.reduce(entity, result);

        if ((0, _utils.isDefined)(newResult)) {
          result = newResult;
        }
      });
      return result;
    }
  }, {
    key: 'toPlainObject',
    value: function toPlainObject() {
      return {
        key: this.key,
        initial: this.initial,
        reduce: this.reduceFn,
        reduceFn: this.reduceFn,
        condition: this.query ? this.query.toPlainObject().filter : {},
        query: this.query ? this.query.toPlainObject() : null
      };
    }
  }, {
    key: 'initial',
    get: function get() {
      return (0, _cloneDeep2.default)(this._initial);
    },
    set: function set(initial) {
      if (!(0, _isObject2.default)(initial)) {
        throw new _errors.KinveyError('initial must be an Object.');
      }

      this._initial = initial;
    }
  }, {
    key: 'query',
    get: function get() {
      return this._query;
    },
    set: function set(query) {
      if ((0, _utils.isDefined)(query) && !(query instanceof _query.Query)) {
        throw new _errors.KinveyError('Invalid query. It must be an instance of the Query class.');
      }

      this._query = query;
    }
  }, {
    key: 'reduceFn',
    get: function get() {
      return this._reduceFn;
    },
    set: function set(fn) {
      if ((0, _isFunction2.default)(fn)) {
        fn = fn.toString();
      }

      if (!(0, _isString2.default)(fn)) {
        throw new _errors.KinveyError('fn argument must be of type function or string.');
      }

      this._reduceFn = fn;
    }
  }], [{
    key: 'count',
    value: function count() {
      var field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      field = field.replace('\'', '\\\'');

      var aggregation = new Aggregation();
      aggregation.by(field);
      aggregation.initial = { count: 0 };
      aggregation.reduceFn = '' + 'function(doc, out) {' + '  out.count += 1;' + '  return out;' + '}';
      return aggregation;
    }
  }, {
    key: 'sum',
    value: function sum() {
      var field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      field = field.replace('\'', '\\\'');

      var aggregation = new Aggregation();
      // aggregation.by(field);
      aggregation.initial = { sum: 0 };
      aggregation.reduceFn = '' + 'function(doc, out) {' + ('  out.sum += doc["' + field + '"];') + '  return out;' + '}';
      return aggregation;
    }
  }, {
    key: 'min',
    value: function min() {
      var field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      field = field.replace('\'', '\\\'');

      var aggregation = new Aggregation();
      // aggregation.by(field);
      aggregation.initial = { min: Infinity };
      aggregation.reduceFn = '' + 'function(doc, out) {' + ('  out.min = Math.min(out.min, doc["' + field + '"]);') + '  return out;' + '}';
      return aggregation;
    }
  }, {
    key: 'max',
    value: function max() {
      var field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      field = field.replace('\'', '\\\'');

      var aggregation = new Aggregation();
      // aggregation.by(field);
      aggregation.initial = { max: -Infinity };
      aggregation.reduceFn = '' + 'function(doc, out) {' + ('  out.max = Math.max(out.max, doc["' + field + '"]);') + '  return out;' + '}';
      return aggregation;
    }
  }, {
    key: 'average',
    value: function average() {
      var field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      field = field.replace('\'', '\\\'');

      var aggregation = new Aggregation();
      // aggregation.by(field);
      aggregation.initial = { count: 0, average: 0 };
      aggregation.reduceFn = '' + 'function(doc, out) {' + ('  out.average = (out.average * out.count + doc["' + field + '"]) / (out.count + 1);') + '  out.count += 1;' + '  return out;' + '}';
      return aggregation;
    }
  }]);

  return Aggregation;
}();

/***/ }),
/* 28 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_toKey.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ 52);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),
/* 29 */
/*!************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/components/config.js ***!
  \************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _uuid = __webpack_require__(/*! ./uuid */ 90);

var _uuid2 = _interopRequireDefault(_uuid);

var _flow_interfaces = __webpack_require__(/*! ../flow_interfaces */ 3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _class = function () {
  function _class(_ref) {
    var setup = _ref.setup,
        db = _ref.db;

    _classCallCheck(this, _class);

    this._db = db;

    this.instanceId = 'pn-' + _uuid2.default.createUUID();
    this.secretKey = setup.secretKey || setup.secret_key;
    this.subscribeKey = setup.subscribeKey || setup.subscribe_key;
    this.publishKey = setup.publishKey || setup.publish_key;
    this.sdkName = setup.sdkName;
    this.sdkFamily = setup.sdkFamily;
    this.partnerId = setup.partnerId;
    this.setAuthKey(setup.authKey);
    this.setCipherKey(setup.cipherKey);

    this.setFilterExpression(setup.filterExpression);

    this.origin = setup.origin || 'pubsub.pndsn.com';
    this.secure = setup.ssl || false;
    this.restore = setup.restore || false;
    this.proxy = setup.proxy;
    this.keepAlive = setup.keepAlive;
    this.keepAliveSettings = setup.keepAliveSettings;
    this.autoNetworkDetection = setup.autoNetworkDetection || false;

    this.dedupeOnSubscribe = setup.dedupeOnSubscribe || false;
    this.maximumCacheSize = setup.maximumCacheSize || 100;

    this.customEncrypt = setup.customEncrypt;
    this.customDecrypt = setup.customDecrypt;

    if (typeof location !== 'undefined' && location.protocol === 'https:') {
      this.secure = true;
    }

    this.logVerbosity = setup.logVerbosity || false;
    this.suppressLeaveEvents = setup.suppressLeaveEvents || false;

    this.announceFailedHeartbeats = setup.announceFailedHeartbeats || true;
    this.announceSuccessfulHeartbeats = setup.announceSuccessfulHeartbeats || false;

    this.useInstanceId = setup.useInstanceId || false;
    this.useRequestId = setup.useRequestId || false;

    this.requestMessageCountThreshold = setup.requestMessageCountThreshold;

    this.setTransactionTimeout(setup.transactionalRequestTimeout || 15 * 1000);

    this.setSubscribeTimeout(setup.subscribeRequestTimeout || 310 * 1000);

    this.setSendBeaconConfig(setup.useSendBeacon || true);

    this.setPresenceTimeout(setup.presenceTimeout || 300);

    if (setup.heartbeatInterval != null) {
      this.setHeartbeatInterval(setup.heartbeatInterval);
    }

    this.setUUID(this._decideUUID(setup.uuid));
  }

  _createClass(_class, [{
    key: 'getAuthKey',
    value: function getAuthKey() {
      return this.authKey;
    }
  }, {
    key: 'setAuthKey',
    value: function setAuthKey(val) {
      this.authKey = val;return this;
    }
  }, {
    key: 'setCipherKey',
    value: function setCipherKey(val) {
      this.cipherKey = val;return this;
    }
  }, {
    key: 'getUUID',
    value: function getUUID() {
      return this.UUID;
    }
  }, {
    key: 'setUUID',
    value: function setUUID(val) {
      if (this._db && this._db.set) this._db.set(this.subscribeKey + 'uuid', val);
      this.UUID = val;
      return this;
    }
  }, {
    key: 'getFilterExpression',
    value: function getFilterExpression() {
      return this.filterExpression;
    }
  }, {
    key: 'setFilterExpression',
    value: function setFilterExpression(val) {
      this.filterExpression = val;return this;
    }
  }, {
    key: 'getPresenceTimeout',
    value: function getPresenceTimeout() {
      return this._presenceTimeout;
    }
  }, {
    key: 'setPresenceTimeout',
    value: function setPresenceTimeout(val) {
      this._presenceTimeout = val;
      this.setHeartbeatInterval(this._presenceTimeout / 2 - 1);
      return this;
    }
  }, {
    key: 'getHeartbeatInterval',
    value: function getHeartbeatInterval() {
      return this._heartbeatInterval;
    }
  }, {
    key: 'setHeartbeatInterval',
    value: function setHeartbeatInterval(val) {
      this._heartbeatInterval = val;return this;
    }
  }, {
    key: 'getSubscribeTimeout',
    value: function getSubscribeTimeout() {
      return this._subscribeRequestTimeout;
    }
  }, {
    key: 'setSubscribeTimeout',
    value: function setSubscribeTimeout(val) {
      this._subscribeRequestTimeout = val;return this;
    }
  }, {
    key: 'getTransactionTimeout',
    value: function getTransactionTimeout() {
      return this._transactionalRequestTimeout;
    }
  }, {
    key: 'setTransactionTimeout',
    value: function setTransactionTimeout(val) {
      this._transactionalRequestTimeout = val;return this;
    }
  }, {
    key: 'isSendBeaconEnabled',
    value: function isSendBeaconEnabled() {
      return this._useSendBeacon;
    }
  }, {
    key: 'setSendBeaconConfig',
    value: function setSendBeaconConfig(val) {
      this._useSendBeacon = val;return this;
    }
  }, {
    key: 'getVersion',
    value: function getVersion() {
      return '4.19.0';
    }
  }, {
    key: '_decideUUID',
    value: function _decideUUID(providedUUID) {
      if (providedUUID) {
        return providedUUID;
      }

      if (this._db && this._db.get && this._db.get(this.subscribeKey + 'uuid')) {
        return this._db.get(this.subscribeKey + 'uuid');
      }

      return 'pn-' + _uuid2.default.createUUID();
    }
  }]);

  return _class;
}();

exports.default = _class;
module.exports = exports['default'];
//# sourceMappingURL=config.js.map


/***/ }),
/* 30 */
/*!************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/eq.js ***!
  \************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),
/* 31 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_isPrototype.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),
/* 32 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isPlainObject.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 18),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ 68),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 15);

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),
/* 33 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseEach.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(/*! ./_baseForOwn */ 262),
    createBaseEach = __webpack_require__(/*! ./_createBaseEach */ 265);

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;


/***/ }),
/* 34 */
/*!***************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/response.js ***!
  \***************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KinveyResponse = exports.Response = exports.StatusCode = undefined;

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _assign = __webpack_require__(/*! lodash/assign */ 17);

var _assign2 = _interopRequireDefault(_assign);

var _headers = __webpack_require__(/*! ./headers */ 50);

var _errors = __webpack_require__(/*! ../errors */ 1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var StatusCode = exports.StatusCode = {
  Ok: 200,
  Created: 201,
  Empty: 204,
  MovedPermanently: 301,
  Found: 302,
  NotModified: 304,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  Unauthorized: 401,
  Forbidden: 403,
  NotFound: 404,
  ServerError: 500
};
Object.freeze(StatusCode);

var Response = exports.Response = function () {
  function Response() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Response);

    options = (0, _assign2.default)({
      statusCode: StatusCode.Empty,
      headers: new _headers.Headers(),
      data: null
    }, options);

    this.statusCode = options.statusCode;
    this.headers = options.headers;
    this.data = options.data;
  }

  _createClass(Response, [{
    key: 'isSuccess',
    value: function isSuccess() {
      return this.statusCode >= 200 && this.statusCode < 300 || this.statusCode === StatusCode.MovedPermanently || this.statusCode === StatusCode.Found || this.statusCode === StatusCode.NotModified || this.statusCode === StatusCode.TemporaryRedirect || this.statusCode === StatusCode.PermanentRedirect;
    }
  }, {
    key: 'isServerError',
    value: function isServerError() {
      return this.statusCode >= 500 && this.statusCode < 600;
    }
  }, {
    key: 'isClientError',
    value: function isClientError() {
      return this.statusCode >= 400 && this.statusCode < 500;
    }
  }, {
    key: 'toPlainObject',
    value: function toPlainObject() {
      return {
        statusCode: this.statusCode,
        headers: this.headers.toPlainObject(),
        data: this.data
      };
    }
  }, {
    key: 'headers',
    get: function get() {
      return this._headers;
    },
    set: function set(headers) {
      if (!(headers instanceof _headers.Headers)) {
        headers = new _headers.Headers(headers);
      }

      this._headers = headers;
    }
  }, {
    key: 'error',
    get: function get() {
      if (this.isSuccess()) {
        return null;
      }

      var data = this.data || {};
      var message = data.message || data.description;
      var debug = data.debug;
      var code = this.statusCode;
      var kinveyRequestId = this.headers.get('X-Kinvey-Request-ID');
      var error = void 0;

      if (code === StatusCode.Unauthorized) {
        error = new _errors.InsufficientCredentialsError(message, debug, code, kinveyRequestId);
      } else if (code === StatusCode.NotFound) {
        error = new _errors.NotFoundError(message, debug, code, kinveyRequestId);
      } else if (code === StatusCode.ServerError) {
        error = new _errors.ServerError(message, debug, code, kinveyRequestId);
      } else {
        error = new _errors.KinveyError(message, debug, code, kinveyRequestId);
      }

      return error;
    }
  }]);

  return Response;
}();

var KinveyResponse = exports.KinveyResponse = function (_Response) {
  _inherits(KinveyResponse, _Response);

  function KinveyResponse() {
    _classCallCheck(this, KinveyResponse);

    return _possibleConstructorReturn(this, (KinveyResponse.__proto__ || Object.getPrototypeOf(KinveyResponse)).apply(this, arguments));
  }

  _createClass(KinveyResponse, [{
    key: 'error',
    get: function get() {
      if (this.isSuccess()) {
        return null;
      }

      var data = this.data || {};
      var name = data.name || data.error;
      var message = data.message || data.description;
      var debug = data.debug;
      var code = this.statusCode;
      var kinveyRequestId = this.headers.get('X-Kinvey-Request-ID');
      var error = void 0;

      if (name === 'APIVersionNotAvailable') {
        error = new _errors.APIVersionNotAvailableError(message, debug, code, kinveyRequestId);
      } else if (name === 'APIVersionNotImplemented') {
        error = new _errors.APIVersionNotImplementedError(message, debug, code, kinveyRequestId);
      } else if (name === 'AppProblem') {
        error = new _errors.AppProblemError(message, debug, code, kinveyRequestId);
      } else if (name === 'AppProblem') {
        error = new _errors.AppProblemError(message, debug, code, kinveyRequestId);
      } else if (name === 'BadRequest') {
        error = new _errors.BadRequestError(message, debug, code, kinveyRequestId);
      } else if (name === 'BLInternalError' || name === 'BLRuntimeError' || name === 'BLSyntaxError' || name === 'BLTimeoutError' || name === 'BLViolationError') {
        error = new _errors.BLError(message, debug, code, kinveyRequestId);
      } else if (name === 'CORSDisabled') {
        error = new _errors.CORSDisabledError(message, debug, code, kinveyRequestId);
      } else if (name === 'DuplicateEndUsers') {
        error = new _errors.DuplicateEndUsersError(message, debug, code, kinveyRequestId);
      } else if (name === 'FeatureUnavailable') {
        error = new _errors.FeatureUnavailableError(message, debug, code, kinveyRequestId);
      } else if (name === 'IncompleteRequestBody') {
        error = new _errors.IncompleteRequestBodyError(message, debug, code, kinveyRequestId);
      } else if (name === 'IndirectCollectionAccessDisallowed') {
        error = new _errors.IndirectCollectionAccessDisallowedError(message, debug, code, kinveyRequestId);
      } else if (name === 'InsufficientCredentials') {
        error = new _errors.InsufficientCredentialsError(message, debug, code, kinveyRequestId);
      } else if (name === 'InvalidCredentials') {
        error = new _errors.InvalidCredentialsError(message, debug, code, kinveyRequestId);
      } else if (name === 'InvalidIdentifier') {
        error = new _errors.InvalidIdentifierError(message, debug, code, kinveyRequestId);
      } else if (name === 'InvalidQuerySyntax') {
        error = new _errors.InvalidQuerySyntaxError(message, debug, code, kinveyRequestId);
      } else if (name === 'JSONParseError') {
        error = new _errors.JSONParseError(message, debug, code, kinveyRequestId);
      } else if (name === 'KinveyInternalErrorRetry') {
        error = new _errors.KinveyInternalErrorRetry(message, debug, code, kinveyRequestId);
      } else if (name === 'KinveyInternalErrorStop') {
        error = new _errors.KinveyInternalErrorStop(message, debug, code, kinveyRequestId);
      } else if (name === 'MissingQuery') {
        error = new _errors.MissingQueryError(message, debug, code, kinveyRequestId);
      } else if (name === 'MissingRequestHeader') {
        error = new _errors.MissingRequestHeaderError(message, debug, code, kinveyRequestId);
      } else if (name === 'MissingRequestParameter') {
        error = new _errors.MissingRequestParameterError(message, debug, code, kinveyRequestId);
      } else if (name === 'EntityNotFound' || name === 'CollectionNotFound' || name === 'AppNotFound' || name === 'UserNotFound' || name === 'BlobNotFound' || name === 'DocumentNotFound') {
        error = new _errors.NotFoundError(message, debug, code, kinveyRequestId);
      } else if (name === 'ParameterValueOutOfRange') {
        error = new _errors.ParameterValueOutOfRangeError(message, debug, code, kinveyRequestId);
      } else if (name === 'ServerError') {
        error = new _errors.ServerError(message, debug, code, kinveyRequestId);
      } else if (name === 'StaleRequest') {
        error = new _errors.StaleRequestError(message, debug, code, kinveyRequestId);
      } else if (name === 'UserAlreadyExists') {
        error = new _errors.UserAlreadyExistsError(message, debug, code, kinveyRequestId);
      } else if (name === 'WritesToCollectionDisallowed') {
        error = new _errors.WritesToCollectionDisallowedError(message, debug, code, kinveyRequestId);
      } else {
        return _get(KinveyResponse.prototype.__proto__ || Object.getPrototypeOf(KinveyResponse.prototype), 'error', this);
      }

      return error;
    }
  }]);

  return KinveyResponse;
}(Response);

/***/ }),
/* 35 */
/*!****************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/middleware/middleware.js ***!
  \****************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Middleware = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _asciitree = __webpack_require__(/*! ./asciitree */ 292);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Middleware = exports.Middleware = function () {
  function Middleware() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Middleware';

    _classCallCheck(this, Middleware);

    this.name = name;
  }

  _createClass(Middleware, [{
    key: 'handle',
    value: function handle() {
      return _es6Promise2.default.reject(new Error('A subclass middleware must override the handle function.'));
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      return _es6Promise2.default.resolve();
    }
  }, {
    key: 'generateTree',
    value: function generateTree() {
      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      var root = {
        value: this.name,
        level: level,
        nodes: []
      };
      return root;
    }
  }, {
    key: 'toString',
    value: function toString() {
      var root = this.generateTree();
      return _asciitree.AsciiTree.generate(root);
    }
  }]);

  return Middleware;
}();

/***/ }),
/* 36 */
/*!*********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/observable.js ***!
  \*********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KinveyObservable = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _Observable2 = __webpack_require__(/*! rxjs/Observable */ 347);

var _Subscriber3 = __webpack_require__(/*! rxjs/Subscriber */ 130);

var _rxSubscriber = __webpack_require__(/*! rxjs/symbol/rxSubscriber */ 87);

var _isFunction = __webpack_require__(/*! lodash/isFunction */ 19);

var _isFunction2 = _interopRequireDefault(_isFunction);

var _utils = __webpack_require__(/*! ./utils */ 2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @private
 */
var emptyObserver = {
  closed: true,
  next: function next() {/* noop */},
  error: function error(err) {
    throw err;
  },
  complete: function complete() {/* noop */},
  status: function status() {/* noop */},
  presence: function presence() {/* noop */}
};

/**
 * @private
 */

var SafeSubscriber = function (_Subscriber) {
  _inherits(SafeSubscriber, _Subscriber);

  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete, status, presence) {
    _classCallCheck(this, SafeSubscriber);

    var _this = _possibleConstructorReturn(this, (SafeSubscriber.__proto__ || Object.getPrototypeOf(SafeSubscriber)).call(this));

    var next = void 0;
    var context = _this;
    _this._parentSubscriber = _parentSubscriber;

    if ((0, _isFunction2.default)(observerOrNext)) {
      next = observerOrNext;
    } else if (observerOrNext) {
      next = observerOrNext.next;
      error = observerOrNext.error;
      complete = observerOrNext.complete;
      if (observerOrNext !== emptyObserver) {
        context = Object.create(observerOrNext);
        if ((0, _isFunction2.default)(context.unsubscribe)) {
          _this.add(context.unsubscribe.bind(context));
        }
        context.unsubscribe = _this.unsubscribe.bind(_this);
      }
    }

    _this._context = context;
    _this._next = next;
    _this._error = error;
    _this._complete = complete;
    _this._status = status;
    _this._presence = presence;
    return _this;
  }

  _createClass(SafeSubscriber, [{
    key: 'next',
    value: function next(value) {
      if (!this.isStopped && this._next) {
        var _parentSubscriber = this._parentSubscriber;

        if (!_parentSubscriber.syncErrorThrowable) {
          this.__tryOrUnsub(this._next, value);
        } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
          this.unsubscribe();
        }
      }
    }
  }, {
    key: 'error',
    value: function error(err) {
      if (!this.isStopped) {
        var _parentSubscriber = this._parentSubscriber;

        if (this._error) {
          if (!_parentSubscriber.syncErrorThrowable) {
            this.__tryOrUnsub(this._error, err);
            this.unsubscribe();
          } else {
            this.__tryOrSetError(_parentSubscriber, this._error, err);
            this.unsubscribe();
          }
        } else if (!_parentSubscriber.syncErrorThrowable) {
          this.unsubscribe();
          throw err;
        } else {
          _parentSubscriber.syncErrorValue = err;
          _parentSubscriber.syncErrorThrown = true;
          this.unsubscribe();
        }
      }
    }
  }, {
    key: 'complete',
    value: function complete() {
      var _this2 = this;

      if (!this.isStopped) {
        var _parentSubscriber = this._parentSubscriber;

        if (this._complete) {
          var wrappedComplete = function wrappedComplete() {
            return _this2._complete.call(_this2._context);
          };

          if (!_parentSubscriber.syncErrorThrowable) {
            this.__tryOrUnsub(wrappedComplete);
            this.unsubscribe();
          } else {
            this.__tryOrSetError(_parentSubscriber, wrappedComplete);
            this.unsubscribe();
          }
        } else {
          this.unsubscribe();
        }
      }
    }
  }, {
    key: 'status',
    value: function status(value) {
      if (!this.isStopped && this._status) {
        var _parentSubscriber = this._parentSubscriber;

        if (!_parentSubscriber.syncErrorThrowable) {
          this.__tryOrUnsub(this._status, value);
        } else if (this.__tryOrSetError(_parentSubscriber, this._status, value)) {
          this.unsubscribe();
        }
      }
    }
  }, {
    key: 'presence',
    value: function presence(value) {
      if (!this.isStopped && this._presence) {
        var _parentSubscriber = this._parentSubscriber;

        if (!_parentSubscriber.syncErrorThrowable) {
          this.__tryOrUnsub(this._presence, value);
        } else if (this.__tryOrSetError(_parentSubscriber, this._presence, value)) {
          this.unsubscribe();
        }
      }
    }
  }, {
    key: '__tryOrUnsub',
    value: function __tryOrUnsub(fn, value) {
      try {
        fn.call(this._context, value);
      } catch (err) {
        this.unsubscribe();
        throw err;
      }
    }
  }, {
    key: '__tryOrSetError',
    value: function __tryOrSetError(parent, fn, value) {
      try {
        fn.call(this._context, value);
      } catch (err) {
        parent.syncErrorValue = err;
        parent.syncErrorThrown = true;
        return true;
      }
      return false;
    }
  }, {
    key: '_unsubscribe',
    value: function _unsubscribe() {
      var _parentSubscriber = this._parentSubscriber;

      this._context = null;
      this._parentSubscriber = null;
      _parentSubscriber.unsubscribe();
    }
  }]);

  return SafeSubscriber;
}(_Subscriber3.Subscriber);

/**
 * @private
 */


var KinveySubscriber = function (_Subscriber2) {
  _inherits(KinveySubscriber, _Subscriber2);

  function KinveySubscriber(observerOrNext, error, complete, status, presence) {
    _classCallCheck(this, KinveySubscriber);

    var _this3 = _possibleConstructorReturn(this, (KinveySubscriber.__proto__ || Object.getPrototypeOf(KinveySubscriber)).call(this, observerOrNext, error, complete));

    switch (arguments.length) {
      case 0:
        _this3.destination = emptyObserver;
        break;
      case 1:
        if ((0, _utils.isDefined)(observerOrNext) === false) {
          _this3.destination = emptyObserver;
          break;
        }
        if ((typeof observerOrNext === 'undefined' ? 'undefined' : _typeof(observerOrNext)) === 'object') {
          if (observerOrNext instanceof _Subscriber3.Subscriber) {
            _this3.destination = observerOrNext;
            _this3.destination.add(_this3);
          } else {
            _this3.syncErrorThrowable = true;
            _this3.destination = new SafeSubscriber(_this3, observerOrNext);
          }
          break;
        }
      default:
        _this3.syncErrorThrowable = true;
        _this3.destination = new SafeSubscriber(_this3, observerOrNext, error, complete, status, presence);
        break;
    }
    return _this3;
  }

  _createClass(KinveySubscriber, [{
    key: 'status',
    value: function status(value) {
      if (!this.isStopped) {
        this._status(value);
      }
    }
  }, {
    key: 'presence',
    value: function presence(value) {
      if (!this.isStopped) {
        this._presence(value);
      }
    }
  }, {
    key: '_status',
    value: function _status(value) {
      this.destination.status(value);
    }
  }, {
    key: '_presence',
    value: function _presence(value) {
      this.destination.presence(value);
    }
  }]);

  return KinveySubscriber;
}(_Subscriber3.Subscriber);

/**
 * @private
 */


function toSubscriber(observerOrNext, error, complete, status, presence) {
  if (observerOrNext) {
    if (observerOrNext instanceof KinveySubscriber) {
      return observerOrNext;
    }

    if (observerOrNext[_rxSubscriber.rxSubscriber]) {
      return observerOrNext[_rxSubscriber.rxSubscriber]();
    }
  }

  if (!observerOrNext && !error && !complete && !status && !presence) {
    return new KinveySubscriber(emptyObserver);
  }

  return new KinveySubscriber(observerOrNext, error, complete, status, presence);
}

/**
 * @private
 */

var KinveyObservable = exports.KinveyObservable = function (_Observable) {
  _inherits(KinveyObservable, _Observable);

  function KinveyObservable() {
    _classCallCheck(this, KinveyObservable);

    return _possibleConstructorReturn(this, (KinveyObservable.__proto__ || Object.getPrototypeOf(KinveyObservable)).apply(this, arguments));
  }

  _createClass(KinveyObservable, [{
    key: 'subscribe',
    value: function subscribe(observerOrNext, error, complete, status, presence) {
      var operator = this.operator;

      var sink = toSubscriber(observerOrNext, error, complete, status, presence);

      if (operator) {
        operator.call(sink, this.source);
      } else {
        sink.add(this._trySubscribe(sink));
      }

      if (sink.syncErrorThrowable) {
        sink.syncErrorThrowable = false;
        if (sink.syncErrorThrown) {
          throw sink.syncErrorValue;
        }
      }

      return sink;
    }
  }, {
    key: 'toPromise',
    value: function toPromise() {
      var _this5 = this;

      return new _es6Promise2.default(function (resolve, reject) {
        var value = void 0;
        _this5.subscribe(function (v) {
          value = v;
        }, reject, function () {
          resolve(value);
        });
      });
    }
  }], [{
    key: 'create',
    value: function create(subscriber) {
      return new KinveyObservable(subscriber);
    }
  }]);

  return KinveyObservable;
}(_Observable2.Observable);

/***/ }),
/* 37 */
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 38 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_ListCache.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(/*! ./_listCacheClear */ 155),
    listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ 156),
    listCacheGet = __webpack_require__(/*! ./_listCacheGet */ 157),
    listCacheHas = __webpack_require__(/*! ./_listCacheHas */ 158),
    listCacheSet = __webpack_require__(/*! ./_listCacheSet */ 159);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),
/* 39 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_assocIndexOf.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ 30);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),
/* 40 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_nativeCreate.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 24);

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),
/* 41 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getMapData.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(/*! ./_isKeyable */ 177);

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),
/* 42 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isArguments.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ 183),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 15);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),
/* 43 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isBuffer.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ 13),
    stubFalse = __webpack_require__(/*! ./stubFalse */ 184);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../../../../../.nvm/versions/node/v8.6.0/lib/node_modules/webpack/buildin/module.js */ 37)(module)))

/***/ }),
/* 44 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_isIndex.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),
/* 45 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/keysIn.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ 99),
    baseKeysIn = __webpack_require__(/*! ./_baseKeysIn */ 189),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16);

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),
/* 46 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/identity.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 47 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isEmpty.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseKeys = __webpack_require__(/*! ./_baseKeys */ 101),
    getTag = __webpack_require__(/*! ./_getTag */ 69),
    isArguments = __webpack_require__(/*! ./isArguments */ 42),
    isArray = __webpack_require__(/*! ./isArray */ 4),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16),
    isBuffer = __webpack_require__(/*! ./isBuffer */ 43),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ 31),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ 64);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike(value) &&
      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
    return !value.length;
  }
  var tag = getTag(value);
  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }
  if (isPrototype(value)) {
    return !baseKeys(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

module.exports = isEmpty;


/***/ }),
/* 48 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/forEach.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayEach = __webpack_require__(/*! ./_arrayEach */ 97),
    baseEach = __webpack_require__(/*! ./_baseEach */ 33),
    castFunction = __webpack_require__(/*! ./_castFunction */ 266),
    isArray = __webpack_require__(/*! ./isArray */ 4);

/**
 * Iterates over elements of `collection` and invokes `iteratee` for each element.
 * The iteratee is invoked with three arguments: (value, index|key, collection).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * **Note:** As with other "Collections" methods, objects with a "length"
 * property are iterated like arrays. To avoid this behavior use `_.forIn`
 * or `_.forOwn` for object iteration.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias each
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEachRight
 * @example
 *
 * _.forEach([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `1` then `2`.
 *
 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forEach(collection, iteratee) {
  var func = isArray(collection) ? arrayEach : baseEach;
  return func(collection, castFunction(iteratee));
}

module.exports = forEach;


/***/ }),
/* 49 */
/*!**************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/request.js ***!
  \**************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Request = exports.RequestMethod = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _qs = __webpack_require__(/*! qs */ 72);

var _qs2 = _interopRequireDefault(_qs);

var _assign = __webpack_require__(/*! lodash/assign */ 17);

var _assign2 = _interopRequireDefault(_assign);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _isNumber = __webpack_require__(/*! lodash/isNumber */ 75);

var _isNumber2 = _interopRequireDefault(_isNumber);

var _client = __webpack_require__(/*! ../client */ 10);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _response = __webpack_require__(/*! ./response */ 34);

var _headers = __webpack_require__(/*! ./headers */ 50);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RequestMethod = exports.RequestMethod = {
  GET: 'GET',
  POST: 'POST',
  PATCH: 'PATCH',
  PUT: 'PUT',
  DELETE: 'DELETE'
};
Object.freeze(RequestMethod);

var Request = exports.Request = function () {
  function Request() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Request);

    options = (0, _assign2.default)({
      followRedirect: true
    }, options);

    this.id = (0, _utils.randomString)();
    this.client = options.client;
    this.method = options.method || RequestMethod.GET;
    this.headers = options.headers || new _headers.Headers();
    this.url = options.url || '';
    this.body = options.body || options.data;
    this.timeout = (0, _utils.isDefined)(options.timeout) ? options.timeout : this.client.defaultTimeout;
    this.followRedirect = options.followRedirect === true;
    this.cache = options.cache === true;
  }

  _createClass(Request, [{
    key: 'execute',
    value: function execute() {
      if ((0, _utils.isDefined)(this.rack) === false) {
        Log.error('Unable to execute the request. Please provide a rack to execute the request.');
        return _es6Promise2.default.reject(new _errors.KinveyError('Unable to execute the request. Please provide a rack to execute the request.'));
      }

      return this.rack.execute(this.toPlainObject()).then(function (response) {
        if ((0, _utils.isDefined)(response) === false) {
          throw new _errors.NoResponseError();
        }

        if (response instanceof _response.Response === false) {
          response = new _response.Response({
            statusCode: response.statusCode,
            headers: response.headers,
            data: response.data
          });
        }

        return response;
      });
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      return this.rack.cancel();
    }
  }, {
    key: 'toPlainObject',
    value: function toPlainObject() {
      return {
        id: this.id,
        method: this.method,
        headers: this.headers.toPlainObject(),
        url: this.url,
        body: this.body,
        timeout: this.timeout,
        followRedirect: this.followRedirect,
        encryptionKey: this.client.encryptionKey
      };
    }
  }, {
    key: 'client',
    get: function get() {
      return this._client || _client.Client.sharedInstance();
    },
    set: function set(client) {
      if (client) {
        if (client instanceof _client.Client === false) {
          throw new _errors.KinveyError('client must be an instance of the Client class.');
        }
      }

      this._client = client;
    }
  }, {
    key: 'method',
    get: function get() {
      return this._method;
    },
    set: function set(method) {
      if (!(0, _isString2.default)(method)) {
        method = String(method);
      }

      method = method.toUpperCase();
      switch (method) {
        case RequestMethod.GET:
        case RequestMethod.POST:
        case RequestMethod.PATCH:
        case RequestMethod.PUT:
        case RequestMethod.DELETE:
          this._method = method;
          break;
        default:
          throw new _errors.KinveyError('Invalid request method. Only GET, POST, PATCH, PUT, and DELETE are allowed.');
      }
    }
  }, {
    key: 'headers',
    get: function get() {
      return this._headers;
    },
    set: function set(headers) {
      if (!(headers instanceof _headers.Headers)) {
        headers = new _headers.Headers(headers);
      }

      this._headers = headers;
    }
  }, {
    key: 'url',
    get: function get() {
      // If `cache` is true, add a cache busting query string.
      // This is useful for Android < 4.0 which caches all requests aggressively.
      if (this.cache === true) {
        return (0, _utils.appendQuery)(this._url, _qs2.default.stringify({
          _: Math.random().toString(36).substr(2)
        }));
      }

      return this._url;
    },
    set: function set(urlString) {
      this._url = urlString;
    }
  }, {
    key: 'data',
    get: function get() {
      return this.body;
    },
    set: function set(data) {
      this.body = data;
    }
  }, {
    key: 'timeout',
    get: function get() {
      return this._timeout;
    },
    set: function set(timeout) {
      timeout = parseInt(timeout, 10);

      if ((0, _isNumber2.default)(timeout) === false || isNaN(timeout)) {
        throw new _errors.KinveyError('Invalid timeout. Timeout must be a number.');
      }

      this._timeout = timeout;
    }
  }, {
    key: 'followRedirect',
    get: function get() {
      return this._followRedirect;
    },
    set: function set(followRedirect) {
      this._followRedirect = !!followRedirect;
    }
  }, {
    key: 'cache',
    get: function get() {
      return this._cache;
    },
    set: function set(cache) {
      this._cache = !!cache;
    }
  }]);

  return Request;
}();

/***/ }),
/* 50 */
/*!**************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/headers.js ***!
  \**************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Headers = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _forEach = __webpack_require__(/*! lodash/forEach */ 48);

var _forEach2 = _interopRequireDefault(_forEach);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _isPlainObject = __webpack_require__(/*! lodash/isPlainObject */ 32);

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _utils = __webpack_require__(/*! ../utils */ 2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Headers = exports.Headers = function () {
  function Headers() {
    var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Headers);

    this.headers = {};
    this.addAll(headers);
  }

  _createClass(Headers, [{
    key: 'get',
    value: function get(name) {
      if (name) {
        if ((0, _isString2.default)(name) === false) {
          name = String(name);
        }

        var headers = this.headers;
        return headers[name.toLowerCase()];
      }

      return undefined;
    }
  }, {
    key: 'set',
    value: function set(name, value) {
      if ((0, _utils.isDefined)(name) === false || (0, _utils.isDefined)(value) === false) {
        throw new Error('A name and value must be provided to set a header.');
      }

      if ((0, _isString2.default)(name) === false) {
        name = String(name);
      }

      var headers = this.headers;
      name = name.toLowerCase();

      if ((0, _isString2.default)(value) === false) {
        headers[name] = JSON.stringify(value);
      } else {
        headers[name] = value;
      }

      this.headers = headers;
      return this;
    }
  }, {
    key: 'has',
    value: function has(name) {
      return !!this.get(name);
    }
  }, {
    key: 'add',
    value: function add() {
      var header = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return this.set(header.name, header.value);
    }
  }, {
    key: 'addAll',
    value: function addAll() {
      var _this = this;

      var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (headers instanceof Headers) {
        headers = headers.toPlainObject();
      }

      if ((0, _isPlainObject2.default)(headers) === false) {
        throw new Error('Headers argument must be an object.');
      }

      var names = Object.keys(headers);
      (0, _forEach2.default)(names, function (name) {
        try {
          _this.set(name, headers[name]);
        } catch (error) {
          // Catch the error
        }
      });
      return this;
    }
  }, {
    key: 'remove',
    value: function remove(name) {
      if (name) {
        if ((0, _isString2.default)(name) === false) {
          name = String(name);
        }

        var headers = this.headers;
        delete headers[name.toLowerCase()];
        this.headers = headers;
      }

      return this;
    }
  }, {
    key: 'clear',
    value: function clear() {
      this.headers = {};
      return this;
    }
  }, {
    key: 'toPlainObject',
    value: function toPlainObject() {
      return this.headers;
    }
  }, {
    key: 'toString',
    value: function toString() {
      return JSON.stringify(this.toPlainObject());
    }
  }]);

  return Headers;
}();

/***/ }),
/* 51 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_castPath.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ 4),
    isKey = __webpack_require__(/*! ./_isKey */ 79),
    stringToPath = __webpack_require__(/*! ./_stringToPath */ 278),
    toString = __webpack_require__(/*! ./toString */ 281);

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),
/* 52 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isSymbol.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 18),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 15);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),
/* 53 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arrayMap.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),
/* 54 */
/*!***********************************************!*\
  !*** (webpack)/node_modules/events/events.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),
/* 55 */
/*!**************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/datastore/index.js ***!
  \**************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cachestore = __webpack_require__(/*! ./cachestore */ 83);

Object.keys(_cachestore).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _cachestore[key];
    }
  });
});

var _networkstore = __webpack_require__(/*! ./networkstore */ 88);

Object.keys(_networkstore).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _networkstore[key];
    }
  });
});

var _syncstore = __webpack_require__(/*! ./syncstore */ 140);

Object.keys(_syncstore).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _syncstore[key];
    }
  });
});

var _datastore = __webpack_require__(/*! ./datastore */ 401);

Object.keys(_datastore).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _datastore[key];
    }
  });
});

var _sync = __webpack_require__(/*! ./sync */ 139);

Object.keys(_sync).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _sync[key];
    }
  });
});

/***/ }),
/* 56 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/live/live-service.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LiveService = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.isValidReceiver = isValidReceiver;
exports.isValidChannelName = isValidChannelName;
exports.getLiveService = getLiveService;

var _pubnub = __webpack_require__(/*! pubnub */ 359);

var _pubnub2 = _interopRequireDefault(_pubnub);

var _isFunction = __webpack_require__(/*! lodash/isFunction */ 19);

var _isFunction2 = _interopRequireDefault(_isFunction);

var _extend = __webpack_require__(/*! lodash/extend */ 393);

var _extend2 = _interopRequireDefault(_extend);

var _client = __webpack_require__(/*! ../client */ 10);

var _request = __webpack_require__(/*! ../request */ 7);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _pubnubListener = __webpack_require__(/*! ./pubnub-listener */ 137);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @typedef LiveServiceReceiver
 * @property {Function} onMessage
 * @property {Function} onError
 * @property {Function} onStatus
 */

/**
 * @param {Object} obj
 * @returns {Boolean}
 */
function isValidReceiver(obj) {
  if (!obj) {
    return false;
  }
  var onMessage = obj.onMessage,
      onError = obj.onError,
      onStatus = obj.onStatus;

  return (0, _isFunction2.default)(onMessage) || (0, _isFunction2.default)(onError) || (0, _isFunction2.default)(onStatus);
}

function isValidChannelName(str) {
  return (0, _utils.isNonemptyString)(str);
}

var LiveService = exports.LiveService = function () {
  /**
   * @param {Client} client
   */
  function LiveService(client) {
    _classCallCheck(this, LiveService);

    this._client = client || _client.Client.sharedInstance();
    this._pubnubClient = undefined;
    this._pubnubListener = undefined;
    this._userChannelGroup = undefined;
    this._pubnubConfig = undefined;
    this._registeredUser = undefined;
  }

  _createClass(LiveService, [{
    key: 'fullInitialization',


    /**
     * Registers user for live service and initializes LiveService instance
     * @param {User} user
     * @returns {Promise}
     */
    value: function fullInitialization(user) {
      var _this = this;

      return this.registerUser(user).then(function (pubnubConfig) {
        // const copy = extend({}, pubnubConfig);
        var pubnubClient = new _pubnub2.default(pubnubConfig);
        var listener = new _pubnubListener.PubNubListener();
        _this.initialize(pubnubClient, listener);
        // return copy;
      });
    }

    /**
     * Unregisters user from live service and uninitializes LiveService instance
     * @param {User} user
     * @returns {Promise}
     */

  }, {
    key: 'fullUninitialization',
    value: function fullUninitialization() {
      var _this2 = this;

      return this.unregisterUser().then(function (resp) {
        _this2.uninitialize();
        return resp;
      });
    }

    /**
     * Checks whether live service is ready to subscribe or publish messages
     * @returns {boolean}
     */

  }, {
    key: 'isInitialized',
    value: function isInitialized() {
      return !!this.__pubnubClient && !!this.__pubnubListener && !!this._registeredUser;
    }

    /**
     * Registers the active user for live service
     * @param {User} user
     * @returns {Promise}
     */

  }, {
    key: 'registerUser',
    value: function registerUser(user) {
      var _this3 = this;

      if (!user || !user.isActive()) {
        return Promise.reject(new _errors.ActiveUserError('Missing or invalid active user'));
      }

      if (this.isInitialized()) {
        return Promise.reject(new _errors.KinveyError('Live service already initialized'));
      }

      return this._makeRegisterRequest(user._id).then(function (regResponse) {
        _this3._registeredUser = user;
        _this3._userChannelGroup = regResponse.userChannelGroup;
        var config = (0, _extend2.default)({
          ssl: true,
          authKey: _this3._registeredUser._kmd.authtoken
        }, regResponse);
        return config;
      });
    }

    /**
     * @param {PubNub} pubnubClient
     * @param {PubNubListener} pubnubListener
     */

  }, {
    key: 'initialize',
    value: function initialize(pubnubClient, pubnubListener) {
      if (this.isInitialized()) {
        throw new _errors.KinveyError('Live service already initialized');
      }

      this._pubnubListener = pubnubListener;
      this._pubnubClient = pubnubClient;
      this._pubnubClient.addListener(this._pubnubListener);
      this._subscribeToUserChannelGroup();
    }

    /**
     * Unsubscribes from all events in PubNub client and in listener
     */

  }, {
    key: 'uninitialize',
    value: function uninitialize() {
      this._unsubscribeFromAll();
      this._pubnubClient = null;
      this._pubnubListener = null;
    }

    /**
     * Attaches a handler for connection status updates
     * @param {Function} func
     */

  }, {
    key: 'onConnectionStatusUpdates',
    value: function onConnectionStatusUpdates(func) {
      this._pubnubListener.on(_pubnubListener.PubNubListener.unclassifiedEvents, func);
      this._pubnubListener.on(this._userChannelGroup, func);
    }

    /**
     * Removes a handler for connection status updates.
     * If no handler is specified, removes all handlers
     * @param {Function} [func]
     */

  }, {
    key: 'offConnectionStatusUpdates',
    value: function offConnectionStatusUpdates(func) {
      if (func) {
        this._pubnubListener.removeListener(_pubnubListener.PubNubListener.unclassifiedEvents, func);
        this._pubnubListener.removeListener(this._userChannelGroup, func);
      } else {
        this._pubnubListener.removeAllListeners(_pubnubListener.PubNubListener.unclassifiedEvents);
        this._pubnubListener.removeAllListeners(this._userChannelGroup);
      }
    }

    /**
     * @param {string} channelName The name of the PubNub channel to publish to
     * @param {Object} message The message to be published
     * @returns {Promise}
     */

  }, {
    key: 'publishToChannel',
    value: function publishToChannel(channelName, message) {
      if (!this.isInitialized()) {
        return Promise.reject(new _errors.KinveyError('Live service is not initialized'));
      }

      var validationErr = this._validatePublishData(channelName, message);
      if (validationErr) {
        return Promise.reject(validationErr);
      }

      return this._pubnubClient.publish({
        message: message,
        channel: channelName
      }).catch(function (err) {
        err = err.status && err.status.errorData;
        var resp = new _request.Response({ data: err, statusCode: err.status, headers: err.response && err.response.headers });
        return Promise.reject(resp);
      });
    }

    /**
     * Start listening for events for specified channel
     * @param {string} channelName
     * @param {LiveServiceReceiver} receiver
     */

  }, {
    key: 'subscribeToChannel',
    value: function subscribeToChannel(channelName, receiver) {
      var validationError = this._validateSubscribeData(channelName, receiver);
      if (validationError) {
        throw validationError;
      }
      this._subscribeToListener(channelName, receiver);
    }

    /**
     * Stop listening for events for specified channel
     * @param {string} channelName
     */

  }, {
    key: 'unsubscribeFromChannel',
    value: function unsubscribeFromChannel(channelName) {
      this._unsubscribeFromListener(channelName);
    }

    /**
     * @param {string} userId
     * @returns {Promise}
     */

  }, {
    key: 'unregisterUser',
    value: function unregisterUser() {
      var _this4 = this;

      if (!this._registeredUser) {
        var msg = 'Cannot unregister when no user has been registered for live service';
        return Promise.reject(new _errors.KinveyError(msg));
      }

      var userId = this._registeredUser._id;
      return this._makeUnregisterRequst(userId).then(function (resp) {
        _this4._registeredUser = null;
        return resp;
      });
    }

    /**
     * Unsubscribes from all channels and channel groups, as well as PubNubListener events
     * @private
     */

  }, {
    key: '_unsubscribeFromAll',
    value: function _unsubscribeFromAll() {
      this._pubnubClient.unsubscribeAll();
      this._pubnubListener.removeAllListeners();
    }

    /**
     * @param {string} channelName
     * @param {Object} message
     * @returns {KinveyError}
     */

  }, {
    key: '_validatePublishData',
    value: function _validatePublishData(channelName, message) {
      var err = null;

      if (!isValidChannelName(channelName)) {
        err = new _errors.KinveyError('Invalid channel name');
      }

      if (message === undefined) {
        err = new _errors.KinveyError('Missing or invalid message');
      }

      return err;
    }

    /**
     * @param {string} channelName
     * @param {LiveServiceReceiver} channelName
     * @returns {KinveyError}
     */

  }, {
    key: '_validateSubscribeData',
    value: function _validateSubscribeData(channelName, receiver) {
      var err = null;

      if (!isValidChannelName(channelName)) {
        err = new _errors.KinveyError('Invalid channel name');
      }

      if (!receiver || !isValidReceiver(receiver)) {
        err = new _errors.KinveyError('Missing or invalid receiver');
      }

      return err;
    }

    /**
     * Subscribes the PubNub client to the user's channel group.
     * All received messages are published to this channel group
     * and PubNubListener class routes and emits to their respective channels
     * @private
     * @param {string} channelGroup
     */

  }, {
    key: '_subscribeToUserChannelGroup',
    value: function _subscribeToUserChannelGroup() {
      this._pubnubClient.subscribe({
        channelGroups: [this._userChannelGroup]
      });
    }

    /**
     * Listens to respective PubNubListener events, based on channel name
     * @param  {string} channelName
     * @param  {LiveServiceReceiver} receiver
     */

  }, {
    key: '_subscribeToListener',
    value: function _subscribeToListener(channelName, receiver) {
      if ((0, _isFunction2.default)(receiver.onMessage)) {
        this._pubnubListener.on(channelName, receiver.onMessage);
      }

      if ((0, _isFunction2.default)(receiver.onError) || (0, _isFunction2.default)(receiver.onStatus)) {
        this._pubnubListener.on('' + _pubnubListener.PubNubListener.statusPrefix + channelName, function (status) {
          var func = status.error ? receiver.onError : receiver.onStatus;
          if ((0, _isFunction2.default)(func)) {
            func.call(receiver, status);
          }
        });
      }
    }

    /**
     * Stop listening to respective PubNubListener events, based on channel name
     * @private
     * @param {string} channelName
     */

  }, {
    key: '_unsubscribeFromListener',
    value: function _unsubscribeFromListener(channelName) {
      this._pubnubListener.removeAllListeners(channelName);
      this._pubnubListener.removeAllListeners('' + _pubnubListener.PubNubListener.statusPrefix + channelName);
    }

    /**
     * @private
     * @param {string} userId
     * @returns {Promise<{publishKey: string, subscribeKey: string, userChannelGroup: string}>}
     */

  }, {
    key: '_makeRegisterRequest',
    value: function _makeRegisterRequest(userId) {
      return this._makeUserManagementRequest(userId, 'register-realtime');
    }

    /**
     * @private
     * @param {string} userId
     * @returns {Promise}
     */

  }, {
    key: '_makeUnregisterRequst',
    value: function _makeUnregisterRequst(userId) {
      return this._makeUserManagementRequest(userId, 'unregister-realtime');
    }

    /**
     * @private
     * @param {string} path
     * @returns {Promise}
     */

  }, {
    key: '_makeUserManagementRequest',
    value: function _makeUserManagementRequest(userId, path) {
      return _request.KinveyRequest.executeShort({
        method: _request.RequestMethod.POST,
        pathname: '/user/' + this._client.appKey + '/' + userId + '/' + path,
        body: { deviceId: this._client.deviceId }
      }, this._client);
    }
  }, {
    key: '_throwNotInitializedError',
    value: function _throwNotInitializedError() {
      throw new _errors.KinveyError('Live service has not been initialized');
    }
  }, {
    key: '_pubnubClient',
    get: function get() {
      if (!this.__pubnubClient) {
        this._throwNotInitializedError();
      }
      return this.__pubnubClient;
    },
    set: function set(value) {
      this.__pubnubClient = value;
    }
  }, {
    key: '_pubnubListener',
    set: function set(value) {
      this.__pubnubListener = value;
    },
    get: function get() {
      if (!this.__pubnubListener) {
        this._throwNotInitializedError();
      }
      return this.__pubnubListener;
    }
  }]);

  return LiveService;
}();

var liveServiceInstance = void 0;

/**
 * Gets a singleton LiveService class instance
 * @param {Client} client
 * @returns {LiveService}
 */
function getLiveService(client) {
  if (!liveServiceInstance) {
    liveServiceInstance = new LiveService(client);
  }
  return liveServiceInstance;
}

/***/ }),
/* 57 */
/*!***************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/constants/categories.js ***!
  \***************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  PNNetworkUpCategory: 'PNNetworkUpCategory',

  PNNetworkDownCategory: 'PNNetworkDownCategory',

  PNNetworkIssuesCategory: 'PNNetworkIssuesCategory',

  PNTimeoutCategory: 'PNTimeoutCategory',

  PNBadRequestCategory: 'PNBadRequestCategory',

  PNAccessDeniedCategory: 'PNAccessDeniedCategory',

  PNUnknownCategory: 'PNUnknownCategory',

  PNReconnectedCategory: 'PNReconnectedCategory',

  PNConnectedCategory: 'PNConnectedCategory',

  PNRequestMessageCountExceededCategory: 'PNRequestMessageCountExceededCategory'

};
module.exports = exports['default'];
//# sourceMappingURL=categories.js.map


/***/ }),
/* 58 */
/*!*************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/identity/index.js ***!
  \*************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _enums = __webpack_require__(/*! ./enums */ 92);

Object.keys(_enums).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _enums[key];
    }
  });
});

var _mic = __webpack_require__(/*! ./mic */ 143);

Object.keys(_mic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _mic[key];
    }
  });
});

/***/ }),
/* 59 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_Stack.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ 38),
    stackClear = __webpack_require__(/*! ./_stackClear */ 160),
    stackDelete = __webpack_require__(/*! ./_stackDelete */ 161),
    stackGet = __webpack_require__(/*! ./_stackGet */ 162),
    stackHas = __webpack_require__(/*! ./_stackHas */ 163),
    stackSet = __webpack_require__(/*! ./_stackSet */ 164);

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),
/* 60 */
/*!**************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_Map.js ***!
  \**************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 24),
    root = __webpack_require__(/*! ./_root */ 13);

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),
/* 61 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_MapCache.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ 169),
    mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ 176),
    mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ 178),
    mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ 179),
    mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ 180);

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),
/* 62 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_assignValue.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ 63),
    eq = __webpack_require__(/*! ./eq */ 30);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),
/* 63 */
/*!**************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseAssignValue.js ***!
  \**************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ./_defineProperty */ 98);

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),
/* 64 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isTypedArray.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ 185),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ 100),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ 186);

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),
/* 65 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isLength.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),
/* 66 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getSymbols.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(/*! ./_arrayFilter */ 194),
    stubArray = __webpack_require__(/*! ./stubArray */ 103);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),
/* 67 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arrayPush.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),
/* 68 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getPrototype.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ 102);

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),
/* 69 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getTag.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(/*! ./_DataView */ 197),
    Map = __webpack_require__(/*! ./_Map */ 60),
    Promise = __webpack_require__(/*! ./_Promise */ 198),
    Set = __webpack_require__(/*! ./_Set */ 199),
    WeakMap = __webpack_require__(/*! ./_WeakMap */ 200),
    baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 18),
    toSource = __webpack_require__(/*! ./_toSource */ 96);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),
/* 70 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_cloneArrayBuffer.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(/*! ./_Uint8Array */ 107);

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),
/* 71 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arrayReduce.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

module.exports = arrayReduce;


/***/ }),
/* 72 */
/*!***************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/qs/lib/index.js ***!
  \***************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var stringify = __webpack_require__(/*! ./stringify */ 254);
var parse = __webpack_require__(/*! ./parse */ 255);
var formats = __webpack_require__(/*! ./formats */ 112);

module.exports = {
    formats: formats,
    parse: parse,
    stringify: stringify
};


/***/ }),
/* 73 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_createAssigner.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(/*! ./_baseRest */ 74),
    isIterateeCall = __webpack_require__(/*! ./_isIterateeCall */ 114);

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;


/***/ }),
/* 74 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseRest.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(/*! ./identity */ 46),
    overRest = __webpack_require__(/*! ./_overRest */ 256),
    setToString = __webpack_require__(/*! ./_setToString */ 257);

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),
/* 75 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isNumber.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 18),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 15);

/** `Object#toString` result references. */
var numberTag = '[object Number]';

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */
function isNumber(value) {
  return typeof value == 'number' ||
    (isObjectLike(value) && baseGetTag(value) == numberTag);
}

module.exports = isNumber;


/***/ }),
/* 76 */
/*!***********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/rack.js ***!
  \***********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NetworkRack = exports.CacheRack = exports.Rack = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _reduce = __webpack_require__(/*! lodash/reduce */ 77);

var _reduce2 = _interopRequireDefault(_reduce);

var _isFunction = __webpack_require__(/*! lodash/isFunction */ 19);

var _isFunction2 = _interopRequireDefault(_isFunction);

var _values = __webpack_require__(/*! lodash/values */ 80);

var _values2 = _interopRequireDefault(_values);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _log = __webpack_require__(/*! ../log */ 21);

var _middleware = __webpack_require__(/*! ./middleware */ 122);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Rack = exports.Rack = function (_Middleware) {
  _inherits(Rack, _Middleware);

  function Rack() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Rack';

    _classCallCheck(this, Rack);

    var _this = _possibleConstructorReturn(this, (Rack.__proto__ || Object.getPrototypeOf(Rack)).call(this, name));

    _this.middlewares = [];
    _this.canceled = false;
    _this.activeMiddleware = undefined;
    return _this;
  }

  _createClass(Rack, [{
    key: 'use',
    value: function use(middleware) {
      if ((0, _utils.isDefined)(middleware)) {
        if (middleware instanceof _middleware.Middleware) {
          this.middlewares.push(middleware);
          return;
        }

        throw new Error('Unable to use the middleware. It must be an instance of Middleware.');
      }
    }
  }, {
    key: 'reset',
    value: function reset() {
      this.middlewares = [];
    }
  }, {
    key: 'execute',
    value: function execute(req) {
      var _this2 = this;

      if ((0, _utils.isDefined)(req) === false) {
        return _es6Promise2.default.reject(new Error('Request is undefined. Please provide a valid request.'));
      }

      return (0, _reduce2.default)((0, _values2.default)(this.middlewares), function (promise, middleware) {
        return promise.then(function (_ref) {
          var request = _ref.request,
              response = _ref.response;

          if (_this2.canceled) {
            return _es6Promise2.default.reject(new Error('Cancelled'));
          }

          _this2.activeMiddleware = middleware;
          return middleware.handle(request || req, response);
        });
      }, _es6Promise2.default.resolve({ request: req })).then(function (_ref2) {
        var response = _ref2.response;

        if (_this2.canceled === true) {
          return _es6Promise2.default.reject(new Error('Cancelled'));
        }

        _this2.canceled = false;
        _this2.activeMiddleware = undefined;
        return response;
      }).catch(function (error) {
        _this2.canceled = false;
        _this2.activeMiddleware = undefined;
        throw error;
      });
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      this.canceled = true;

      if ((0, _utils.isDefined)(this.activeMiddleware) && (0, _isFunction2.default)(this.activeMiddleware.cancel)) {
        return this.activeMiddleware.cancel();
      }

      return _es6Promise2.default.resolve();
    }
  }, {
    key: 'handle',
    value: function handle(request) {
      return this.execute(request);
    }
  }, {
    key: 'generateTree',
    value: function generateTree() {
      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      var root = _get(Rack.prototype.__proto__ || Object.getPrototypeOf(Rack.prototype), 'generateTree', this).call(this, level);

      (0, _values2.default)(this.middlewares).forEach(function (middleware) {
        root.nodes.push(middleware.generateTree(level + 1));
      });

      return root;
    }
  }]);

  return Rack;
}(_middleware.Middleware);

var CacheRack = function (_Rack) {
  _inherits(CacheRack, _Rack);

  function CacheRack() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Cache Rack';

    _classCallCheck(this, CacheRack);

    var _this3 = _possibleConstructorReturn(this, (CacheRack.__proto__ || Object.getPrototypeOf(CacheRack)).call(this, name));

    _this3.use(new _middleware.CacheMiddleware());
    return _this3;
  }

  _createClass(CacheRack, [{
    key: 'useCacheMiddleware',
    value: function useCacheMiddleware(cacheMiddleware) {
      this.reset();
      this.use(cacheMiddleware);
    }
  }, {
    key: 'execute',
    value: function execute(request) {
      _log.Log.debug('Executing cache request', request);
      return _get(CacheRack.prototype.__proto__ || Object.getPrototypeOf(CacheRack.prototype), 'execute', this).call(this, request).then(function (response) {
        _log.Log.debug('Received response for cache request id: ' + request.id, response);
        return response;
      }).catch(function (error) {
        _log.Log.error('Received error for cache request id: ' + request.id, error);
        throw error;
      });
    }
  }]);

  return CacheRack;
}(Rack);

var cacheRack = new CacheRack();

var NetworkRack = function (_Rack2) {
  _inherits(NetworkRack, _Rack2);

  function NetworkRack() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Network Rack';

    _classCallCheck(this, NetworkRack);

    var _this4 = _possibleConstructorReturn(this, (NetworkRack.__proto__ || Object.getPrototypeOf(NetworkRack)).call(this, name));

    _this4.use(new _middleware.SerializeMiddleware());
    _this4.use(new _middleware.HttpMiddleware());
    _this4.use(new _middleware.ParseMiddleware());
    return _this4;
  }

  _createClass(NetworkRack, [{
    key: 'useHttpMiddleware',
    value: function useHttpMiddleware(httpMiddleware) {
      this.reset();
      this.use(new _middleware.SerializeMiddleware());
      this.use(httpMiddleware);
      this.use(new _middleware.ParseMiddleware());
    }
  }, {
    key: 'execute',
    value: function execute(request) {
      _log.Log.debug('Executing network request', request);
      return _get(NetworkRack.prototype.__proto__ || Object.getPrototypeOf(NetworkRack.prototype), 'execute', this).call(this, request).then(function (response) {
        _log.Log.debug('Received response for network request: ' + request.id, response);
        return response;
      }).catch(function (error) {
        _log.Log.error('Received error for network request id: ' + request.id, error);
        throw error;
      });
    }
  }]);

  return NetworkRack;
}(Rack);

var networkRack = new NetworkRack();

exports.CacheRack = cacheRack;
exports.NetworkRack = networkRack;

/***/ }),
/* 77 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/reduce.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayReduce = __webpack_require__(/*! ./_arrayReduce */ 71),
    baseEach = __webpack_require__(/*! ./_baseEach */ 33),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ 22),
    baseReduce = __webpack_require__(/*! ./_baseReduce */ 289),
    isArray = __webpack_require__(/*! ./isArray */ 4);

/**
 * Reduces `collection` to a value which is the accumulated result of running
 * each element in `collection` thru `iteratee`, where each successive
 * invocation is supplied the return value of the previous. If `accumulator`
 * is not given, the first element of `collection` is used as the initial
 * value. The iteratee is invoked with four arguments:
 * (accumulator, value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.reduce`, `_.reduceRight`, and `_.transform`.
 *
 * The guarded methods are:
 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
 * and `sortBy`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @returns {*} Returns the accumulated value.
 * @see _.reduceRight
 * @example
 *
 * _.reduce([1, 2], function(sum, n) {
 *   return sum + n;
 * }, 0);
 * // => 3
 *
 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 *   return result;
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
 */
function reduce(collection, iteratee, accumulator) {
  var func = isArray(collection) ? arrayReduce : baseReduce,
      initAccum = arguments.length < 3;

  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
}

module.exports = reduce;


/***/ }),
/* 78 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseGet.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ 51),
    toKey = __webpack_require__(/*! ./_toKey */ 28);

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),
/* 79 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_isKey.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ 4),
    isSymbol = __webpack_require__(/*! ./isSymbol */ 52);

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),
/* 80 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/values.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseValues = __webpack_require__(/*! ./_baseValues */ 290),
    keys = __webpack_require__(/*! ./keys */ 20);

/**
 * Creates an array of the own enumerable string keyed property values of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property values.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.values(new Foo);
 * // => [1, 2] (iteration order is not guaranteed)
 *
 * _.values('hi');
 * // => ['h', 'i']
 */
function values(object) {
  return object == null ? [] : baseValues(object, keys(object));
}

module.exports = values;


/***/ }),
/* 81 */
/*!***************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/keyBy.js ***!
  \***************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ 63),
    createAggregator = __webpack_require__(/*! ./_createAggregator */ 295);

/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The corresponding value of
 * each key is the last element responsible for generating the key. The
 * iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * var array = [
 *   { 'dir': 'left', 'code': 97 },
 *   { 'dir': 'right', 'code': 100 }
 * ];
 *
 * _.keyBy(array, function(o) {
 *   return String.fromCharCode(o.code);
 * });
 * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
 *
 * _.keyBy(array, 'dir');
 * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
 */
var keyBy = createAggregator(function(result, value, key) {
  baseAssignValue(result, key, value);
});

module.exports = keyBy;


/***/ }),
/* 82 */
/*!*********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/user/index.js ***!
  \*********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _user = __webpack_require__(/*! ./user */ 330);

Object.keys(_user).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _user[key];
    }
  });
});

/***/ }),
/* 83 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/datastore/cachestore.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CacheStore = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _differenceBy = __webpack_require__(/*! lodash/differenceBy */ 331);

var _differenceBy2 = _interopRequireDefault(_differenceBy);

var _assign = __webpack_require__(/*! lodash/assign */ 17);

var _assign2 = _interopRequireDefault(_assign);

var _keyBy = __webpack_require__(/*! lodash/keyBy */ 81);

var _keyBy2 = _interopRequireDefault(_keyBy);

var _remove2 = __webpack_require__(/*! lodash/remove */ 341);

var _remove3 = _interopRequireDefault(_remove2);

var _isArray = __webpack_require__(/*! lodash/isArray */ 4);

var _isArray2 = _interopRequireDefault(_isArray);

var _reduce = __webpack_require__(/*! lodash/reduce */ 77);

var _reduce2 = _interopRequireDefault(_reduce);

var _map = __webpack_require__(/*! lodash/map */ 84);

var _map2 = _interopRequireDefault(_map);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _request2 = __webpack_require__(/*! ../request */ 7);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _query4 = __webpack_require__(/*! ../query */ 12);

var _aggregation = __webpack_require__(/*! ../aggregation */ 27);

var _metadata = __webpack_require__(/*! ../metadata */ 85);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _observable = __webpack_require__(/*! ../observable */ 36);

var _networkstore = __webpack_require__(/*! ./networkstore */ 88);

var _sync = __webpack_require__(/*! ./sync */ 139);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * The CacheStore class is used to find, create, update, remove, count and group entities. Entities are stored
 * in a cache and synced with the backend.
 */
var CacheStore = exports.CacheStore = function (_NetworkStore) {
  _inherits(CacheStore, _NetworkStore);

  function CacheStore(collection) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, CacheStore);

    /**
     * @type {number|undefined}
     */
    var _this = _possibleConstructorReturn(this, (CacheStore.__proto__ || Object.getPrototypeOf(CacheStore)).call(this, collection, options));

    _this.ttl = options.ttl || undefined;

    /**
     * @type {SyncManager}
     */
    _this.syncManager = new _sync.SyncManager(_this.collection, options);
    return _this;
  }

  _createClass(CacheStore, [{
    key: 'find',


    /**
     * Find all entities in the data store. A query can be optionally provided to return
     * a subset of all entities in a collection or omitted to return all entities in
     * a collection. The number of entities returned adheres to the limits specified
     * at http://devcenter.kinvey.com/rest/guides/datastore#queryrestrictions.
     *
     * @param   {Query}                 [query]                             Query used to filter entities.
     * @param   {Object}                [options]                           Options
     * @param   {Properties}            [options.properties]                Custom properties to send with
     *                                                                      the request.
     * @param   {Number}                [options.timeout]                   Timeout for the request.
     * @param   {Boolean}               [options.useDeltaFetch]             Turn on or off the use of delta fetch.
     * @return  {Observable}                                                Observable.
     */
    value: function find(query) {
      var _this2 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options = (0, _assign2.default)({ syncAutomatically: this.syncAutomatically }, options);
      var syncAutomatically = options.syncAutomatically === true;
      var stream = _observable.KinveyObservable.create(function (observer) {
        // Check that the query is valid
        if (query && !(query instanceof _query4.Query)) {
          return observer.error(new _errors.KinveyError('Invalid query. It must be an instance of the Query class.'));
        }

        // Fetch the cache entities
        var request = new _request2.CacheRequest({
          method: _request2.RequestMethod.GET,
          url: _url2.default.format({
            protocol: _this2.client.apiProtocol,
            host: _this2.client.apiHost,
            pathname: _this2.pathname
          }),
          properties: options.properties,
          query: query,
          timeout: options.timeout
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).catch(function () {
          return [];
        }).then(function () {
          var cacheEntities = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

          observer.next(cacheEntities);

          if (syncAutomatically === true) {
            // Attempt to push any pending sync data before fetching from the network.
            return _this2.pendingSyncCount(query, options).then(function (syncCount) {
              if (syncCount > 0) {
                return _this2.push(query, options).then(function () {
                  return _this2.pendingSyncCount(query, options);
                });
              }

              return syncCount;
            }).then(function (syncCount) {
              // Throw an error if there are still entities that need to be synced
              if (syncCount > 0) {
                throw new _errors.KinveyError('Unable to fetch the entities on the backend.' + (' There are ' + syncCount + ' entities that need') + ' to be synced.');
              }

              // Fetch the network entities
              return _get(CacheStore.prototype.__proto__ || Object.getPrototypeOf(CacheStore.prototype), 'find', _this2).call(_this2, query, options).toPromise();
            }).then(function (networkEntities) {
              // Remove entities from the cache that no longer exists
              var removedEntities = (0, _differenceBy2.default)(cacheEntities, networkEntities, '_id');
              var removedIds = Object.keys((0, _keyBy2.default)(removedEntities, '_id'));
              var removeQuery = new _query4.Query().contains('_id', removedIds);
              return _this2.clear(removeQuery, options).then(function () {
                return networkEntities;
              });
            }).then(function (networkEntities) {
              // Save network entities to cache
              var request = new _request2.CacheRequest({
                method: _request2.RequestMethod.PUT,
                url: _url2.default.format({
                  protocol: _this2.client.apiProtocol,
                  host: _this2.client.apiHost,
                  pathname: _this2.pathname
                }),
                properties: options.properties,
                body: networkEntities,
                timeout: options.timeout
              });
              return request.execute().then(function (response) {
                return response.data;
              });
            });
          }

          return cacheEntities;
        }).then(function (entities) {
          observer.next(entities);
        }).then(function () {
          observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream;
    }

    /**
     * Find a single entity in the data store by id.
     *
     * @param   {string}                id                               Entity by id to find.
     * @param   {Object}                [options]                        Options
     * @param   {Properties}            [options.properties]             Custom properties to send with
     *                                                                   the request.
     * @param   {Number}                [options.timeout]                Timeout for the request.
     * @param   {Boolean}               [options.useDeltaFetch]          Turn on or off the use of delta fetch.
     * @return  {Observable}                                             Observable.
     */

  }, {
    key: 'findById',
    value: function findById(id) {
      var _this3 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options = (0, _assign2.default)({ syncAutomatically: this.syncAutomatically }, options);
      var syncAutomatically = options.syncAutomatically === true;
      var stream = _observable.KinveyObservable.create(function (observer) {
        if ((0, _utils.isDefined)(id) === false) {
          observer.next(undefined);
          return observer.complete();
        }

        // Fetch from the cache
        var request = new _request2.CacheRequest({
          method: _request2.RequestMethod.GET,
          url: _url2.default.format({
            protocol: _this3.client.apiProtocol,
            host: _this3.client.apiHost,
            pathname: _this3.pathname + '/' + id
          }),
          properties: options.properties,
          timeout: options.timeout
        });
        return request.execute().then(function (response) {
          return response.data;
        }).catch(function () {
          return undefined;
        }).then(function (cacheEntity) {
          observer.next(cacheEntity);

          if (syncAutomatically === true) {
            // Attempt to push any pending sync data before fetching from the network.
            var query = new _query4.Query();
            query.equalTo('_id', id);
            return _this3.pendingSyncCount(query, options).then(function (syncCount) {
              if (syncCount > 0) {
                return _this3.push(query, options).then(function () {
                  return _this3.pendingSyncCount(query, options);
                });
              }

              return syncCount;
            }).then(function (syncCount) {
              // Throw an error if there are still items that need to be synced
              if (syncCount > 0) {
                throw new _errors.KinveyError('Unable to find the entity on the backend.' + (' There are ' + syncCount + ' entities that need') + ' to be synced.');
              }
            }).then(function () {
              return _get(CacheStore.prototype.__proto__ || Object.getPrototypeOf(CacheStore.prototype), 'findById', _this3).call(_this3, id, options).toPromise();
            }).then(function (networkEntity) {
              // Save the network entity to cache
              var request = new _request2.CacheRequest({
                method: _request2.RequestMethod.PUT,
                url: _url2.default.format({
                  protocol: _this3.client.apiProtocol,
                  host: _this3.client.apiHost,
                  pathname: _this3.pathname
                }),
                properties: options.properties,
                body: networkEntity,
                timeout: options.timeout
              });
              return request.execute().then(function (response) {
                return response.data;
              });
            });
          }

          return cacheEntity;
        }).then(function (entity) {
          return observer.next(entity);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream;
    }

    /**
     * Group entities.
     *
     * @param   {Aggregation}           aggregation                         Aggregation used to group entities.
     * @param   {Object}                [options]                           Options
     * @param   {Properties}            [options.properties]                Custom properties to send with
     *                                                                      the request.
     * @param   {Number}                [options.timeout]                   Timeout for the request.
     * @return  {Observable}                                                Observable.
     */

  }, {
    key: 'group',
    value: function group(aggregation) {
      var _this4 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options = (0, _assign2.default)({ syncAutomatically: this.syncAutomatically }, options);
      var syncAutomatically = options.syncAutomatically === true;
      var stream = _observable.KinveyObservable.create(function (observer) {
        // Check that the aggregation is valid
        if (!(aggregation instanceof _aggregation.Aggregation)) {
          return observer.error(new _errors.KinveyError('Invalid aggregation. It must be an instance of the Aggregation class.'));
        }

        // Fetch the cache entities
        var request = new _request2.CacheRequest({
          method: _request2.RequestMethod.POST,
          url: _url2.default.format({
            protocol: _this4.client.apiProtocol,
            host: _this4.client.apiHost,
            pathname: _this4.pathname + '/_group'
          }),
          properties: options.properties,
          aggregation: aggregation,
          timeout: options.timeout
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).catch(function () {
          return [];
        }).then(function () {
          var cacheResult = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

          observer.next(cacheResult);

          if (syncAutomatically === true) {
            // Attempt to push any pending sync data before fetching from the network.
            return _this4.pendingSyncCount(null, options).then(function (syncCount) {
              if (syncCount > 0) {
                return _this4.push(null, options).then(function () {
                  return _this4.pendingSyncCount(null, options);
                });
              }

              return syncCount;
            }).then(function (syncCount) {
              // Throw an error if there are still items that need to be synced
              if (syncCount > 0) {
                throw new _errors.KinveyError('Unable to group entities on the backend.' + (' There are ' + syncCount + ' entities that need') + ' to be synced.');
              }

              // Group the network entities
              return _get(CacheStore.prototype.__proto__ || Object.getPrototypeOf(CacheStore.prototype), 'group', _this4).call(_this4, aggregation, options).toPromise();
            });
          }

          return cacheResult;
        }).then(function (result) {
          return observer.next(result);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });
      return stream;
    }

    /**
     * Count all entities in the data store. A query can be optionally provided to return
     * a subset of all entities in a collection or omitted to return all entities in
     * a collection. The number of entities returned adheres to the limits specified
     * at http://devcenter.kinvey.com/rest/guides/datastore#queryrestrictions.
     *
     * @param   {Query}                 [query]                          Query used to filter entities.
     * @param   {Object}                [options]                        Options
     * @param   {Properties}            [options.properties]             Custom properties to send with
     *                                                                   the request.
     * @param   {Number}                [options.timeout]                Timeout for the request.
     * @return  {Observable}                                             Observable.
     */

  }, {
    key: 'count',
    value: function count(query) {
      var _this5 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options = (0, _assign2.default)({ syncAutomatically: this.syncAutomatically }, options);
      var syncAutomatically = options.syncAutomatically === true;
      var stream = _observable.KinveyObservable.create(function (observer) {
        if (query && !(query instanceof _query4.Query)) {
          return observer.error(new _errors.KinveyError('Invalid query. It must be an instance of the Query class.'));
        }

        // Count the entities in the cache
        var request = new _request2.CacheRequest({
          method: _request2.RequestMethod.GET,
          url: _url2.default.format({
            protocol: _this5.client.apiProtocol,
            host: _this5.client.apiHost,
            pathname: _this5.pathname
          }),
          properties: options.properties,
          query: query,
          timeout: options.timeout
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).catch(function () {
          return [];
        }).then(function () {
          var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
          return data.length;
        }).then(function (cacheCount) {
          observer.next(cacheCount);

          if (syncAutomatically === true) {
            // Attempt to push any pending sync data before fetching from the network.
            return _this5.pendingSyncCount(query, options).then(function (syncCount) {
              if (syncCount > 0) {
                return _this5.push(query, options).then(function () {
                  return _this5.pendingSyncCount(query, options);
                });
              }

              return syncCount;
            }).then(function (syncCount) {
              // Throw an error if there are still items that need to be synced
              if (syncCount > 0) {
                throw new _errors.KinveyError('Unable to count entities on the backend.' + (' There are ' + syncCount + ' entities that need') + ' to be synced.');
              }
            }).then(function () {
              return _get(CacheStore.prototype.__proto__ || Object.getPrototypeOf(CacheStore.prototype), 'count', _this5).call(_this5, query, options).toPromise();
            });
          }

          return cacheCount;
        }).then(function (count) {
          return observer.next(count);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream;
    }

    /**
     * Create a single or an array of entities on the data store.
     *
     * @param   {Object}                entity                            Entity that you want to create on the data store.
     * @param   {Object}                [options]                         Options
     * @param   {Properties}            [options.properties]              Custom properties to send with
     *                                                                    the request.
     * @param   {Number}                [options.timeout]                 Timeout for the request.
     * @return  {Promise}                                                 Promise.
     */

  }, {
    key: 'create',
    value: function create(entity) {
      var _this6 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        if ((0, _utils.isDefined)(entity) === false) {
          observer.next(null);
          return observer.complete();
        }

        if ((0, _isArray2.default)(entity)) {
          return observer.error(new _errors.KinveyError('Unable to create an array of entities.', 'Please create entities one by one.'));
        }

        // Save the entity to the cache
        var request = new _request2.CacheRequest({
          method: _request2.RequestMethod.POST,
          url: _url2.default.format({
            protocol: _this6.client.apiProtocol,
            host: _this6.client.apiHost,
            pathname: _this6.pathname
          }),
          properties: options.properties,
          body: entity,
          timeout: options.timeout
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (entity) {
          return _this6.syncManager.addCreateOperation(entity, options).then(function () {
            return entity;
          });
        }).then(function (entity) {
          // Push the entity
          if (_this6.syncAutomatically === true) {
            var query = new _query4.Query().equalTo('_id', entity._id);
            return _this6.push(query, options).then(function (results) {
              var result = results[0];

              if ((0, _utils.isDefined)(result.error)) {
                throw result.error;
              }

              return result.entity;
            });
          }

          return entity;
        }).then(function (entity) {
          return observer.next(entity);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream.toPromise();
    }

    /**
     * Update a single or an array of entities on the data store.
     *
     * @param   {Object}                entity                            Entity that you want to update on the data store.
     * @param   {Object}                [options]                         Options
     * @param   {Properties}            [options.properties]              Custom properties to send with
     *                                                                    the request.
     * @param   {Number}                [options.timeout]                 Timeout for the request.
     * @return  {Promise}                                                 Promise.
     */

  }, {
    key: 'update',
    value: function update(entity) {
      var _this7 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        if ((0, _utils.isDefined)(entity) === false) {
          observer.next(null);
          return observer.complete();
        }

        if ((0, _isArray2.default)(entity)) {
          return observer.error(new _errors.KinveyError('Unable to update an array of entities.', 'Please update entities one by one.'));
        }

        if ((0, _utils.isDefined)(entity._id) === false) {
          return observer.error(new _errors.KinveyError('The entity provided does not contain an _id. An _id is required to' + ' update the entity.', entity));
        }

        // Save the entity to the cache
        var request = new _request2.CacheRequest({
          method: _request2.RequestMethod.PUT,
          url: _url2.default.format({
            protocol: _this7.client.apiProtocol,
            host: _this7.client.apiHost,
            pathname: _this7.pathname + '/' + entity._id
          }),
          properties: options.properties,
          body: entity,
          timeout: options.timeout
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (entity) {
          return _this7.syncManager.addUpdateOperation(entity, options).then(function () {
            return entity;
          });
        }).then(function (entity) {
          // Push the entity
          if (_this7.syncAutomatically === true) {
            var query = new _query4.Query().equalTo('_id', entity._id);
            return _this7.push(query, options).then(function (results) {
              var result = results[0];

              if ((0, _utils.isDefined)(result.error)) {
                throw result.error;
              }

              return result.entity;
            });
          }

          return entity;
        }).then(function (entity) {
          return observer.next(entity);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream.toPromise();
    }

    /**
     * Remove all entities in the data store. A query can be optionally provided to remove
     * a subset of all entities in a collection or omitted to remove all entities in
     * a collection. The number of entities removed adheres to the limits specified
     * at http://devcenter.kinvey.com/rest/guides/datastore#queryrestrictions.
     *
     * @param   {Query}                 [query]                           Query used to filter entities.
     * @param   {Object}                [options]                         Options
     * @param   {Properties}            [options.properties]              Custom properties to send with
     *                                                                    the request.
     * @param   {Number}                [options.timeout]                 Timeout for the request.
     * @return  {Promise}                                                 Promise.
     */

  }, {
    key: 'remove',
    value: function remove(query) {
      var _this8 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        if (query && !(query instanceof _query4.Query)) {
          return observer.error(new _errors.KinveyError('Invalid query. It must be an instance of the Query class.'));
        }

        // Fetch the cache entities
        var request = new _request2.CacheRequest({
          method: _request2.RequestMethod.GET,
          url: _url2.default.format({
            protocol: _this8.client.apiProtocol,
            host: _this8.client.apiHost,
            pathname: _this8.pathname
          }),
          properties: options.properties,
          query: query,
          timeout: options.timeout
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).then(function () {
          var entities = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

          if (entities.length > 0) {
            return _es6Promise2.default.all((0, _map2.default)(entities, function (entity) {
              var metadata = new _metadata.Metadata(entity);

              // Clear any pending sync items if the entity
              // was created locally
              if (metadata.isLocal()) {
                var _query = new _query4.Query();
                _query.equalTo('_id', entity._id);
                return _this8.clearSync(_query, options).then(function () {
                  return entity;
                });
              }

              // Add a delete operation to sync
              return _this8.syncManager.addDeleteOperation(entity, options).then(function () {
                return entity;
              });
            })).then(function () {
              return entities;
            });
          }

          return entities;
        }).then(function (entities) {
          // Push the entities
          if (entities.length > 0 && _this8.syncAutomatically === true) {
            // Remove the localEntities
            var localEntities = (0, _remove3.default)(entities, function (entity) {
              var metadata = new _metadata.Metadata(entity);
              return metadata.isLocal();
            });

            var ids = Object.keys((0, _keyBy2.default)(entities, '_id'));
            var _query2 = new _query4.Query().contains('_id', ids);
            return _this8.push(_query2, options).then(function (results) {
              return results.concat(localEntities);
            });
          }

          return entities;
        }).then(function (results) {
          return _es6Promise2.default.all((0, _map2.default)(results, function (result) {
            if ((0, _utils.isDefined)(result.error) === false) {
              var _request = new _request2.CacheRequest({
                method: _request2.RequestMethod.DELETE,
                url: _url2.default.format({
                  protocol: _this8.client.apiProtocol,
                  host: _this8.client.apiHost,
                  pathname: _this8.pathname + '/' + result._id
                }),
                properties: options.properties,
                authType: _request2.AuthType.Default,
                timeout: options.timeout
              });
              return _request.execute().then(function (response) {
                return response.data;
              });
            }

            return { count: 0 };
          }));
        }).then(function (results) {
          return (0, _reduce2.default)(results, function (totalResult, result) {
            totalResult.count += result.count;
            return totalResult;
          }, { count: 0 });
        }).then().then(function (result) {
          return observer.next(result);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream.toPromise();
    }

    /**
     * Remove a single entity in the data store by id.
     *
     * @param   {string}                id                               Entity by id to remove.
     * @param   {Object}                [options]                        Options
     * @param   {Properties}            [options.properties]             Custom properties to send with
     *                                                                   the request.
     * @param   {Number}                [options.timeout]                Timeout for the request.
     * @return  {Observable}                                             Observable.
     */

  }, {
    key: 'removeById',
    value: function removeById(id) {
      var _this9 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        if ((0, _utils.isDefined)(id) === false) {
          observer.next({ count: 0 });
          return observer.complete();
        }

        // Get the entity from cache
        var request = new _request2.CacheRequest({
          method: _request2.RequestMethod.GET,
          url: _url2.default.format({
            protocol: _this9.client.apiProtocol,
            host: _this9.client.apiHost,
            pathname: _this9.pathname + '/' + id
          }),
          properties: options.properties,
          authType: _request2.AuthType.Default,
          timeout: options.timeout
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).catch(function (error) {
          if (error instanceof _errors.NotFoundError) {
            return null;
          }

          throw error;
        }).then(function (entity) {
          if ((0, _utils.isDefined)(entity)) {
            var metadata = new _metadata.Metadata(entity);

            // Clear any pending sync items if the entity
            // was created locally
            if (metadata.isLocal()) {
              var query = new _query4.Query();
              query.equalTo('_id', entity._id);
              return _this9.clearSync(query, options).then(function () {
                return entity;
              });
            }

            // Add a delete operation to sync
            return _this9.syncManager.addDeleteOperation(entity, options).then(function () {
              return entity;
            });
          }

          return entity;
        }).then(function (entity) {
          // Push the entity
          if (_this9.syncAutomatically === true) {
            var query = new _query4.Query().equalTo('_id', entity._id);
            return _this9.push(query, options).then(function () {
              return entity;
            });
          }

          return entity;
        }).then(function (entity) {
          // Remove from cache
          var request = new _request2.CacheRequest({
            method: _request2.RequestMethod.DELETE,
            url: _url2.default.format({
              protocol: _this9.client.apiProtocol,
              host: _this9.client.apiHost,
              pathname: _this9.pathname + '/' + entity._id
            }),
            properties: options.properties,
            authType: _request2.AuthType.Default,
            timeout: options.timeout
          });
          return request.execute().then(function (response) {
            return response.data;
          });
        }).then(function (result) {
          return observer.next(result);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream.toPromise();
    }

    /**
     * Remove all entities in the data store that are stored locally.
     *
     * @param   {Query}                 [query]                           Query used to filter entities.
     * @param   {Object}                [options]                         Options
     * @param   {Properties}            [options.properties]              Custom properties to send with
     *                                                                    the request.
     * @param   {Number}                [options.timeout]                 Timeout for the request.
     * @return  {Promise}                                                 Promise.
     */

  }, {
    key: 'clear',
    value: function clear(query) {
      var _this10 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        if (query && !(query instanceof _query4.Query)) {
          return observer.error(new _errors.KinveyError('Invalid query. It must be an instance of the Query class.'));
        }

        // Fetch the cache entities
        var request = new _request2.CacheRequest({
          method: _request2.RequestMethod.GET,
          url: _url2.default.format({
            protocol: _this10.client.apiProtocol,
            host: _this10.client.apiHost,
            pathname: _this10.pathname
          }),
          properties: options.properties,
          query: query,
          timeout: options.timeout
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).then(function () {
          var entities = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

          return _es6Promise2.default.all((0, _map2.default)(entities, function (entity) {
            return _es6Promise2.default.resolve(entity).then(function (entity) {
              var metadata = new _metadata.Metadata(entity);

              // Clear any pending sync items if the entity
              // was created locally
              if (metadata.isLocal()) {
                var _query3 = new _query4.Query();
                _query3.equalTo('_id', entity._id);
                return _this10.clearSync(_query3, options).then(function () {
                  return entity;
                });
              }

              return entity;
            }).then(function (entity) {
              // Remove from cache
              var request = new _request2.CacheRequest({
                method: _request2.RequestMethod.DELETE,
                url: _url2.default.format({
                  protocol: _this10.client.apiProtocol,
                  host: _this10.client.apiHost,
                  pathname: _this10.pathname + '/' + entity._id
                }),
                properties: options.properties,
                authType: _request2.AuthType.Default,
                timeout: options.timeout
              });
              return request.execute().then(function (response) {
                return response.data;
              });
            });
          }));
        }).then(function (results) {
          return (0, _reduce2.default)(results, function (totalResult, result) {
            totalResult.count += result.count;
            return totalResult;
          }, { count: 0 });
        }).then(function (result) {
          return observer.next(result);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream.toPromise();
    }

    /**
     * Count the number of entities waiting to be pushed to the network. A promise will be
     * returned with the count of entities or rejected with an error.
     *
     * @param   {Query}                 [query]                                   Query to count a subset of entities.
     * @param   {Object}                options                                   Options
     * @param   {Properties}            [options.properties]                      Custom properties to send with
     *                                                                            the request.
     * @param   {Number}                [options.timeout]                         Timeout for the request.
     * @param   {Number}                [options.ttl]                             Time to live for data retrieved
     *                                                                            from the local cache.
     * @return  {Promise}                                                         Promise
     */

  }, {
    key: 'pendingSyncCount',
    value: function pendingSyncCount(query, options) {
      return this.syncManager.count(query, options);
    }
  }, {
    key: 'pendingSyncEntities',
    value: function pendingSyncEntities(query, options) {
      return this.syncManager.find(query, options);
    }

    /**
     * Push sync items for the data store to the network. A promise will be returned that will be
     * resolved with the result of the push or rejected with an error.
     *
     * @param   {Query}                 [query]                                   Query to push a subset of items.
     * @param   {Object}                options                                   Options
     * @param   {Properties}            [options.properties]                      Custom properties to send with
     *                                                                            the request.
     * @param   {Number}                [options.timeout]                         Timeout for the request.
     * @return  {Promise}                                                         Promise
     */

  }, {
    key: 'push',
    value: function push(query, options) {
      return this.syncManager.push(query, options);
    }

    /**
     * Pull items for the data store from the network to your local cache. A promise will be
     * returned that will be resolved with the result of the pull or rejected with an error.
     *
     * @param   {Query}                 [query]                                   Query to pull a subset of items.
     * @param   {Object}                options                                   Options
     * @param   {Properties}            [options.properties]                      Custom properties to send with
     *                                                                            the request.
     * @param   {Number}                [options.timeout]                         Timeout for the request.
     * @return  {Promise}                                                         Promise
     */

  }, {
    key: 'pull',
    value: function pull(query) {
      var _this11 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options = (0, _assign2.default)({ useDeltaFetch: this.useDeltaFetch }, options);
      return this.syncManager.pull(query, options).then(function (entities) {
        // Clear the cache
        return _this11.clear(query, options).then(function () {
          // Save network entities to cache
          var saveRequest = new _request2.CacheRequest({
            method: _request2.RequestMethod.PUT,
            url: _url2.default.format({
              protocol: _this11.client.apiProtocol,
              host: _this11.client.apiHost,
              pathname: _this11.pathname
            }),
            properties: options.properties,
            body: entities,
            timeout: options.timeout
          });
          return saveRequest.execute();
        }).then(function () {
          return entities;
        });
      });
    }

    /**
     * Sync items for the data store. This will push pending sync items first and then
     * pull items from the network into your local cache. A promise will be
     * returned that will be resolved with the result of the pull or rejected with an error.
     *
     * @param   {Query}                 [query]                                   Query to pull a subset of items.
     * @param   {Object}                options                                   Options
     * @param   {Properties}            [options.properties]                      Custom properties to send with
     *                                                                            the request.
     * @param   {Number}                [options.timeout]                         Timeout for the request.
     * @return  {Promise}                                                         Promise
     */

  }, {
    key: 'sync',
    value: function sync(query, options) {
      var _this12 = this;

      options = (0, _assign2.default)({ useDeltaFetch: this.useDeltaFetch }, options);
      return this.push(query, options).then(function (push) {
        var promise = _this12.pull(query, options).then(function (pull) {
          var result = {
            push: push,
            pull: pull
          };
          return result;
        });
        return promise;
      });
    }
  }, {
    key: 'clearSync',
    value: function clearSync(query, options) {
      return this.syncManager.clear(query, options);
    }
  }, {
    key: 'syncAutomatically',
    get: function get() {
      return true;
    }
  }]);

  return CacheStore;
}(_networkstore.NetworkStore);

/***/ }),
/* 84 */
/*!*************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/map.js ***!
  \*************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ 53),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ 22),
    baseMap = __webpack_require__(/*! ./_baseMap */ 346),
    isArray = __webpack_require__(/*! ./isArray */ 4);

/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = isArray(collection) ? arrayMap : baseMap;
  return func(collection, baseIteratee(iteratee, 3));
}

module.exports = map;


/***/ }),
/* 85 */
/*!*******************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/metadata.js ***!
  \*******************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Metadata = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _isPlainObject = __webpack_require__(/*! lodash/isPlainObject */ 32);

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _errors = __webpack_require__(/*! ./errors */ 1);

var _utils = __webpack_require__(/*! ./utils */ 2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * The Metadata class is used to as a wrapper for accessing the `_kmd` properties of an entity.
 */
var Metadata = exports.Metadata = function () {
  function Metadata(entity) {
    _classCallCheck(this, Metadata);

    if ((0, _isPlainObject2.default)(entity) === false) {
      throw new _errors.KinveyError('entity argument must be an object');
    }

    /**
     * The entity.
     *
     * @private
     * @type {Object}
     */
    entity._kmd = entity._kmd || {};
    this.entity = entity;
  }

  _createClass(Metadata, [{
    key: 'isLocal',
    value: function isLocal() {
      return this.entity._kmd.local === true;
    }
  }, {
    key: 'toPlainObject',
    value: function toPlainObject() {
      return this.entity._kmd;
    }
  }, {
    key: 'createdAt',
    get: function get() {
      if ((0, _utils.isDefined)(this.entity._kmd.ect)) {
        return new Date(this.entity._kmd.ect);
      }

      return undefined;
    }
  }, {
    key: 'ect',
    get: function get() {
      return this.createdAt;
    }
  }, {
    key: 'emailVerification',
    get: function get() {
      if ((0, _utils.isDefined)(this.entity._kmd.emailVerification)) {
        return this.entity._kmd.emailVerification.status;
      }

      return undefined;
    }
  }, {
    key: 'lastModified',
    get: function get() {
      if ((0, _utils.isDefined)(this.entity._kmd.lmt)) {
        return new Date(this.entity._kmd.lmt);
      }

      return undefined;
    }
  }, {
    key: 'lmt',
    get: function get() {
      return this.lastModified;
    }
  }, {
    key: 'authtoken',
    get: function get() {
      return this.entity._kmd.authtoken;
    }
  }]);

  return Metadata;
}();

/***/ }),
/* 86 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/util/root.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {
// CommonJS / Node have global context exposed as "global" variable.
// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake
// the global "global" var for now.
var __window = typeof window !== 'undefined' && window;
var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&
    self instanceof WorkerGlobalScope && self;
var __global = typeof global !== 'undefined' && global;
var _root = __window || __global || __self;
exports.root = _root;
// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.
// This is needed when used with angular/tsickle which inserts a goog.module statement.
// Wrap in IIFE
(function () {
    if (!_root) {
        throw new Error('RxJS could not find any global context (window, self, global)');
    }
})();
//# sourceMappingURL=root.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../../../../../../.nvm/versions/node/v8.6.0/lib/node_modules/webpack/buildin/global.js */ 23)))

/***/ }),
/* 87 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/symbol/rxSubscriber.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(/*! ../util/root */ 86);
var Symbol = root_1.root.Symbol;
exports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?
    Symbol.for('rxSubscriber') : '@@rxSubscriber';
/**
 * @deprecated use rxSubscriber instead
 */
exports.$$rxSubscriber = exports.rxSubscriber;
//# sourceMappingURL=rxSubscriber.js.map

/***/ }),
/* 88 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/datastore/networkstore.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NetworkStore = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _isArray = __webpack_require__(/*! lodash/isArray */ 4);

var _isArray2 = _interopRequireDefault(_isArray);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _request = __webpack_require__(/*! ../request */ 7);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _query = __webpack_require__(/*! ../query */ 12);

var _client = __webpack_require__(/*! ../client */ 10);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _observable = __webpack_require__(/*! ../observable */ 36);

var _aggregation = __webpack_require__(/*! ../aggregation */ 27);

var _live = __webpack_require__(/*! ../live */ 89);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * The NetworkStore class is used to find, create, update, remove, count and group entities over the network.
 */
var NetworkStore = exports.NetworkStore = function () {
  function NetworkStore(collection) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, NetworkStore);

    if (collection && !(0, _isString2.default)(collection)) {
      throw new _errors.KinveyError('Collection must be a string.');
    }

    /**
     * @type {string}
     */
    this.collection = collection;

    /**
     * @type {Client}
     */
    this.client = options.client;

    /**
     * @type {boolean}
     */
    this.useDeltaFetch = options.useDeltaFetch === true;
  }

  /**
   * The client for the store.
   * @return {Client} Client
   */


  _createClass(NetworkStore, [{
    key: 'find',


    /**
     * Find all entities in the data store. A query can be optionally provided to return
     * a subset of all entities in a collection or omitted to return all entities in
     * a collection. The number of entities returned adheres to the limits specified
     * at http://devcenter.kinvey.com/rest/guides/datastore#queryrestrictions.
     *
     * @param   {Query}                 [query]                             Query used to filter entities.
     * @param   {Object}                [options]                           Options
     * @param   {Properties}            [options.properties]                Custom properties to send with
     *                                                                      the request.
     * @param   {Number}                [options.timeout]                   Timeout for the request.
     * @param   {Boolean}               [options.useDeltaFetch]             Turn on or off the use of delta fetch.
     * @return  {Observable}                                                Observable.
     */
    value: function find(query) {
      var _this = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var useDeltaFetch = options.useDeltaFetch === true || this.useDeltaFetch;
      var stream = _observable.KinveyObservable.create(function (observer) {
        // Check that the query is valid
        if ((0, _utils.isDefined)(query) && !(query instanceof _query.Query)) {
          return observer.error(new _errors.KinveyError('Invalid query. It must be an instance of the Query class.'));
        }

        // Create the request
        var config = {
          method: _request.RequestMethod.GET,
          authType: _request.AuthType.Default,
          url: _url2.default.format({
            protocol: _this.client.apiProtocol,
            host: _this.client.apiHost,
            pathname: _this.pathname
          }),
          properties: options.properties,
          query: query,
          timeout: options.timeout,
          client: _this.client
        };
        var request = new _request.KinveyRequest(config);

        // Should we use delta fetch?
        if (useDeltaFetch === true) {
          request = new _request.DeltaFetchRequest(config);
        }

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (data) {
          return observer.next(data);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });
      return stream;
    }

    /**
     * Find a single entity in the data store by id.
     *
     * @param   {string}                id                               Entity by id to find.
     * @param   {Object}                [options]                        Options
     * @param   {Properties}            [options.properties]             Custom properties to send with
     *                                                                   the request.
     * @param   {Number}                [options.timeout]                Timeout for the request.
     * @param   {Boolean}               [options.useDeltaFetch]          Turn on or off the use of delta fetch.
     * @return  {Observable}                                             Observable.
     */

  }, {
    key: 'findById',
    value: function findById(id) {
      var _this2 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var useDeltaFetch = options.useDeltaFetch || this.useDeltaFetch;
      var stream = _observable.KinveyObservable.create(function (observer) {
        if (!id) {
          observer.next(undefined);
          return observer.complete();
        }

        // Fetch data from the network
        var config = {
          method: _request.RequestMethod.GET,
          authType: _request.AuthType.Default,
          url: _url2.default.format({
            protocol: _this2.client.apiProtocol,
            host: _this2.client.apiHost,
            pathname: _this2.pathname + '/' + id
          }),
          properties: options.properties,
          timeout: options.timeout,
          client: _this2.client
        };
        var request = new _request.KinveyRequest(config);

        if (useDeltaFetch === true) {
          request = new _request.DeltaFetchRequest(config);
        }

        return request.execute().then(function (response) {
          return response.data;
        }).then(function (data) {
          return observer.next(data);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream;
    }

    /**
     * Group entities.
     *
     * @param   {Aggregation}           aggregation                         Aggregation used to group entities.
     * @param   {Object}                [options]                           Options
     * @param   {Properties}            [options.properties]                Custom properties to send with
     *                                                                      the request.
     * @param   {Number}                [options.timeout]                   Timeout for the request.
     * @return  {Observable}                                                Observable.
     */

  }, {
    key: 'group',
    value: function group(aggregation) {
      var _this3 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        // Check that the query is valid
        if (!(aggregation instanceof _aggregation.Aggregation)) {
          return observer.error(new _errors.KinveyError('Invalid aggregation. It must be an instance of the Aggregation class.'));
        }

        // Create the request
        var request = new _request.KinveyRequest({
          method: _request.RequestMethod.POST,
          authType: _request.AuthType.Default,
          url: _url2.default.format({
            protocol: _this3.client.apiProtocol,
            host: _this3.client.apiHost,
            pathname: _this3.pathname + '/_group'
          }),
          properties: options.properties,
          aggregation: aggregation,
          timeout: options.timeout,
          client: _this3.client
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (data) {
          return observer.next(data);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });
      return stream;
    }

    /**
     * Count all entities in the data store. A query can be optionally provided to return
     * a subset of all entities in a collection or omitted to return all entities in
     * a collection. The number of entities returned adheres to the limits specified
     * at http://devcenter.kinvey.com/rest/guides/datastore#queryrestrictions.
     *
     * @param   {Query}                 [query]                          Query used to filter entities.
     * @param   {Object}                [options]                        Options
     * @param   {Properties}            [options.properties]             Custom properties to send with
     *                                                                   the request.
     * @param   {Number}                [options.timeout]                Timeout for the request.
     * @return  {Observable}                                             Observable.
     */

  }, {
    key: 'count',
    value: function count(query) {
      var _this4 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        try {
          if (query && !(query instanceof _query.Query)) {
            throw new _errors.KinveyError('Invalid query. It must be an instance of the Query class.');
          }

          // Create the request
          var request = new _request.KinveyRequest({
            method: _request.RequestMethod.GET,
            authType: _request.AuthType.Default,
            url: _url2.default.format({
              protocol: _this4.client.apiProtocol,
              host: _this4.client.apiHost,
              pathname: _this4.pathname + '/_count'
            }),
            properties: options.properties,
            query: query,
            timeout: options.timeout,
            client: _this4.client
          });

          // Execute the request
          return request.execute().then(function (response) {
            return response.data;
          }).then(function (data) {
            return observer.next(data ? data.count : 0);
          }).then(function () {
            return observer.complete();
          }).catch(function (error) {
            return observer.error(error);
          });
        } catch (error) {
          return observer.error(error);
        }
      });

      return stream;
    }

    /**
     * Create a single or an array of entities on the data store.
     *
     * @param   {Object}                data                              Data that you want to create on the data store.
     * @param   {Object}                [options]                         Options
     * @param   {Properties}            [options.properties]              Custom properties to send with
     *                                                                    the request.
     * @param   {Number}                [options.timeout]                 Timeout for the request.
     * @return  {Promise}                                                 Promise.
     */

  }, {
    key: 'create',
    value: function create(entity) {
      var _this5 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        if ((0, _utils.isDefined)(entity) === false) {
          observer.next(null);
          return observer.complete();
        }

        if ((0, _isArray2.default)(entity)) {
          return observer.error(new _errors.KinveyError('Unable to create an array of entities.', 'Please create entities one by one.'));
        }

        var request = new _request.KinveyRequest({
          method: _request.RequestMethod.POST,
          authType: _request.AuthType.Default,
          url: _url2.default.format({
            protocol: _this5.client.apiProtocol,
            host: _this5.client.apiHost,
            pathname: _this5.pathname
          }),
          properties: options.properties,
          data: entity,
          timeout: options.timeout,
          client: _this5.client
        });
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (data) {
          return observer.next(data);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream.toPromise();
    }

    /**
     * Update a single or an array of entities on the data store.
     *
     * @param   {Object}          data                                    Data that you want to update on the data store.
     * @param   {Object}                [options]                         Options
     * @param   {Properties}            [options.properties]              Custom properties to send with
     *                                                                    the request.
     * @param   {Number}                [options.timeout]                 Timeout for the request.
     * @return  {Promise}                                                 Promise.
     */

  }, {
    key: 'update',
    value: function update(entity) {
      var _this6 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        if ((0, _utils.isDefined)(entity) === false) {
          observer.next(null);
          return observer.complete();
        }

        if ((0, _isArray2.default)(entity)) {
          return observer.error(new _errors.KinveyError('Unable to update an array of entities.', 'Please update entities one by one.'));
        }

        if ((0, _utils.isDefined)(entity._id) === false) {
          return observer.error(new _errors.KinveyError('Unable to update entity.', 'Entity must contain an _id to be updated.'));
        }

        var request = new _request.KinveyRequest({
          method: _request.RequestMethod.PUT,
          authType: _request.AuthType.Default,
          url: _url2.default.format({
            protocol: _this6.client.apiProtocol,
            host: _this6.client.apiHost,
            pathname: _this6.pathname + '/' + entity._id
          }),
          properties: options.properties,
          data: entity,
          timeout: options.timeout,
          client: _this6.client
        });
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (data) {
          return observer.next(data);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream.toPromise();
    }

    /**
     * Save a single or an array of entities on the data store.
     *
     * @param   {Object|Array}          data                              Data that you want to save on the data store.
     * @param   {Object}                [options]                         Options
     * @param   {Properties}            [options.properties]              Custom properties to send with
     *                                                                    the request.
     * @param   {Number}                [options.timeout]                 Timeout for the request.
     * @return  {Promise}                                                 Promise.
     */

  }, {
    key: 'save',
    value: function save(entity, options) {
      if (entity._id) {
        return this.update(entity, options);
      }

      return this.create(entity, options);
    }

    /**
     * Remove all entities in the data store. A query can be optionally provided to remove
     * a subset of all entities in a collection or omitted to remove all entities in
     * a collection. The number of entities removed adheres to the limits specified
     * at http://devcenter.kinvey.com/rest/guides/datastore#queryrestrictions.
     *
     * @param   {Query}                 [query]                           Query used to filter entities.
     * @param   {Object}                [options]                         Options
     * @param   {Properties}            [options.properties]              Custom properties to send with
     *                                                                    the request.
     * @param   {Number}                [options.timeout]                 Timeout for the request.
     * @return  {Promise}                                                 Promise.
     */

  }, {
    key: 'remove',
    value: function remove(query) {
      var _this7 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        try {
          if (query && !(query instanceof _query.Query)) {
            throw new _errors.KinveyError('Invalid query. It must be an instance of the Query class.');
          }

          var request = new _request.KinveyRequest({
            method: _request.RequestMethod.DELETE,
            authType: _request.AuthType.Default,
            url: _url2.default.format({
              protocol: _this7.client.apiProtocol,
              host: _this7.client.apiHost,
              pathname: _this7.pathname
            }),
            properties: options.properties,
            query: query,
            timeout: options.timeout,
            client: _this7.client
          });
          return request.execute().then(function (response) {
            return response.data;
          }).then(function (data) {
            return observer.next(data);
          }).then(function () {
            return observer.complete();
          }).catch(function (error) {
            return observer.error(error);
          });
        } catch (error) {
          return observer.error(error);
        }
      });

      return stream.toPromise();
    }

    /**
     * Remove a single entity in the data store by id.
     *
     * @param   {string}                id                               Entity by id to remove.
     * @param   {Object}                [options]                        Options
     * @param   {Properties}            [options.properties]             Custom properties to send with
     *                                                                   the request.
     * @param   {Number}                [options.timeout]                Timeout for the request.
     * @return  {Observable}                                             Observable.
     */

  }, {
    key: 'removeById',
    value: function removeById(id) {
      var _this8 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        try {
          if ((0, _utils.isDefined)(id) === false) {
            observer.next(undefined);
            return observer.complete();
          }

          var request = new _request.KinveyRequest({
            method: _request.RequestMethod.DELETE,
            authType: _request.AuthType.Default,
            url: _url2.default.format({
              protocol: _this8.client.apiProtocol,
              host: _this8.client.apiHost,
              pathname: _this8.pathname + '/' + id
            }),
            properties: options.properties,
            timeout: options.timeout
          });
          return request.execute().then(function (response) {
            return response.data;
          }).then(function (data) {
            return observer.next(data);
          }).then(function () {
            return observer.complete();
          }).catch(function (error) {
            return observer.error(error);
          });
        } catch (error) {
          return observer.error(error);
        }
      });

      return stream.toPromise();
    }

    /**
     * Subscribes to the live stream for the collection
     */

  }, {
    key: 'subscribe',
    value: function subscribe(receiver) {
      var manager = (0, _live.getLiveCollectionManager)();
      return manager.subscribeCollection(this.collection, receiver);
    }

    /**
     * Unsubscribes from the live stream for the collection
     */

  }, {
    key: 'unsubscribe',
    value: function unsubscribe() {
      var manager = (0, _live.getLiveCollectionManager)();
      return manager.unsubscribeCollection(this.collection);
    }
  }, {
    key: 'client',
    get: function get() {
      if ((0, _utils.isDefined)(this._client)) {
        return this._client;
      }

      return _client.Client.sharedInstance();
    }

    /**
     * Set the client for the store
     * @param {Client} [client] Client
     */
    ,
    set: function set(client) {
      if (client instanceof _client.Client) {
        this._client = client;
      } else {
        this._client = null;
      }
    }

    /**
     * The pathname for the store.
     * @return  {string}  Pathname
     */

  }, {
    key: 'pathname',
    get: function get() {
      var pathname = '/appdata/' + this.client.appKey;

      if (this.collection) {
        pathname = pathname + '/' + this.collection;
      }

      return pathname;
    }
  }]);

  return NetworkStore;
}();

/***/ }),
/* 89 */
/*!*********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/live/index.js ***!
  \*********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _collection = __webpack_require__(/*! ./collection */ 357);

Object.keys(_collection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _collection[key];
    }
  });
});

var _userToUser = __webpack_require__(/*! ./user-to-user */ 395);

Object.keys(_userToUser).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _userToUser[key];
    }
  });
});

var _liveService = __webpack_require__(/*! ./live-service */ 56);

Object.keys(_liveService).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _liveService[key];
    }
  });
});

var _pubnubListener = __webpack_require__(/*! ./pubnub-listener */ 137);

Object.keys(_pubnubListener).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _pubnubListener[key];
    }
  });
});

var _liveServiceFacade = __webpack_require__(/*! ./live-service-facade */ 400);

Object.keys(_liveServiceFacade).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _liveServiceFacade[key];
    }
  });
});

/***/ }),
/* 90 */
/*!**********************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/components/uuid.js ***!
  \**********************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lilUuid = __webpack_require__(/*! lil-uuid */ 361);

var _lilUuid2 = _interopRequireDefault(_lilUuid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  createUUID: function createUUID() {
    if (_lilUuid2.default.uuid) {
      return _lilUuid2.default.uuid();
    } else {
      return (0, _lilUuid2.default)();
    }
  }
};
module.exports = exports['default'];
//# sourceMappingURL=uuid.js.map


/***/ }),
/* 91 */
/*!***********************!*\
  !*** ./src/bundle.ts ***!
  \***********************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var identity_1 = __webpack_require__(/*! ../../../src/core/identity */ 58);
var request_1 = __webpack_require__(/*! ../../../src/core/request */ 7);
var cache_1 = __webpack_require__(/*! ../../../src/nativescript/cache */ 317);
var http_1 = __webpack_require__(/*! ../../../src/nativescript/http */ 320);
var popup_1 = __webpack_require__(/*! ../../../src/nativescript/popup */ 321);
var package_json_1 = __webpack_require__(/*! ../package.json */ 327);
// Setup racks
request_1.CacheRack.useCacheMiddleware(new cache_1.CacheMiddleware());
request_1.NetworkRack.useHttpMiddleware(new http_1.HttpMiddleware(package_json_1.default));
// Setup popup
identity_1.MobileIdentityConnect.usePopupClass(popup_1.Popup);
var core_1 = __webpack_require__(/*! ../../../src/core */ 328);
exports.client = core_1.client;
exports.getAppVersion = core_1.getAppVersion;
exports.setAppVersion = core_1.setAppVersion;
exports.ping = core_1.ping;
exports.Acl = core_1.Acl;
exports.Aggregation = core_1.Aggregation;
exports.AuthorizationGrant = core_1.AuthorizationGrant;
exports.CustomEndpoint = core_1.CustomEndpoint;
exports.DataStore = core_1.DataStore;
exports.DataStoreType = core_1.DataStoreType;
exports.SyncOperation = core_1.SyncOperation;
exports.LiveService = core_1.LiveService;
exports.Files = core_1.Files;
exports.Log = core_1.Log;
exports.Metadata = core_1.Metadata;
exports.Query = core_1.Query;
exports.User = core_1.User;
exports.ActiveUserError = core_1.ActiveUserError;
exports.APIVersionNotAvailableError = core_1.APIVersionNotAvailableError;
exports.APIVersionNotImplementedError = core_1.APIVersionNotImplementedError;
exports.AppProblemError = core_1.AppProblemError;
exports.BadRequestError = core_1.BadRequestError;
exports.BLError = core_1.BLError;
exports.CORSDisabledError = core_1.CORSDisabledError;
exports.DuplicateEndUsersError = core_1.DuplicateEndUsersError;
exports.FeatureUnavailableError = core_1.FeatureUnavailableError;
exports.IncompleteRequestBodyError = core_1.IncompleteRequestBodyError;
exports.IndirectCollectionAccessDisallowedError = core_1.IndirectCollectionAccessDisallowedError;
exports.InsufficientCredentialsError = core_1.InsufficientCredentialsError;
exports.InvalidCredentialsError = core_1.InvalidCredentialsError;
exports.InvalidIdentifierError = core_1.InvalidIdentifierError;
exports.InvalidQuerySyntaxError = core_1.InvalidQuerySyntaxError;
exports.JSONParseError = core_1.JSONParseError;
exports.KinveyError = core_1.KinveyError;
exports.KinveyInternalErrorRetry = core_1.KinveyInternalErrorRetry;
exports.KinveyInternalErrorStop = core_1.KinveyInternalErrorStop;
exports.MissingQueryError = core_1.MissingQueryError;
exports.MissingRequestHeaderError = core_1.MissingRequestHeaderError;
exports.MissingRequestParameterError = core_1.MissingRequestParameterError;
exports.MobileIdentityConnectError = core_1.MobileIdentityConnectError;
exports.NoActiveUserError = core_1.NoActiveUserError;
exports.NetworkConnectionError = core_1.NetworkConnectionError;
exports.NoResponseError = core_1.NoResponseError;
exports.NotFoundError = core_1.NotFoundError;
exports.ParameterValueOutOfRangeError = core_1.ParameterValueOutOfRangeError;
exports.PopupError = core_1.PopupError;
exports.QueryError = core_1.QueryError;
exports.ServerError = core_1.ServerError;
exports.StaleRequestError = core_1.StaleRequestError;
exports.SyncError = core_1.SyncError;
exports.TimeoutError = core_1.TimeoutError;
exports.UserAlreadyExistsError = core_1.UserAlreadyExistsError;
exports.WritesToCollectionDisallowedError = core_1.WritesToCollectionDisallowedError;
__export(__webpack_require__(/*! ../../../src/nativescript */ 405));


/***/ }),
/* 92 */
/*!*************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/identity/enums.js ***!
  \*************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * @private
 * Enum for Social Identities
 */
var SocialIdentity = exports.SocialIdentity = {
  Kinvey: 'kinvey',
  MobileIdentityConnect: 'kinveyAuth'
};
Object.freeze(SocialIdentity);

/***/ }),
/* 93 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_freeGlobal.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../../../../../.nvm/versions/node/v8.6.0/lib/node_modules/webpack/buildin/global.js */ 23)))

/***/ }),
/* 94 */
/*!************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/cache.js ***!
  \************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CacheRequest = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if ("value" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _cloneDeep = __webpack_require__(/*! lodash/cloneDeep */ 95);

var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _query = __webpack_require__(/*! ../query */ 12);

var _aggregation = __webpack_require__(/*! ../aggregation */ 27);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _request = __webpack_require__(/*! ./request */ 49);

var _response = __webpack_require__(/*! ./response */ 34);

var _rack = __webpack_require__(/*! ./rack */ 76);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CacheRequest = exports.CacheRequest = function (_Request) {
  _inherits(CacheRequest, _Request);

  function CacheRequest() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, CacheRequest);

    var _this = _possibleConstructorReturn(this, (CacheRequest.__proto__ || Object.getPrototypeOf(CacheRequest)).call(this, options));

    _this.aggregation = options.aggregation;
    _this.query = options.query;
    _this.rack = _rack.CacheRack;
    return _this;
  }

  _createClass(CacheRequest, [{
    key: 'execute',
    value: function execute() {
      var _this2 = this;

      return _get(CacheRequest.prototype.__proto__ || Object.getPrototypeOf(CacheRequest.prototype), 'execute', this).call(this).then(function (response) {
        if (!(response instanceof _response.KinveyResponse)) {
          response = new _response.KinveyResponse({
            statusCode: response.statusCode,
            headers: response.headers,
            data: response.data
          });
        }

        // Throw the response error if we did not receive
        // a successfull response
        if (!response.isSuccess()) {
          throw response.error;
        }

        // If a query was provided then process the data with the query
        if ((0, _utils.isDefined)(_this2.query) && (0, _utils.isDefined)(response.data)) {
          response.data = _this2.query.process(response.data);
        }

        // If an aggregation was provided then process the data with the aggregation
        if ((0, _utils.isDefined)(_this2.aggregation) && (0, _utils.isDefined)(response.data)) {
          response.data = _this2.aggregation.process(response.data);
        }

        // Just return the response
        return response;
      });
    }
  }, {
    key: 'toPlainObject',
    value: function toPlainObject() {
      var obj = _get(CacheRequest.prototype.__proto__ || Object.getPrototypeOf(CacheRequest.prototype), 'toPlainObject', this).call(this);
      obj.appKey = this.appKey;
      obj.collection = this.collection;
      obj.entityId = this.entityId;
      obj.encryptionKey = this.client ? this.client.encryptionKey : undefined;
      return obj;
    }
  }, {
    key: 'body',
    get: function get() {
      return this._body;
    },
    set: function set(body) {
      this._body = (0, _cloneDeep2.default)(body);
    }
  }, {
    key: 'query',
    get: function get() {
      return this._query;
    },
    set: function set(query) {
      if ((0, _utils.isDefined)(query) && !(query instanceof _query.Query)) {
        throw new _errors.KinveyError('Invalid query. It must be an instance of the Query class.');
      }

      this._query = query;
    }
  }, {
    key: 'aggregation',
    get: function get() {
      return this._aggregation;
    },
    set: function set(aggregation) {
      if ((0, _utils.isDefined)(aggregation) && !(aggregation instanceof _aggregation.Aggregation)) {
        throw new _errors.KinveyError('Invalid aggregation. It must be an instance of the Aggregation class.');
      }

      this._aggregation = aggregation;
    }
  }, {
    key: 'url',
    get: function get() {
      return _get(CacheRequest.prototype.__proto__ || Object.getPrototypeOf(CacheRequest.prototype), 'url', this);
    },
    set: function set(urlString) {
      _set(CacheRequest.prototype.__proto__ || Object.getPrototypeOf(CacheRequest.prototype), 'url', urlString, this);
      var pathname = global.decodeURIComponent(_url2.default.parse(urlString).pathname);
      var urlParts = pathname.replace(/^\//, '').split('/');
      // "pathname" has the following form: "/namespace/appKey/collection/id"
      this.appKey = urlParts[1];
      this.collection = urlParts[2];
      this.entityId = urlParts[3];
    }
  }]);

  return CacheRequest;
}(_request.Request);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../../../../../../.nvm/versions/node/v8.6.0/lib/node_modules/webpack/buildin/global.js */ 23)))

/***/ }),
/* 95 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/cloneDeep.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseClone = __webpack_require__(/*! ./_baseClone */ 154);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

module.exports = cloneDeep;


/***/ }),
/* 96 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_toSource.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),
/* 97 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arrayEach.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),
/* 98 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_defineProperty.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 24);

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),
/* 99 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arrayLikeKeys.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(/*! ./_baseTimes */ 182),
    isArguments = __webpack_require__(/*! ./isArguments */ 42),
    isArray = __webpack_require__(/*! ./isArray */ 4),
    isBuffer = __webpack_require__(/*! ./isBuffer */ 43),
    isIndex = __webpack_require__(/*! ./_isIndex */ 44),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ 64);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),
/* 100 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseUnary.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),
/* 101 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseKeys.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(/*! ./_isPrototype */ 31),
    nativeKeys = __webpack_require__(/*! ./_nativeKeys */ 187);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),
/* 102 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_overArg.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),
/* 103 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/stubArray.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),
/* 104 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getSymbolsIn.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ 67),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ 68),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ 66),
    stubArray = __webpack_require__(/*! ./stubArray */ 103);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),
/* 105 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getAllKeys.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ 106),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ 66),
    keys = __webpack_require__(/*! ./keys */ 20);

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),
/* 106 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseGetAllKeys.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ 67),
    isArray = __webpack_require__(/*! ./isArray */ 4);

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),
/* 107 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_Uint8Array.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ 13);

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),
/* 108 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_mapToArray.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),
/* 109 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_setToArray.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),
/* 110 */
/*!***********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/utils/object.js ***!
  \***********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.isDefined = isDefined;
exports.isNumber = isNumber;
exports.nested = nested;
exports.keyBy = keyBy;
exports.isEmpty = isEmpty;

var _isNull = __webpack_require__(/*! lodash/isNull */ 250);

var _isNull2 = _interopRequireDefault(_isNull);

var _isUndefined = __webpack_require__(/*! lodash/isUndefined */ 251);

var _isUndefined2 = _interopRequireDefault(_isUndefined);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isDefined(obj) {
  return (0, _isUndefined2.default)(obj) === false && (0, _isNull2.default)(obj) === false;
}

function isNumber(num) {
  return !Number.isNaN(parseFloat(num)) && Number.isFinite(num);
}

function nested(obj, dotProperty, value) {
  if (isDefined(dotProperty) === false) {
    obj = value || obj;
    return obj;
  }

  var parts = dotProperty.split('.');
  var current = parts.shift();
  while (current && obj) {
    obj = obj[current];
    current = parts.shift();
  }

  return value || obj;
}

function keyBy(array, iteratee) {
  if (!array) {
    return {};
  }

  return array.reduce(function (result, value) {
    result[iteratee] = value[iteratee];
    return result;
  }, {});
}

function isEmpty(obj) {
  // null and undefined are "empty"
  if (!isDefined(obj)) return true;

  // Assume if it has a length property with a non-zero value
  // that that property is correct.
  if (obj.length > 0) return false;
  if (obj.length === 0) return true;

  // If it isn't an object at this point
  // it is empty, but it can't be anything *but* empty
  // Is it empty?  Depends on your application.
  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') return true;

  // Otherwise, does it have any properties of its own?
  // Note that this doesn't handle
  // toString and valueOf enumeration bugs in IE < 9
  return Object.keys(obj).reduce(function (result, key) {
    if (!result) return false;
    if (Object.hasOwnProperty.call(obj, key)) return false;
    return true;
  }, true);
}

/***/ }),
/* 111 */
/*!***************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/qs/lib/utils.js ***!
  \***************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty;

var hexTable = (function () {
    var array = [];
    for (var i = 0; i < 256; ++i) {
        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
    }

    return array;
}());

var compactQueue = function compactQueue(queue) {
    var obj;

    while (queue.length) {
        var item = queue.pop();
        obj = item.obj[item.prop];

        if (Array.isArray(obj)) {
            var compacted = [];

            for (var j = 0; j < obj.length; ++j) {
                if (typeof obj[j] !== 'undefined') {
                    compacted.push(obj[j]);
                }
            }

            item.obj[item.prop] = compacted;
        }
    }

    return obj;
};

exports.arrayToObject = function arrayToObject(source, options) {
    var obj = options && options.plainObjects ? Object.create(null) : {};
    for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== 'undefined') {
            obj[i] = source[i];
        }
    }

    return obj;
};

exports.merge = function merge(target, source, options) {
    if (!source) {
        return target;
    }

    if (typeof source !== 'object') {
        if (Array.isArray(target)) {
            target.push(source);
        } else if (typeof target === 'object') {
            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {
                target[source] = true;
            }
        } else {
            return [target, source];
        }

        return target;
    }

    if (typeof target !== 'object') {
        return [target].concat(source);
    }

    var mergeTarget = target;
    if (Array.isArray(target) && !Array.isArray(source)) {
        mergeTarget = exports.arrayToObject(target, options);
    }

    if (Array.isArray(target) && Array.isArray(source)) {
        source.forEach(function (item, i) {
            if (has.call(target, i)) {
                if (target[i] && typeof target[i] === 'object') {
                    target[i] = exports.merge(target[i], item, options);
                } else {
                    target.push(item);
                }
            } else {
                target[i] = item;
            }
        });
        return target;
    }

    return Object.keys(source).reduce(function (acc, key) {
        var value = source[key];

        if (has.call(acc, key)) {
            acc[key] = exports.merge(acc[key], value, options);
        } else {
            acc[key] = value;
        }
        return acc;
    }, mergeTarget);
};

exports.assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function (acc, key) {
        acc[key] = source[key];
        return acc;
    }, target);
};

exports.decode = function (str) {
    try {
        return decodeURIComponent(str.replace(/\+/g, ' '));
    } catch (e) {
        return str;
    }
};

exports.encode = function encode(str) {
    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) {
        return str;
    }

    var string = typeof str === 'string' ? str : String(str);

    var out = '';
    for (var i = 0; i < string.length; ++i) {
        var c = string.charCodeAt(i);

        if (
            c === 0x2D // -
            || c === 0x2E // .
            || c === 0x5F // _
            || c === 0x7E // ~
            || (c >= 0x30 && c <= 0x39) // 0-9
            || (c >= 0x41 && c <= 0x5A) // a-z
            || (c >= 0x61 && c <= 0x7A) // A-Z
        ) {
            out += string.charAt(i);
            continue;
        }

        if (c < 0x80) {
            out = out + hexTable[c];
            continue;
        }

        if (c < 0x800) {
            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        if (c < 0xD800 || c >= 0xE000) {
            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        i += 1;
        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
        out += hexTable[0xF0 | (c >> 18)]
            + hexTable[0x80 | ((c >> 12) & 0x3F)]
            + hexTable[0x80 | ((c >> 6) & 0x3F)]
            + hexTable[0x80 | (c & 0x3F)];
    }

    return out;
};

exports.compact = function compact(value) {
    var queue = [{ obj: { o: value }, prop: 'o' }];
    var refs = [];

    for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];

        var keys = Object.keys(obj);
        for (var j = 0; j < keys.length; ++j) {
            var key = keys[j];
            var val = obj[key];
            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
                queue.push({ obj: obj, prop: key });
                refs.push(val);
            }
        }
    }

    return compactQueue(queue);
};

exports.isRegExp = function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
};

exports.isBuffer = function isBuffer(obj) {
    if (obj === null || typeof obj === 'undefined') {
        return false;
    }

    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};


/***/ }),
/* 112 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/qs/lib/formats.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var replace = String.prototype.replace;
var percentTwenties = /%20/g;

module.exports = {
    'default': 'RFC3986',
    formatters: {
        RFC1738: function (value) {
            return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function (value) {
            return value;
        }
    },
    RFC1738: 'RFC1738',
    RFC3986: 'RFC3986'
};


/***/ }),
/* 113 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_apply.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),
/* 114 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_isIterateeCall.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ 30),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16),
    isIndex = __webpack_require__(/*! ./_isIndex */ 44),
    isObject = __webpack_require__(/*! ./isObject */ 14);

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),
/* 115 */
/*!*************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/fast-memory-cache/lib/memory-cache.js ***!
  \*************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Provides in-memory cache.
 *
 * @name MemoryCache
 * @constructor
 */
function MemoryCache() {
    this._cache = createMap();
    this._timeouts = createMap();
}

/**
 * Returns cache value for the specified key.
 *
 * @param {String} key
 * @returns {*} Value or `undefined` if value does not exist.
 */
MemoryCache.prototype.get = function (key) {
    return this._cache[key];
};

/**
 * Assigns value for the specified key.
 *
 * @param {String} key
 * @param {*} value
 * @param {Number} [expireTime=0] The length of time in seconds. After this time has expired, the
 *      value will be automatically deleted. 0 means that time never expire.
 */
MemoryCache.prototype.set = function (key, value, expireTime) {
    this.delete(key);
    this._cache[key] = value;
    if (expireTime) {
        this._timeouts[key] = setTimeout(this.delete.bind(this, key), expireTime * 1000);
    }
};

/**
 * Deletes value for the specified key.
 *
 * @param {String} key
 */
MemoryCache.prototype.delete = function (key) {
    delete this._cache[key];
    if (key in this._timeouts) {
        clearTimeout(this._timeouts[key]);
        delete this._timeouts[key];
    }
};

/**
 * Clears the whole cache storage.
 */
MemoryCache.prototype.clear = function () {
    this._cache = createMap();
    for (var key in this._timeouts) {
        clearTimeout(this._timeouts[key]);
    }
    this._timeouts = createMap();
};

/**
 * Creates a new object without a prototype. This object is useful for lookup without having to
 * guard against prototypically inherited properties via hasOwnProperty.
 *
 * @returns {Object}
 */
function createMap() {
    return Object.create(null);
}

module.exports = MemoryCache;


/***/ }),
/* 116 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseIsEqual.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(/*! ./_baseIsEqualDeep */ 269),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 15);

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),
/* 117 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_equalArrays.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ 118),
    arraySome = __webpack_require__(/*! ./_arraySome */ 272),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ 119);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),
/* 118 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_SetCache.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ 61),
    setCacheAdd = __webpack_require__(/*! ./_setCacheAdd */ 270),
    setCacheHas = __webpack_require__(/*! ./_setCacheHas */ 271);

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),
/* 119 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_cacheHas.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),
/* 120 */
/*!*****************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_isStrictComparable.js ***!
  \*****************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ 14);

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;


/***/ }),
/* 121 */
/*!**********************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_matchesStrictComparable.js ***!
  \**********************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;


/***/ }),
/* 122 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/middleware/index.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cache = __webpack_require__(/*! ./cache */ 291);

Object.keys(_cache).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _cache[key];
    }
  });
});

var _http = __webpack_require__(/*! ./http */ 304);

Object.keys(_http).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _http[key];
    }
  });
});

var _middleware = __webpack_require__(/*! ./middleware */ 35);

Object.keys(_middleware).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _middleware[key];
    }
  });
});

var _parse = __webpack_require__(/*! ./parse */ 305);

Object.keys(_parse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _parse[key];
    }
  });
});

var _serialize = __webpack_require__(/*! ./serialize */ 306);

Object.keys(_serialize).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _serialize[key];
    }
  });
});

var _storage = __webpack_require__(/*! ./storage */ 123);

Object.keys(_storage).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _storage[key];
    }
  });
});

/***/ }),
/* 123 */
/*!*******************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/middleware/storage/index.js ***!
  \*******************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MemoryAdapter = exports.Storage = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _isArray = __webpack_require__(/*! lodash/isArray */ 4);

var _isArray2 = _interopRequireDefault(_isArray);

var _utils = __webpack_require__(/*! ../../../utils */ 2);

var _promiseQueue = __webpack_require__(/*! ./promise-queue */ 293);

var _log = __webpack_require__(/*! ../../../log */ 21);

var _errors = __webpack_require__(/*! ../../../errors */ 1);

var _memory = __webpack_require__(/*! ./memory */ 294);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var queue = new _promiseQueue.Queue(1, Infinity);

var Storage = exports.Storage = function () {
  function Storage(name) {
    _classCallCheck(this, Storage);

    if (!name) {
      throw new _errors.KinveyError('Unable to create a Storage instance without a name.');
    }

    if (!(0, _isString2.default)(name)) {
      throw new _errors.KinveyError('The name is not a string. A name must be a string to create a Storage instance.');
    }

    this.name = name;
  }

  _createClass(Storage, [{
    key: 'loadAdapter',
    value: function loadAdapter() {
      return _memory.MemoryAdapter.load(this.name).then(function (adapter) {
        if (!(0, _utils.isDefined)(adapter)) {
          return _es6Promise2.default.reject(new _errors.KinveyError('Unable to load a storage adapter.'));
        }

        return adapter;
      });
    }
  }, {
    key: 'generateObjectId',
    value: function generateObjectId() {
      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 24;

      var chars = 'abcdef0123456789';
      var objectId = '';

      for (var i = 0, j = chars.length; i < length; i += 1) {
        var pos = Math.floor(Math.random() * j);
        objectId += chars.substring(pos, pos + 1);
      }

      return objectId;
    }
  }, {
    key: 'find',
    value: function find(collection) {
      return this.loadAdapter().then(function (adapter) {
        _log.Log.debug('Find all the entities stored in the ' + collection + ' collection.', adapter);
        return adapter.find(collection);
      }).catch(function (error) {
        _log.Log.error('Unable to find all the entities stored in the ' + collection + ' collection.', error);
        if (error instanceof _errors.NotFoundError || error.code === 404) {
          return [];
        }

        return _es6Promise2.default.reject(error);
      }).then(function () {
        var entities = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        return entities;
      });
    }
  }, {
    key: 'findById',
    value: function findById(collection, id) {
      if (!(0, _isString2.default)(id)) {
        var error = new _errors.KinveyError('id must be a string', id);
        _log.Log.error('Unable to find an entity with id ' + id + ' stored in the ' + collection + ' collection.', error.message);
        return _es6Promise2.default.reject(error);
      }

      return this.loadAdapter().then(function (adapter) {
        _log.Log.debug('Find an entity with id ' + id + ' stored in the ' + collection + ' collection.', adapter);
        return adapter.findById(collection, id);
      });
    }
  }, {
    key: 'save',
    value: function save(collection) {
      var _this = this;

      var entities = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      return queue.add(function () {
        var singular = false;

        if (!(0, _utils.isDefined)(entities)) {
          return _es6Promise2.default.resolve(null);
        }

        if (!(0, _isArray2.default)(entities)) {
          singular = true;
          entities = [entities];
        }

        entities = entities.map(function (entity) {
          if (!(0, _utils.isDefined)(entity._id)) {
            var kmd = entity._kmd || {};
            kmd.local = true;
            entity._kmd = kmd;
            entity._id = _this.generateObjectId();
          }

          return entity;
        });

        return _this.loadAdapter().then(function (adapter) {
          return adapter.save(collection, entities);
        }).then(function (entities) {
          if (singular && entities.length > 0) {
            return entities[0];
          }

          return entities;
        });
      });
    }
  }, {
    key: 'remove',
    value: function remove(collection) {
      var _this2 = this;

      var entities = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      return _es6Promise2.default.all(entities.map(function (entity) {
        if (!(0, _utils.isDefined)(entity._id)) {
          return _es6Promise2.default.reject(new _errors.KinveyError('Unable to remove this entity because it does not have _id.'));
        }

        return _this2.removeById(collection, entity._id);
      })).then(function (results) {
        return results.reduce(function (response, result) {
          response.count += result.count;
          return response;
        }, { count: 0 });
      });
    }
  }, {
    key: 'removeById',
    value: function removeById(collection, id) {
      var _this3 = this;

      return queue.add(function () {
        if (!(0, _isString2.default)(id)) {
          return _es6Promise2.default.reject(new _errors.KinveyError('id must be a string', id));
        }

        return _this3.loadAdapter().then(function (adapter) {
          return adapter.removeById(collection, id);
        });
      });
    }
  }, {
    key: 'clear',
    value: function clear() {
      var _this4 = this;

      return queue.add(function () {
        return _this4.loadAdapter().then(function (adapter) {
          return adapter.clear();
        });
      });
    }
  }]);

  return Storage;
}();

exports.MemoryAdapter = _memory.MemoryAdapter;

/***/ }),
/* 124 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseFindIndex.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;


/***/ }),
/* 125 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/result.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ 51),
    isFunction = __webpack_require__(/*! ./isFunction */ 19),
    toKey = __webpack_require__(/*! ./_toKey */ 28);

/**
 * This method is like `_.get` except that if the resolved value is a
 * function it's invoked with the `this` binding of its parent object and
 * its result is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to resolve.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
 *
 * _.result(object, 'a[0].b.c1');
 * // => 3
 *
 * _.result(object, 'a[0].b.c2');
 * // => 4
 *
 * _.result(object, 'a[0].b.c3', 'default');
 * // => 'default'
 *
 * _.result(object, 'a[0].b.c3', _.constant('default'));
 * // => 'default'
 */
function result(object, path, defaultValue) {
  path = castPath(path, object);

  var index = -1,
      length = path.length;

  // Ensure the loop is entered when path is empty.
  if (!length) {
    length = 1;
    object = undefined;
  }
  while (++index < length) {
    var value = object == null ? undefined : object[toKey(path[index])];
    if (value === undefined) {
      index = length;
      value = defaultValue;
    }
    object = isFunction(value) ? value.call(object) : value;
  }
  return object;
}

module.exports = result;


/***/ }),
/* 126 */
/*!**************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/network.js ***!
  \**************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KinveyRequest = exports.Properties = exports.AuthType = exports.NetworkRequest = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if ("value" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _buffer = __webpack_require__(/*! buffer */ 308);

var _qs = __webpack_require__(/*! qs */ 72);

var _qs2 = _interopRequireDefault(_qs);

var _assign = __webpack_require__(/*! lodash/assign */ 17);

var _assign2 = _interopRequireDefault(_assign);

var _defaults = __webpack_require__(/*! lodash/defaults */ 312);

var _defaults2 = _interopRequireDefault(_defaults);

var _isEmpty = __webpack_require__(/*! lodash/isEmpty */ 47);

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _client = __webpack_require__(/*! ../client */ 10);

var _query = __webpack_require__(/*! ../query */ 12);

var _aggregation = __webpack_require__(/*! ../aggregation */ 27);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _request = __webpack_require__(/*! ./request */ 49);

var _headers = __webpack_require__(/*! ./headers */ 50);

var _rack = __webpack_require__(/*! ./rack */ 76);

var _response = __webpack_require__(/*! ./response */ 34);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NetworkRequest = exports.NetworkRequest = function (_Request) {
  _inherits(NetworkRequest, _Request);

  function NetworkRequest() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, NetworkRequest);

    var _this = _possibleConstructorReturn(this, (NetworkRequest.__proto__ || Object.getPrototypeOf(NetworkRequest)).call(this, options));

    _this.rack = _rack.NetworkRack;
    return _this;
  }

  return NetworkRequest;
}(_request.Request);

var AuthType = exports.AuthType = {
  All: 'All',
  App: 'App',
  Basic: 'Basic',
  Default: 'Default',
  Master: 'Master',
  None: 'None',
  Session: 'Session'
};
Object.freeze(AuthType);

var Auth = {
  /**
   * Authenticate through (1) user credentials, (2) Master Secret, or (3) App
   * Secret.
   *
   * @returns {Object}
   */
  all: function all(client) {
    return Auth.session(client).catch(function () {
      return Auth.basic(client);
    });
  },


  /**
   * Authenticate through App Secret.
   *
   * @returns {Object}
   */
  app: function app(client) {
    if (!client.appKey || !client.appSecret) {
      return _es6Promise2.default.reject(new Error('Missing client appKey and/or appSecret.' + ' Use Kinvey.initialize() to set the appKey and appSecret for the client.'));
    }

    return _es6Promise2.default.resolve({
      scheme: 'Basic',
      username: client.appKey,
      password: client.appSecret
    });
  },


  /**
   * Authenticate through (1) Master Secret, or (2) App Secret.
   *
   * @returns {Object}
   */
  basic: function basic(client) {
    return Auth.master(client).catch(function () {
      return Auth.app(client);
    });
  },


  /**
   * Authenticate through Master Secret.
   *
   * @returns {Object}
   */
  master: function master(client) {
    if (!client.appKey || !client.masterSecret) {
      return _es6Promise2.default.reject(new Error('Missing client appKey and/or masterSecret.' + ' Use Kinvey.initialize() to set the appKey and masterSecret for the client.'));
    }

    return _es6Promise2.default.resolve({
      scheme: 'Basic',
      username: client.appKey,
      password: client.masterSecret
    });
  },


  /**
   * Do not authenticate.
   *
   * @returns {Null}
   */
  none: function none() {
    return _es6Promise2.default.resolve(null);
  },


  /**
   * Authenticate through user credentials.
   *
   * @returns {Object}
   */
  session: function session(client) {
    var activeUser = client.getActiveUser();

    if (!(0, _utils.isDefined)(activeUser)) {
      return _es6Promise2.default.reject(new _errors.NoActiveUserError('There is not an active user. Please login a user and retry the request.'));
    }

    return _es6Promise2.default.resolve({
      scheme: 'Kinvey',
      credentials: activeUser._kmd.authtoken
    });
  }
};

function byteCount(str) {
  if (str) {
    var count = 0;
    var stringLength = str.length;
    str = String(str || '');

    for (var i = 0; i < stringLength; i += 1) {
      var partCount = encodeURI(str[i]).split('%').length;
      count += partCount === 1 ? 1 : partCount - 1;
    }

    return count;
  }

  return 0;
}

var Properties = exports.Properties = function (_Headers) {
  _inherits(Properties, _Headers);

  function Properties() {
    _classCallCheck(this, Properties);

    return _possibleConstructorReturn(this, (Properties.__proto__ || Object.getPrototypeOf(Properties)).apply(this, arguments));
  }

  return Properties;
}(_headers.Headers);

var KinveyRequest = exports.KinveyRequest = function (_NetworkRequest) {
  _inherits(KinveyRequest, _NetworkRequest);

  function KinveyRequest() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, KinveyRequest);

    var _this3 = _possibleConstructorReturn(this, (KinveyRequest.__proto__ || Object.getPrototypeOf(KinveyRequest)).call(this, options));

    options = (0, _assign2.default)({
      skipBL: false,
      trace: false
    }, options);

    _this3.authType = options.authType || AuthType.None;
    _this3.query = options.query;
    _this3.aggregation = options.aggregation;
    _this3.properties = options.properties || new Properties();
    _this3.skipBL = options.skipBL === true;
    _this3.trace = options.trace === true;
    return _this3;
  }

  _createClass(KinveyRequest, [{
    key: 'getAuthorizationHeader',
    value: function getAuthorizationHeader() {
      var _this4 = this;

      var promise = _es6Promise2.default.resolve(undefined);

      // Add or remove the Authorization header
      if (this.authType) {
        // Get the auth info based on the set AuthType
        switch (this.authType) {
          case AuthType.All:
            promise = Auth.all(this.client);
            break;
          case AuthType.App:
            promise = Auth.app(this.client);
            break;
          case AuthType.Basic:
            promise = Auth.basic(this.client);
            break;
          case AuthType.Master:
            promise = Auth.master(this.client);
            break;
          case AuthType.None:
            promise = Auth.none(this.client);
            break;
          case AuthType.Session:
            promise = Auth.session(this.client);
            break;
          default:
            promise = Auth.session(this.client).catch(function (error) {
              return Auth.master(_this4.client).catch(function () {
                throw error;
              });
            });
        }
      }

      return promise.then(function (authInfo) {
        // Add the auth info to the Authorization header
        if ((0, _utils.isDefined)(authInfo)) {
          var credentials = authInfo.credentials;

          if (authInfo.username) {
            credentials = new _buffer.Buffer(authInfo.username + ':' + authInfo.password).toString('base64');
          }

          return authInfo.scheme + ' ' + credentials;
        }

        return undefined;
      });
    }

    /** @returns {Promise} */

  }, {
    key: 'execute',
    value: function execute() {
      var _this5 = this;

      var rawResponse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var retry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      return this.getAuthorizationHeader().then(function (authorizationHeader) {
        if ((0, _utils.isDefined)(authorizationHeader)) {
          _this5.headers.set('Authorization', authorizationHeader);
        } else {
          _this5.headers.remove('Authorization');
        }
      }).then(function () {
        return _get(KinveyRequest.prototype.__proto__ || Object.getPrototypeOf(KinveyRequest.prototype), 'execute', _this5).call(_this5);
      }).then(function (response) {
        if (response instanceof _response.KinveyResponse === false) {
          response = new _response.KinveyResponse({
            statusCode: response.statusCode,
            headers: response.headers,
            data: response.data
          });
        }

        if (rawResponse === false && response.isSuccess() === false) {
          throw response.error;
        }

        return response;
      }).catch(function (error) {
        if (retry && error instanceof _errors.InvalidCredentialsError) {
          var activeUser = _this5.client.getActiveUser();

          if ((0, _utils.isDefined)(activeUser)) {
            var socialIdentity = (0, _utils.isDefined)(activeUser._socialIdentity) ? activeUser._socialIdentity : {};
            var sessionKey = Object.keys(socialIdentity).find(function (sessionKey) {
              return socialIdentity[sessionKey].identity === 'kinveyAuth';
            });
            var oldSession = socialIdentity[sessionKey];

            if ((0, _utils.isDefined)(oldSession)) {
              var request = new KinveyRequest({
                method: _request.RequestMethod.POST,
                headers: {
                  'Content-Type': 'application/x-www-form-urlencoded'
                },
                authType: AuthType.App,
                url: _url2.default.format({
                  protocol: _this5.client.micProtocol,
                  host: _this5.client.micHost,
                  pathname: '/oauth/token'
                }),
                body: {
                  grant_type: 'refresh_token',
                  client_id: oldSession.client_id,
                  redirect_uri: oldSession.redirect_uri,
                  refresh_token: oldSession.refresh_token
                },
                properties: _this5.properties,
                timeout: _this5.timeout
              });
              return request.execute().then(function (response) {
                return response.data;
              }).then(function (session) {
                session.identity = oldSession.identity;
                session.client_id = oldSession.client_id;
                session.redirect_uri = oldSession.redirect_uri;
                session.protocol = _this5.client.micProtocol;
                session.host = _this5.client.micHost;
                return session;
              }).then(function (session) {
                var data = {};
                socialIdentity[session.identity] = session;
                data._socialIdentity = socialIdentity;

                var request = new KinveyRequest({
                  method: _request.RequestMethod.POST,
                  authType: AuthType.App,
                  url: _url2.default.format({
                    protocol: _this5.client.apiProtocol,
                    host: _this5.client.apiHost,
                    pathname: '/user/' + _this5.client.appKey + '/login'
                  }),
                  properties: _this5.properties,
                  body: data,
                  timeout: _this5.timeout,
                  client: _this5.client
                });
                return request.execute().then(function (response) {
                  return response.data;
                }).then(function (user) {
                  user._socialIdentity[session.identity] = (0, _defaults2.default)(user._socialIdentity[session.identity], session);
                  return _this5.client.setActiveUser(user);
                });
              }).then(function () {
                return _this5.execute(rawResponse, false);
              }).catch(function () {
                return _es6Promise2.default.reject(error);
              });
            }
          }
        }

        return _es6Promise2.default.reject(error);
      });
    }
  }, {
    key: 'appVersion',
    get: function get() {
      return this.client.appVersion;
    }
  }, {
    key: 'query',
    get: function get() {
      return this._query;
    },
    set: function set(query) {
      if ((0, _utils.isDefined)(query) && !(query instanceof _query.Query)) {
        throw new _errors.KinveyError('Invalid query. It must be an instance of the Query class.');
      }

      this._query = query;
    }
  }, {
    key: 'aggregation',
    get: function get() {
      return this._aggregation;
    },
    set: function set(aggregation) {
      if ((0, _utils.isDefined)(aggregation) && !(aggregation instanceof _aggregation.Aggregation)) {
        throw new _errors.KinveyError('Invalid aggregation. It must be an instance of the Aggregation class.');
      }

      if ((0, _utils.isDefined)(aggregation)) {
        this.body = aggregation.toPlainObject();
      }

      this._aggregation = aggregation;
    }
  }, {
    key: 'headers',
    get: function get() {
      var headers = _get(KinveyRequest.prototype.__proto__ || Object.getPrototypeOf(KinveyRequest.prototype), 'headers', this);

      // Add the Accept header
      if (!headers.has('Accept')) {
        headers.set('Accept', 'application/json; charset=utf-8');
      }

      // Add the Content-Type header
      if (!headers.has('Content-Type')) {
        headers.set('Content-Type', 'application/json; charset=utf-8');
      }

      // Add the X-Kinvey-API-Version header
      if (!headers.has('X-Kinvey-Api-Version')) {
        headers.set('X-Kinvey-Api-Version', 4);
      }

      // Add or remove the X-Kinvey-Skip-Business-Logic header
      if (this.skipBL === true) {
        headers.set('X-Kinvey-Skip-Business-Logic', true);
      } else {
        headers.remove('X-Kinvey-Skip-Business-Logic');
      }

      // Add or remove the X-Kinvey-Include-Headers-In-Response and X-Kinvey-ResponseWrapper headers
      if (this.trace === true) {
        headers.set('X-Kinvey-Include-Headers-In-Response', 'X-Kinvey-Request-Id');
        headers.set('X-Kinvey-ResponseWrapper', true);
      } else {
        headers.remove('X-Kinvey-Include-Headers-In-Response');
        headers.remove('X-Kinvey-ResponseWrapper');
      }

      // Add or remove the X-Kinvey-Client-App-Version header
      if (this.appVersion) {
        headers.set('X-Kinvey-Client-App-Version', this.appVersion);
      } else {
        headers.remove('X-Kinvey-Client-App-Version');
      }

      // Add or remove X-Kinvey-Custom-Request-Properties header
      if (this.properties) {
        var customPropertiesHeader = this.properties.toString();

        if (!(0, _isEmpty2.default)(customPropertiesHeader)) {
          var customPropertiesByteCount = byteCount(customPropertiesHeader);

          if (customPropertiesByteCount >= 2000) {
            throw new Error('The custom properties are ' + customPropertiesByteCount + ' bytes.' + 'It must be less then 2000 bytes.', 'Please remove some custom properties.');
          }

          headers.set('X-Kinvey-Custom-Request-Properties', customPropertiesHeader);
        } else {
          headers.remove('X-Kinvey-Custom-Request-Properties');
        }
      } else {
        headers.remove('X-Kinvey-Custom-Request-Properties');
      }

      // Return the headers
      return headers;
    },
    set: function set(headers) {
      _set(KinveyRequest.prototype.__proto__ || Object.getPrototypeOf(KinveyRequest.prototype), 'headers', headers, this);
    }
  }, {
    key: 'url',
    get: function get() {
      var urlString = _get(KinveyRequest.prototype.__proto__ || Object.getPrototypeOf(KinveyRequest.prototype), 'url', this);
      var queryString = this.query ? this.query.toQueryString() : {};

      if ((0, _isEmpty2.default)(queryString)) {
        return urlString;
      }

      return (0, _utils.appendQuery)(urlString, _qs2.default.stringify(queryString));
    },
    set: function set(urlString) {
      _set(KinveyRequest.prototype.__proto__ || Object.getPrototypeOf(KinveyRequest.prototype), 'url', urlString, this);
    }
  }, {
    key: 'properties',
    get: function get() {
      return this._properties;
    },
    set: function set(properties) {
      if (properties && properties instanceof Properties === false) {
        properties = new Properties(properties);
      }

      this._properties = properties;
    }
  }], [{
    key: 'executeShort',
    value: function executeShort(options, client) {
      var dataOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

      var o = (0, _assign2.default)({
        method: _request.RequestMethod.GET,
        authType: AuthType.Session
      }, options);
      client = client || _client.Client.sharedInstance();

      if (!o.url && (0, _isString2.default)(o.pathname) && client) {
        o.url = _url2.default.format({
          protocol: client.apiProtocol,
          host: client.apiHost,
          pathname: o.pathname
        });
      }

      var prm = KinveyRequest.execute(o);
      if (dataOnly) {
        prm = prm.then(function (r) {
          return r.data;
        });
      }
      return prm;
    }
  }, {
    key: 'execute',
    value: function execute(options) {
      return new KinveyRequest(options).execute();
    }
  }]);

  return KinveyRequest;
}(NetworkRequest);

/***/ }),
/* 127 */
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = require("http");

/***/ }),
/* 128 */
/*!***************************!*\
  !*** external "platform" ***!
  \***************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = require("platform");

/***/ }),
/* 129 */
/*!**************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/last.js ***!
  \**************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;


/***/ }),
/* 130 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/Subscriber.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isFunction_1 = __webpack_require__(/*! ./util/isFunction */ 131);
var Subscription_1 = __webpack_require__(/*! ./Subscription */ 349);
var Observer_1 = __webpack_require__(/*! ./Observer */ 133);
var rxSubscriber_1 = __webpack_require__(/*! ./symbol/rxSubscriber */ 87);
/**
 * Implements the {@link Observer} interface and extends the
 * {@link Subscription} class. While the {@link Observer} is the public API for
 * consuming the values of an {@link Observable}, all Observers get converted to
 * a Subscriber, in order to provide Subscription-like capabilities such as
 * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for
 * implementing operators, but it is rarely used as a public API.
 *
 * @class Subscriber<T>
 */
var Subscriber = (function (_super) {
    __extends(Subscriber, _super);
    /**
     * @param {Observer|function(value: T): void} [destinationOrNext] A partially
     * defined Observer or a `next` callback function.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     */
    function Subscriber(destinationOrNext, error, complete) {
        _super.call(this);
        this.syncErrorValue = null;
        this.syncErrorThrown = false;
        this.syncErrorThrowable = false;
        this.isStopped = false;
        switch (arguments.length) {
            case 0:
                this.destination = Observer_1.empty;
                break;
            case 1:
                if (!destinationOrNext) {
                    this.destination = Observer_1.empty;
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        this.destination = destinationOrNext;
                        this.destination.add(this);
                    }
                    else {
                        this.syncErrorThrowable = true;
                        this.destination = new SafeSubscriber(this, destinationOrNext);
                    }
                    break;
                }
            default:
                this.syncErrorThrowable = true;
                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);
                break;
        }
    }
    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };
    /**
     * A static factory for a Subscriber, given a (potentially partial) definition
     * of an Observer.
     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)
     * Observer represented by the given arguments.
     */
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    /**
     * The {@link Observer} callback to receive notifications of type `next` from
     * the Observable, with a value. The Observable may call this method 0 or more
     * times.
     * @param {T} [value] The `next` value.
     * @return {void}
     */
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    /**
     * The {@link Observer} callback to receive notifications of type `error` from
     * the Observable, with an attached {@link Error}. Notifies the Observer that
     * the Observable has experienced an error condition.
     * @param {any} [err] The `error` exception.
     * @return {void}
     */
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    /**
     * The {@link Observer} callback to receive a valueless notification of type
     * `complete` from the Observable. Notifies the Observer that the Observable
     * has finished sending push-based notifications.
     * @return {void}
     */
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _a = this, _parent = _a._parent, _parents = _a._parents;
        this._parent = null;
        this._parents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parent = _parent;
        this._parents = _parents;
        return this;
    };
    return Subscriber;
}(Subscription_1.Subscription));
exports.Subscriber = Subscriber;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SafeSubscriber = (function (_super) {
    __extends(SafeSubscriber, _super);
    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        _super.call(this);
        this._parentSubscriber = _parentSubscriber;
        var next;
        var context = this;
        if (isFunction_1.isFunction(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (observerOrNext !== Observer_1.empty) {
                context = Object.create(observerOrNext);
                if (isFunction_1.isFunction(context.unsubscribe)) {
                    this.add(context.unsubscribe.bind(context));
                }
                context.unsubscribe = this.unsubscribe.bind(this);
            }
        }
        this._context = context;
        this._next = next;
        this._error = error;
        this._complete = complete;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parentSubscriber = this._parentSubscriber;
            if (!_parentSubscriber.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._error) {
                if (!_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parentSubscriber.syncErrorThrowable) {
                this.unsubscribe();
                throw err;
            }
            else {
                _parentSubscriber.syncErrorValue = err;
                _parentSubscriber.syncErrorThrown = true;
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        var _this = this;
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._complete) {
                var wrappedComplete = function () { return _this._complete.call(_this._context); };
                if (!_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(wrappedComplete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            throw err;
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            parent.syncErrorValue = err;
            parent.syncErrorThrown = true;
            return true;
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));
//# sourceMappingURL=Subscriber.js.map

/***/ }),
/* 131 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/util/isFunction.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isFunction(x) {
    return typeof x === 'function';
}
exports.isFunction = isFunction;
//# sourceMappingURL=isFunction.js.map

/***/ }),
/* 132 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/util/errorObject.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// typeof any so that it we don't have to cast when comparing a result to the error object
exports.errorObject = { e: {} };
//# sourceMappingURL=errorObject.js.map

/***/ }),
/* 133 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/Observer.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.empty = {
    closed: true,
    next: function (value) { },
    error: function (err) { throw err; },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map

/***/ }),
/* 134 */
/*!************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/components/cryptography/index.js ***!
  \************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(/*! ../config */ 29);

var _config2 = _interopRequireDefault(_config);

var _hmacSha = __webpack_require__(/*! ./hmac-sha256 */ 362);

var _hmacSha2 = _interopRequireDefault(_hmacSha);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _class = function () {
  function _class(_ref) {
    var config = _ref.config;

    _classCallCheck(this, _class);

    this._config = config;

    this._iv = '0123456789012345';

    this._allowedKeyEncodings = ['hex', 'utf8', 'base64', 'binary'];
    this._allowedKeyLengths = [128, 256];
    this._allowedModes = ['ecb', 'cbc'];

    this._defaultOptions = {
      encryptKey: true,
      keyEncoding: 'utf8',
      keyLength: 256,
      mode: 'cbc'
    };
  }

  _createClass(_class, [{
    key: 'HMACSHA256',
    value: function HMACSHA256(data) {
      var hash = _hmacSha2.default.HmacSHA256(data, this._config.secretKey);
      return hash.toString(_hmacSha2.default.enc.Base64);
    }
  }, {
    key: 'SHA256',
    value: function SHA256(s) {
      return _hmacSha2.default.SHA256(s).toString(_hmacSha2.default.enc.Hex);
    }
  }, {
    key: '_parseOptions',
    value: function _parseOptions(incomingOptions) {
      var options = incomingOptions || {};
      if (!options.hasOwnProperty('encryptKey')) options.encryptKey = this._defaultOptions.encryptKey;
      if (!options.hasOwnProperty('keyEncoding')) options.keyEncoding = this._defaultOptions.keyEncoding;
      if (!options.hasOwnProperty('keyLength')) options.keyLength = this._defaultOptions.keyLength;
      if (!options.hasOwnProperty('mode')) options.mode = this._defaultOptions.mode;

      if (this._allowedKeyEncodings.indexOf(options.keyEncoding.toLowerCase()) === -1) {
        options.keyEncoding = this._defaultOptions.keyEncoding;
      }

      if (this._allowedKeyLengths.indexOf(parseInt(options.keyLength, 10)) === -1) {
        options.keyLength = this._defaultOptions.keyLength;
      }

      if (this._allowedModes.indexOf(options.mode.toLowerCase()) === -1) {
        options.mode = this._defaultOptions.mode;
      }

      return options;
    }
  }, {
    key: '_decodeKey',
    value: function _decodeKey(key, options) {
      if (options.keyEncoding === 'base64') {
        return _hmacSha2.default.enc.Base64.parse(key);
      } else if (options.keyEncoding === 'hex') {
        return _hmacSha2.default.enc.Hex.parse(key);
      } else {
        return key;
      }
    }
  }, {
    key: '_getPaddedKey',
    value: function _getPaddedKey(key, options) {
      key = this._decodeKey(key, options);
      if (options.encryptKey) {
        return _hmacSha2.default.enc.Utf8.parse(this.SHA256(key).slice(0, 32));
      } else {
        return key;
      }
    }
  }, {
    key: '_getMode',
    value: function _getMode(options) {
      if (options.mode === 'ecb') {
        return _hmacSha2.default.mode.ECB;
      } else {
        return _hmacSha2.default.mode.CBC;
      }
    }
  }, {
    key: '_getIV',
    value: function _getIV(options) {
      return options.mode === 'cbc' ? _hmacSha2.default.enc.Utf8.parse(this._iv) : null;
    }
  }, {
    key: 'encrypt',
    value: function encrypt(data, customCipherKey, options) {
      if (this._config.customEncrypt) {
        return this._config.customEncrypt(data);
      } else {
        return this.pnEncrypt(data, customCipherKey, options);
      }
    }
  }, {
    key: 'decrypt',
    value: function decrypt(data, customCipherKey, options) {
      if (this._config.customDecrypt) {
        return this._config.customDecrypt(data);
      } else {
        return this.pnDecrypt(data, customCipherKey, options);
      }
    }
  }, {
    key: 'pnEncrypt',
    value: function pnEncrypt(data, customCipherKey, options) {
      if (!customCipherKey && !this._config.cipherKey) return data;
      options = this._parseOptions(options);
      var iv = this._getIV(options);
      var mode = this._getMode(options);
      var cipherKey = this._getPaddedKey(customCipherKey || this._config.cipherKey, options);
      var encryptedHexArray = _hmacSha2.default.AES.encrypt(data, cipherKey, { iv: iv, mode: mode }).ciphertext;
      var base64Encrypted = encryptedHexArray.toString(_hmacSha2.default.enc.Base64);
      return base64Encrypted || data;
    }
  }, {
    key: 'pnDecrypt',
    value: function pnDecrypt(data, customCipherKey, options) {
      if (!customCipherKey && !this._config.cipherKey) return data;
      options = this._parseOptions(options);
      var iv = this._getIV(options);
      var mode = this._getMode(options);
      var cipherKey = this._getPaddedKey(customCipherKey || this._config.cipherKey, options);
      try {
        var ciphertext = _hmacSha2.default.enc.Base64.parse(data);
        var plainJSON = _hmacSha2.default.AES.decrypt({ ciphertext: ciphertext }, cipherKey, { iv: iv, mode: mode }).toString(_hmacSha2.default.enc.Utf8);
        var plaintext = JSON.parse(plainJSON);
        return plaintext;
      } catch (e) {
        return null;
      }
    }
  }]);

  return _class;
}();

exports.default = _class;
module.exports = exports['default'];
//# sourceMappingURL=index.js.map


/***/ }),
/* 135 */
/*!**********************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/components/listener_manager.js ***!
  \**********************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _flow_interfaces = __webpack_require__(/*! ../flow_interfaces */ 3);

var _categories = __webpack_require__(/*! ../constants/categories */ 57);

var _categories2 = _interopRequireDefault(_categories);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _class = function () {
  function _class() {
    _classCallCheck(this, _class);

    this._listeners = [];
  }

  _createClass(_class, [{
    key: 'addListener',
    value: function addListener(newListeners) {
      this._listeners.push(newListeners);
    }
  }, {
    key: 'removeListener',
    value: function removeListener(deprecatedListener) {
      var newListeners = [];

      this._listeners.forEach(function (listener) {
        if (listener !== deprecatedListener) newListeners.push(listener);
      });

      this._listeners = newListeners;
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this._listeners = [];
    }
  }, {
    key: 'announcePresence',
    value: function announcePresence(announce) {
      this._listeners.forEach(function (listener) {
        if (listener.presence) listener.presence(announce);
      });
    }
  }, {
    key: 'announceStatus',
    value: function announceStatus(announce) {
      this._listeners.forEach(function (listener) {
        if (listener.status) listener.status(announce);
      });
    }
  }, {
    key: 'announceMessage',
    value: function announceMessage(announce) {
      this._listeners.forEach(function (listener) {
        if (listener.message) listener.message(announce);
      });
    }
  }, {
    key: 'announceNetworkUp',
    value: function announceNetworkUp() {
      var networkStatus = {};
      networkStatus.category = _categories2.default.PNNetworkUpCategory;
      this.announceStatus(networkStatus);
    }
  }, {
    key: 'announceNetworkDown',
    value: function announceNetworkDown() {
      var networkStatus = {};
      networkStatus.category = _categories2.default.PNNetworkDownCategory;
      this.announceStatus(networkStatus);
    }
  }]);

  return _class;
}();

exports.default = _class;
module.exports = exports['default'];
//# sourceMappingURL=listener_manager.js.map


/***/ }),
/* 136 */
/*!*********************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/time.js ***!
  \*********************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.prepareParams = prepareParams;
exports.isAuthSupported = isAuthSupported;
exports.handleResponse = handleResponse;
exports.validateParams = validateParams;

var _flow_interfaces = __webpack_require__(/*! ../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNTimeOperation;
}

function getURL() {
  return '/time/0';
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function prepareParams() {
  return {};
}

function isAuthSupported() {
  return false;
}

function handleResponse(modules, serverResponse) {
  return {
    timetoken: serverResponse[0]
  };
}

function validateParams() {}
//# sourceMappingURL=time.js.map


/***/ }),
/* 137 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/live/pubnub-listener.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PubNubListener = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _events = __webpack_require__(/*! events */ 54);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @typedef PubNubMessage
 * @property {string} channel The channel for which the message belongs
 * @property {string} subscription The channel group or wildcard subscription match (if exists)
 * @property {string|number} timetoken Publish timetoken
 * @property {Object} message The Payload
 */

/**
 * @typedef PubNubPresence
 * @property {string} action Can be join, leave, state-change or timeout
 * @property {string} channel The channel to which the message belongs
 * @property {string|number} occupancy Number of users connected to the channel
 * @property {string} state User State
 * @property {string} subscription The channel group or wildcard subscription match (if exists)
 * @property {string|number} timestamp Current timetoken
 * @property {string|number} timetoken Publish timetoken
 * @property {string[]} uuid UUIDs of users who are connected with the channel
 */

/**
 * @typedef PubNubStatus
 * @property {string} category The status category. An enum is in the PubNub docs. Example: PNConnectedCategory
 * @property {string} operation The operation the status is for. Example: PNSubscribeOperation
 * @property {string[]} affectedChannels The channels affected in the operation
 * @property {string[]} subscribedChannels All the current subscribed channels
 * @property {string[]} affectedChannelGroups The channel groups affected in the operation
 * @property {number} lastTimetoken The last timetoken used in the subscribe request
 * @property {number} currentTimetoken The current timetoken fetched in the subscribe response, which is going to be used in the next request
 */

var statusPrefix = 'status:';
var unclassifiedEvents = 'pubNubEventsNotRouted';

var PubNubListener = exports.PubNubListener = function (_EventEmitter) {
  _inherits(PubNubListener, _EventEmitter);

  function PubNubListener() {
    _classCallCheck(this, PubNubListener);

    return _possibleConstructorReturn(this, (PubNubListener.__proto__ || Object.getPrototypeOf(PubNubListener)).apply(this, arguments));
  }

  _createClass(PubNubListener, [{
    key: 'message',


    /** @param {PubNubMessage} m */
    value: function message(m) {
      this.emit(m.channel, m.message);
    }

    /** @param {PubNubStatus} s */

  }, {
    key: 'status',
    value: function status(s) {
      var _this2 = this;

      var allEvents = this._getEventNamesFromStatus(s.affectedChannels, s.affectedChannelGroups);
      if (allEvents.length) {
        allEvents.forEach(function (channelOrGroup) {
          _this2.emit('' + PubNubListener.statusPrefix + channelOrGroup, s);
        });
      } else {
        this.emit(PubNubListener.unclassifiedEvents, s);
      }
    }

    /**
     * @private
     * @param {string[]} [affectedChannels]
     * @param {string[]} [affectedChannelGroups]
     */

  }, {
    key: '_getEventNamesFromStatus',
    value: function _getEventNamesFromStatus(affectedChannels, affectedChannelGroups) {
      var channels = affectedChannels || [];
      var groups = affectedChannelGroups || [];
      return channels.concat(groups);
    }
  }], [{
    key: 'statusPrefix',
    get: function get() {
      return statusPrefix;
    }
  }, {
    key: 'unclassifiedEvents',
    get: function get() {
      return unclassifiedEvents;
    }
  }]);

  return PubNubListener;
}(_events.EventEmitter);

/***/ }),
/* 138 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/live/user-to-user/stream-acl.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StreamACL = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _isArray = __webpack_require__(/*! lodash/isArray */ 4);

var _isArray2 = _interopRequireDefault(_isArray);

var _every = __webpack_require__(/*! lodash/every */ 397);

var _every2 = _interopRequireDefault(_every);

var _errors = __webpack_require__(/*! ../../errors */ 1);

var _utils = __webpack_require__(/*! ../../utils */ 2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var invalidValueMsg = 'Invalid ACL object value';

/**
 * @typedef {object} PlainACLObject
 * @property {string[]} [publish]
 * @property {string[]} [subscribe]
 * @property {{publish?: string[], subscribe?: string[]}} [groups]
 */

var StreamACL = exports.StreamACL = function () {
  function StreamACL(obj) {
    _classCallCheck(this, StreamACL);

    this.publishers = [];
    this.subscribers = [];
    this.publisherGroups = [];
    this.subscriberGroups = [];

    if (obj) {
      if (obj instanceof StreamACL) {
        obj = obj.toPlainObject();
      }
      this._parsePlainObject(obj);
    }
  }

  /**
   * Checks if specified object has valid values for any
   * of the valid fiends for an ACL object
   * @param {object} obj Object to validate
   * @returns {boolean}
   */


  _createClass(StreamACL, [{
    key: 'addPublishers',


    /**
     * @param  {(User|User[]|string|string[])} publishers
     * @returns {this}
     */
    value: function addPublishers(publishers) {
      this._addToAcl(this.publishers, publishers);
      return this;
    }

    /**
     * @param  {(User|User[]|string|string[])} subscribers
     * @returns {this}
     */

  }, {
    key: 'addSubscribers',
    value: function addSubscribers(subscribers) {
      this._addToAcl(this.subscribers, subscribers);
      return this;
    }

    /**
     * @param  {(string|string[]|{_id: string})} groups
     * @returns {this}
     */

  }, {
    key: 'addPublisherGroups',
    value: function addPublisherGroups(groups) {
      this._addToAcl(this.publisherGroups, groups);
      return this;
    }

    /**
     * @param  {(string|string[]|{_id: string})} groups
     * @returns {this}
     */

  }, {
    key: 'addSubscriberGroups',
    value: function addSubscriberGroups(groups) {
      this._addToAcl(this.subscriberGroups, groups);
      return this;
    }

    /**
     * @param  {(User|User[]|string|string[])} publishers
     * @returns {this}
     */

  }, {
    key: 'removePublishers',
    value: function removePublishers(publishers) {
      this._removeFromAcl(this.publishers, publishers);
      return this;
    }

    /**
     * @param  {(User|User[]|string|string[])} subscribers
     * @returns {this}
     */

  }, {
    key: 'removeSubscribers',
    value: function removeSubscribers(subscribers) {
      this._removeFromAcl(this.subscribers, subscribers);
      return this;
    }

    /**
     * @param  {(string|string[]|{_id: string})} groups
     * @returns {this}
     */

  }, {
    key: 'removePublisherGroups',
    value: function removePublisherGroups(groups) {
      this._removeFromAcl(this.publisherGroups, groups);
      return this;
    }

    /**
     * @param  {(string|string[]|{_id: string})} groups
     * @returns {this}
     */

  }, {
    key: 'removeSubscriberGroups',
    value: function removeSubscriberGroups(groups) {
      this._removeFromAcl(this.subscriberGroups, groups);
      return this;
    }

    /**
     * Indicates whether the current object has any user IDs,
     * in any of its fields
     * @returns {Boolean}
     */

  }, {
    key: 'isNotEmpty',
    value: function isNotEmpty() {
      return this.publishers.length || this.subscribers.length || this.publisherGroups.length || this.subscriberGroups.length;
    }

    /**
     * Converts the StreamACL object to a serializable object
     * @returns {PlainACLObject}
     */

  }, {
    key: 'toPlainObject',
    value: function toPlainObject() {
      var res = {};

      if (this.subscribers.length) {
        res.subscribe = this.subscribers.slice(0);
      }
      if (this.publishers.length) {
        res.publish = this.publishers.slice(0);
      }

      if (this.subscriberGroups.length) {
        res.groups = res.groups || {};
        res.groups.subscribe = this.addSubscriberGroups.slice(0);
      }

      if (this.publisherGroups.length) {
        res.groups = res.groups || {};
        res.groups.publish = this.publisherGroups.slice(0);
      }

      return res;
    }

    /**
     * Populates current instance with data from a {@link {PlainACLObject}} object
     * @private
     * @param {PlainACLObject} plainACLObject
     */

  }, {
    key: '_parsePlainObject',
    value: function _parsePlainObject(plainACLObject) {
      if (plainACLObject.subscribe) {
        this.subscribers = this._ensureValidIdArray(plainACLObject.subscribe);
      }

      if (plainACLObject.publish) {
        this.publishers = this._ensureValidIdArray(plainACLObject.publish);
      }

      if (plainACLObject.groups) {
        if (plainACLObject.groups.publish) {
          this.publisherGroups = this._ensureValidIdArray(plainACLObject.groups.publish);
        }

        if (plainACLObject.groups.subscribe) {
          this.subscriberGroups = this._ensureValidIdArray(plainACLObject.groups.subscribe);
        }
      }
    }

    /**
     * Ensures that the specified array contains only nonempty strings
     * so that it can be assigned to a {@link StreamACL} property
     * @private
     * @param {string[]} arr An array to validate
     * @returns {string[]} The same array, if it is valid
     */

  }, {
    key: '_ensureValidIdArray',
    value: function _ensureValidIdArray(arr) {
      var isValid = this._isValidIdArray(arr);
      if (!isValid) {
        throw new _errors.KinveyError(invalidValueMsg);
      }
      return arr;
    }

    /**
     * @private
     * @param {string[]} arr
     * @returns {boolean}
     */

  }, {
    key: '_isValidIdArray',
    value: function _isValidIdArray(arr) {
      var _this = this;

      return (0, _isArray2.default)(arr) && (0, _every2.default)(arr, function (o) {
        var id = _this._getAsId(o);
        return (0, _utils.isNonemptyString)(id);
      });
    }

    /**
     * @private
     * @param {string[]} arr The appropriate array to add users to -
     *    subscribers (or groups of them) or publishers (or groups of them)
     * @param {(User|User[]|string|string[])} users
     */

  }, {
    key: '_addToAcl',
    value: function _addToAcl(arr, users) {
      var _this2 = this;

      var usersArr = (0, _isArray2.default)(users) ? users : [users];
      var isValid = this._isValidIdArray(usersArr);
      if (!isValid) {
        throw new _errors.KinveyError(invalidValueMsg);
      }

      usersArr.forEach(function (u) {
        var id = _this2._getAsId(u);
        arr.push(id);
      });
    }

    /**
     * @private
     * @param {string[]} arr The appropriate array to add users to -
     *    subscribers (or groups of them) or publishers (or groups of them)
     * @param {(User|User[]|string|string[])} users
     */

  }, {
    key: '_removeFromAcl',
    value: function _removeFromAcl(arr, users) {
      var _this3 = this;

      var usersArr = (0, _isArray2.default)(users) ? users : [users];

      usersArr.forEach(function (u) {
        var id = _this3._getAsId(u);
        var index = arr.indexOf(id);
        if (index >= 0) {
          arr.splice(index, 1);
        }
      });
    }

    /**
     * @private
     * @param {Object} object Object which contains an "_id" property or is itself an id
     * @returns {string} The value of the "_id" property of the object, or the object itself, if it doesn't have such a property
     */

  }, {
    key: '_getAsId',
    value: function _getAsId(o) {
      return o && o._id ? o._id : o;
    }
  }], [{
    key: 'isValidACLObject',
    value: function isValidACLObject(obj) {
      try {
        var acl = new StreamACL(obj);
        return acl.isNotEmpty();
      } catch (err) {
        return false;
      }
    }
  }]);

  return StreamACL;
}();

/***/ }),
/* 139 */
/*!*************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/datastore/sync.js ***!
  \*************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SyncManager = exports.SyncOperation = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _map = __webpack_require__(/*! lodash/map */ 84);

var _map2 = _interopRequireDefault(_map);

var _result = __webpack_require__(/*! lodash/result */ 125);

var _result2 = _interopRequireDefault(_result);

var _isArray = __webpack_require__(/*! lodash/isArray */ 4);

var _isArray2 = _interopRequireDefault(_isArray);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _request3 = __webpack_require__(/*! ../request */ 7);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _client = __webpack_require__(/*! ../client */ 10);

var _query = __webpack_require__(/*! ../query */ 12);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var pushInProgress = new Map();

/**
 * @private
 * Enum for Sync Operations.
 */
var SyncOperation = exports.SyncOperation = {
  Create: _request3.RequestMethod.POST,
  Update: _request3.RequestMethod.PUT,
  Delete: _request3.RequestMethod.DELETE
};
Object.freeze(SyncOperation);

/**
 * @private
 */

var SyncManager = exports.SyncManager = function () {
  function SyncManager(collection) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, SyncManager);

    if (!collection) {
      throw new _errors.SyncError('A collection is required.');
    }

    if (!(0, _isString2.default)(collection)) {
      throw new _errors.SyncError('Collection must be a string.');
    }

    /**
     * @type {string}
     */
    this.collection = collection;

    /**
     * @type {Client}
     */
    this.client = options.client || _client.Client.sharedInstance();
  }

  /**
   * Pathname used to send sync requests.
   *
   * @return {String} sync pathname
   */


  _createClass(SyncManager, [{
    key: 'find',
    value: function find(query) {
      var _this = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if ((0, _utils.isDefined)(query) && query instanceof _query.Query === false) {
        query = new _query.Query((0, _result2.default)(query, 'toJSON', query));
      }

      var request = new _request3.CacheRequest({
        method: _request3.RequestMethod.GET,
        url: _url2.default.format({
          protocol: this.client.apiProtocol,
          host: this.client.apiHost,
          pathname: this.backendPathname
        }),
        query: query,
        properties: options.properties,
        timeout: options.timeout,
        client: this.client
      });
      return request.execute().then(function (response) {
        return response.data;
      }).then(function (entities) {
        var syncQuery = new _query.Query();
        syncQuery.equalTo('collection', _this.collection);

        if ((0, _utils.isDefined)(query)) {
          syncQuery.contains('entityId', (0, _map2.default)(entities, function (entity) {
            return entity._id;
          }));
        }

        var request = new _request3.CacheRequest({
          method: _request3.RequestMethod.GET,
          url: _url2.default.format({
            protocol: _this.client.apiProtocol,
            host: _this.client.apiHost,
            pathname: _this.pathname
          }),
          properties: options.properties,
          query: syncQuery,
          timeout: options.timeout,
          client: _this.client
        });
        return request.execute().then(function (response) {
          return response.data;
        });
      });
    }

    /**
     * Count the number of entities that are waiting to be synced. A query can be
     * provided to only count a subset of entities.
     *
     * @param   {Query}         [query]                     Query
     * @param   {Object}        [options={}]                Options
     * @param   {Number}        [options.timeout]           Timeout for the request.
     * @return  {Promise}                                   Promise
     */

  }, {
    key: 'count',
    value: function count(query) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      return this.find(query, options).then(function (entities) {
        return entities.length;
      });
    }
  }, {
    key: 'addCreateOperation',
    value: function addCreateOperation(entities) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      return this.addOperation(SyncOperation.Create, entities, options);
    }
  }, {
    key: 'addUpdateOperation',
    value: function addUpdateOperation(entities) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      return this.addOperation(SyncOperation.Update, entities, options);
    }
  }, {
    key: 'addDeleteOperation',
    value: function addDeleteOperation(entities) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      return this.addOperation(SyncOperation.Delete, entities, options);
    }
  }, {
    key: 'addOperation',
    value: function addOperation() {
      var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SyncOperation.Create;

      var _this2 = this;

      var entities = arguments[1];
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var singular = false;

      // Cast the entities to an array
      if (!(0, _isArray2.default)(entities)) {
        singular = true;
        entities = [entities];
      }

      // Process the array of entities
      return _es6Promise2.default.all((0, _map2.default)(entities, function (entity) {
        // Just return null if nothing was provided
        // to be added to the sync table
        if (!entity) {
          return _es6Promise2.default.resolve(null);
        }

        // Validate that the entity has an id
        var id = entity._id;
        if (!id) {
          return _es6Promise2.default.reject(new _errors.SyncError('An entity is missing an _id. All entities must have an _id in order to be ' + 'added to the sync table.', entity));
        }

        // Find an existing sync operation for the entity
        var query = new _query.Query().equalTo('entityId', id);
        var findRequest = new _request3.CacheRequest({
          method: _request3.RequestMethod.GET,
          url: _url2.default.format({
            protocol: _this2.client.apiProtocol,
            host: _this2.client.apiHost,
            pathname: _this2.pathname
          }),
          properties: options.properties,
          query: query,
          timeout: options.timeout
        });
        return findRequest.execute().then(function (response) {
          return response.data;
        }).then(function (entities) {
          var syncEntity = entities.length === 1 ? entities[0] : { collection: _this2.collection, state: {}, entityId: id };

          // Update the state
          syncEntity.state = syncEntity.state || {};
          syncEntity.state.operation = operation;

          // Send a request to save the sync entity
          var request = new _request3.CacheRequest({
            method: _request3.RequestMethod.PUT,
            url: _url2.default.format({
              protocol: _this2.client.apiProtocol,
              host: _this2.client.apiHost,
              pathname: _this2.pathname
            }),
            properties: options.properties,
            body: syncEntity,
            timeout: options.timeout
          });
          return request.execute();
        });
      })).then(function () {
        if (singular === true) {
          return entities[0];
        }

        return entities;
      });
    }
  }, {
    key: 'pull',
    value: function pull(query) {
      var _this3 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      // Check that the query is valid
      if (query && !(query instanceof _query.Query)) {
        return _es6Promise2.default.reject(new _errors.SyncError('Invalid query. It must be an instance of the Query class.'));
      }

      return this.count(query).then(function (count) {
        // Attempt to push any pending sync data before fetching from the network.
        if (count > 0) {
          return _this3.push(query).then(function () {
            return _this3.count(query);
          });
        }

        return count;
      }).then(function (count) {
        // Throw an error if there are still items that need to be synced
        if (count > 0) {
          throw new _errors.SyncError('Unable to pull data from the network.' + (' There are ' + count + ' entities that need') + ' to be synced before data is loaded from the network.');
        }

        var config = {
          method: _request3.RequestMethod.GET,
          authType: _request3.AuthType.Default,
          url: _url2.default.format({
            protocol: _this3.client.apiProtocol,
            host: _this3.client.apiHost,
            pathname: _this3.backendPathname
          }),
          properties: options.properties,
          query: query,
          timeout: options.timeout,
          client: _this3.client
        };
        var request = new _request3.KinveyRequest(config);

        // Should we use delta fetch?
        if (options.useDeltaFetch === true) {
          request = new _request3.DeltaFetchRequest(config);
        }

        // Execute the request
        return request.execute();
      }).then(function (response) {
        return response.data;
      });
    }

    /*
     * Sync entities with the network. A query can be provided to
     * sync a subset of entities.
     *
     * @param   {Query}         [query]                     Query
     * @param   {Object}        [options={}]                Options
     * @param   {Number}        [options.timeout]           Timeout for the request.
     * @return  {Promise}                                   Promise
     */

  }, {
    key: 'push',
    value: function push(query) {
      var _this4 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var batchSize = 100;
      var i = 0;

      // Don't push data to the backend if we are in the middle
      // of already pushing data
      if (pushInProgress.get(this.collection) === true) {
        return _es6Promise2.default.reject(new _errors.SyncError('Data is already being pushed to the backend.' + ' Please wait for it to complete before pushing new data to the backend.'));
      }

      // Set pushInProgress to true
      pushInProgress.set(this.collection, true);

      return this.find(query).then(function (syncEntities) {
        if (syncEntities.length > 0) {
          // Sync the entities in batches to prevent exhausting
          // available network connections
          var batchSync = function batchSync(syncResults) {
            var promise = new _es6Promise2.default(function (resolve) {
              var batch = syncEntities.slice(i, i + batchSize);
              i += batchSize;

              // Get the results of syncing all of the entities
              return _es6Promise2.default.all((0, _map2.default)(batch, function (syncEntity) {
                var entityId = syncEntity.entityId,
                    _syncEntity$state = syncEntity.state,
                    state = _syncEntity$state === undefined ? {} : _syncEntity$state;

                var operation = state.operation || state.method;

                if (operation === SyncOperation.Delete) {
                  // Remove the entity from the network.
                  var request = new _request3.KinveyRequest({
                    method: _request3.RequestMethod.DELETE,
                    authType: _request3.AuthType.Default,
                    url: _url2.default.format({
                      protocol: _this4.client.apiProtocol,
                      host: _this4.client.apiHost,
                      pathname: _this4.backendPathname + '/' + entityId
                    }),
                    properties: options.properties,
                    timeout: options.timeout,
                    client: _this4.client
                  });
                  return request.execute().then(function () {
                    // Remove the sync entity from the cache
                    var request = new _request3.CacheRequest({
                      method: _request3.RequestMethod.DELETE,
                      url: _url2.default.format({
                        protocol: _this4.client.apiProtocol,
                        host: _this4.client.apiHost,
                        pathname: _this4.pathname + '/' + syncEntity._id
                      }),
                      properties: options.properties,
                      timeout: options.timeout
                    });
                    return request.execute();
                  }).then(function () {
                    // Return the result
                    var result = { _id: entityId, operation: operation };
                    return result;
                  }).catch(function (error) {
                    // Return the result of the sync operation.
                    var result = {
                      _id: entityId,
                      operation: operation,
                      error: error
                    };
                    return result;
                  });
                } else if (operation === SyncOperation.Create || operation === SyncOperation.Update) {
                  var local = false;

                  // Get the entity from cache
                  var _request = new _request3.CacheRequest({
                    method: _request3.RequestMethod.GET,
                    url: _url2.default.format({
                      protocol: _this4.client.apiProtocol,
                      host: _this4.client.apiHost,
                      pathname: _this4.backendPathname + '/' + entityId
                    }),
                    properties: options.properties,
                    timeout: options.timeout
                  });
                  return _request.execute().then(function (response) {
                    return response.data;
                  }).then(function (entity) {
                    // Save the entity to the backend.
                    var request = new _request3.KinveyRequest({
                      method: _request3.RequestMethod.PUT,
                      authType: _request3.AuthType.Default,
                      url: _url2.default.format({
                        protocol: _this4.client.apiProtocol,
                        host: _this4.client.apiHost,
                        pathname: _this4.backendPathname + '/' + entityId
                      }),
                      properties: options.properties,
                      timeout: options.timeout,
                      body: entity,
                      client: _this4.client
                    });

                    // Send a POST request, and update the url.
                    if (operation === SyncOperation.Create) {
                      // If the entity was created locally then delete the autogenerated _id
                      if ((0, _utils.isDefined)(entity._kmd) && entity._kmd.local === true) {
                        local = true;
                        delete entity._id;
                      }

                      request.method = _request3.RequestMethod.POST;
                      request.url = _url2.default.format({
                        protocol: _this4.client.apiProtocol,
                        host: _this4.client.apiHost,
                        pathname: _this4.backendPathname
                      });
                    }

                    return request.execute().then(function (response) {
                      return response.data;
                    }).then(function (entity) {
                      // Remove the sync entity
                      var request = new _request3.CacheRequest({
                        method: _request3.RequestMethod.DELETE,
                        url: _url2.default.format({
                          protocol: _this4.client.apiProtocol,
                          host: _this4.client.apiHost,
                          pathname: _this4.pathname + '/' + syncEntity._id
                        }),
                        properties: options.properties,
                        timeout: options.timeout
                      });
                      return request.execute().then(function () {
                        // Save the result of the network request locally.
                        var request = new _request3.CacheRequest({
                          method: _request3.RequestMethod.PUT,
                          url: _url2.default.format({
                            protocol: _this4.client.apiProtocol,
                            host: _this4.client.apiHost,
                            pathname: _this4.backendPathname + '/' + entity._id
                          }),
                          properties: options.properties,
                          timeout: options.timeout,
                          body: entity
                        });
                        return request.execute().then(function (response) {
                          return response.data;
                        });
                      }).then(function (entity) {
                        // Remove the original entity if it was created locally
                        if (local) {
                          var _request2 = new _request3.CacheRequest({
                            method: _request3.RequestMethod.DELETE,
                            url: _url2.default.format({
                              protocol: _this4.client.apiProtocol,
                              host: _this4.client.apiHost,
                              pathname: _this4.backendPathname + '/' + entityId
                            }),
                            properties: options.properties,
                            timeout: options.timeout
                          });

                          return _request2.execute().then(function () {
                            return entity;
                          });
                        }

                        return entity;
                      }).then(function (entity) {
                        // Return the result of the sync operation.
                        var result = {
                          _id: entityId,
                          operation: operation,
                          entity: entity
                        };
                        return result;
                      });
                    }).catch(function (error) {
                      // Set then id back on the entity
                      entity._id = entityId;

                      // Return the result of the sync operation.
                      var result = {
                        _id: entityId,
                        operation: operation,
                        entity: entity,
                        error: error
                      };
                      return result;
                    });
                  }).catch(function (error) {
                    var result = {
                      _id: entityId,
                      operation: operation,
                      entity: undefined,
                      error: error
                    };
                    return result;
                  });
                }

                return {
                  _id: entityId,
                  operation: operation,
                  entity: undefined,
                  error: new _errors.SyncError('Unable to sync the entity since the operation was not recognized.', syncEntity)
                };
              })).then(function (results) {
                // Concat the results
                syncResults = syncResults.concat(results);

                // Sync the remaining entities
                if (i < syncEntities.length) {
                  return resolve(batchSync(syncResults));
                }

                // Resolve with the sync results
                return resolve(syncResults);
              });
            });
            return promise;
          };

          // Return the result
          return batchSync([]);
        }

        // Return an empty array
        return [];
      }).then(function (result) {
        // Set pushInProgress to false
        pushInProgress.set(_this4.collection, false);
        return result;
      }).catch(function (error) {
        // Set pushInProgress to false
        pushInProgress.set(_this4.collection, false);
        throw error;
      });
    }

    /**
     * Clear the sync table. A query can be provided to
     * only clear a subset of the sync table.
     *
     * @param   {Query}         [query]                     Query
     * @param   {Object}        [options={}]                Options
     * @param   {Number}        [options.timeout]           Timeout for the request.
     * @return  {Promise}                                   Promise
     */

  }, {
    key: 'clear',
    value: function clear(query) {
      var _this5 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      return this.find(query, options).then(function (entities) {
        return _es6Promise2.default.all((0, _map2.default)(entities, function (entity) {
          var request = new _request3.CacheRequest({
            method: _request3.RequestMethod.DELETE,
            url: _url2.default.format({
              protocol: _this5.client.apiProtocol,
              host: _this5.client.apiHost,
              pathname: _this5.pathname + '/' + entity._id
            }),
            properties: options.properties,
            timeout: options.timeout
          });
          return request.execute().then(function (response) {
            return response.data;
          });
        }));
      });
    }
  }, {
    key: 'pathname',
    get: function get() {
      return '/appdata/' + this.client.appKey + '/kinvey_sync';
    }

    /**
     * Pathname used to send backend requests.
     *
     * @return {String} sync pathname
     */

  }, {
    key: 'backendPathname',
    get: function get() {
      return '/appdata/' + this.client.appKey + '/' + this.collection;
    }
  }]);

  return SyncManager;
}();

/***/ }),
/* 140 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/datastore/syncstore.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SyncStore = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _request = __webpack_require__(/*! ../request */ 7);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _query = __webpack_require__(/*! ../query */ 12);

var _aggregation = __webpack_require__(/*! ../aggregation */ 27);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _observable = __webpack_require__(/*! ../observable */ 36);

var _cachestore = __webpack_require__(/*! ./cachestore */ 83);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * The SyncStore class is used to find, create, update, remove, count and group entities. Entities are stored
 * in a cache and synced with the backend.
 */
var SyncStore = exports.SyncStore = function (_CacheStore) {
  _inherits(SyncStore, _CacheStore);

  function SyncStore() {
    _classCallCheck(this, SyncStore);

    return _possibleConstructorReturn(this, (SyncStore.__proto__ || Object.getPrototypeOf(SyncStore)).apply(this, arguments));
  }

  _createClass(SyncStore, [{
    key: 'find',


    /**
     * Find all entities in the data store. A query can be optionally provided to return
     * a subset of all entities in a collection or omitted to return all entities in
     * a collection. The number of entities returned adheres to the limits specified
     * at http://devcenter.kinvey.com/rest/guides/datastore#queryrestrictions.
     *
     * @param   {Query}                 [query]                             Query used to filter entities.
     * @param   {Object}                [options]                           Options
     * @param   {Properties}            [options.properties]                Custom properties to send with
     *                                                                      the request.
     * @param   {Number}                [options.timeout]                   Timeout for the request.
     * @param   {Boolean}               [options.useDeltaFetch]             Turn on or off the use of delta fetch.
     * @return  {Observable}                                                Observable.
     */
    value: function find(query) {
      var _this2 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        // Check that the query is valid
        if (query && !(query instanceof _query.Query)) {
          return observer.error(new _errors.KinveyError('Invalid query. It must be an instance of the Query class.'));
        }

        // Fetch the cache entities
        var request = new _request.CacheRequest({
          method: _request.RequestMethod.GET,
          url: _url2.default.format({
            protocol: _this2.client.apiProtocol,
            host: _this2.client.apiHost,
            pathname: _this2.pathname
          }),
          properties: options.properties,
          query: query,
          timeout: options.timeout
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (data) {
          return observer.next(data);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream;
    }

    /**
     * Find a single entity in the data store by id.
     *
     * @param   {string}                id                               Entity by id to find.
     * @param   {Object}                [options]                        Options
     * @param   {Properties}            [options.properties]             Custom properties to send with
     *                                                                   the request.
     * @param   {Number}                [options.timeout]                Timeout for the request.
     * @param   {Boolean}               [options.useDeltaFetch]          Turn on or off the use of delta fetch.
     * @return  {Observable}                                             Observable.
     */

  }, {
    key: 'findById',
    value: function findById(id) {
      var _this3 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        try {
          if ((0, _utils.isDefined)(id) === false) {
            observer.next(undefined);
            return observer.complete();
          }

          // Fetch from the cache
          var request = new _request.CacheRequest({
            method: _request.RequestMethod.GET,
            url: _url2.default.format({
              protocol: _this3.client.apiProtocol,
              host: _this3.client.apiHost,
              pathname: _this3.pathname + '/' + id
            }),
            properties: options.properties,
            timeout: options.timeout
          });

          return request.execute().then(function (response) {
            return response.data;
          }).then(function (data) {
            return observer.next(data);
          }).then(function () {
            return observer.complete();
          }).catch(function (error) {
            return observer.error(error);
          });
        } catch (error) {
          return observer.error(error);
        }
      });

      return stream;
    }

    /**
     * Group entities.
     *
     * @param   {Aggregation}           aggregation                         Aggregation used to group entities.
     * @param   {Object}                [options]                           Options
     * @param   {Properties}            [options.properties]                Custom properties to send with
     *                                                                      the request.
     * @param   {Number}                [options.timeout]                   Timeout for the request.
     * @return  {Observable}                                                Observable.
     */

  }, {
    key: 'group',
    value: function group(aggregation) {
      var _this4 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        // Check that the aggregation is valid
        if (!(aggregation instanceof _aggregation.Aggregation)) {
          return observer.error(new _errors.KinveyError('Invalid aggregation. It must be an instance of the Aggregation class.'));
        }

        // Fetch the cache entities
        var request = new _request.CacheRequest({
          method: _request.RequestMethod.POST,
          url: _url2.default.format({
            protocol: _this4.client.apiProtocol,
            host: _this4.client.apiHost,
            pathname: _this4.pathname + '/_group'
          }),
          properties: options.properties,
          aggregation: aggregation,
          timeout: options.timeout
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (result) {
          return observer.next(result);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });
      return stream;
    }

    /**
     * Count all entities in the data store. A query can be optionally provided to return
     * a subset of all entities in a collection or omitted to return all entities in
     * a collection. The number of entities returned adheres to the limits specified
     * at http://devcenter.kinvey.com/rest/guides/datastore#queryrestrictions.
     *
     * @param   {Query}                 [query]                          Query used to filter entities.
     * @param   {Object}                [options]                        Options
     * @param   {Properties}            [options.properties]             Custom properties to send with
     *                                                                   the request.
     * @param   {Number}                [options.timeout]                Timeout for the request.
     * @return  {Observable}                                             Observable.
     */

  }, {
    key: 'count',
    value: function count(query) {
      var _this5 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        try {
          if (query && !(query instanceof _query.Query)) {
            throw new _errors.KinveyError('Invalid query. It must be an instance of the Query class.');
          }

          // Fetch the entities in the cache
          var request = new _request.CacheRequest({
            method: _request.RequestMethod.GET,
            url: _url2.default.format({
              protocol: _this5.client.apiProtocol,
              host: _this5.client.apiHost,
              pathname: _this5.pathname
            }),
            properties: options.properties,
            query: query,
            timeout: options.timeout
          });

          return request.execute().then(function (response) {
            return response.data;
          }).then(function (data) {
            return observer.next(data ? data.length : 0);
          }).then(function () {
            return observer.complete();
          }).catch(function (error) {
            return observer.error(error);
          });
        } catch (error) {
          return observer.error(error);
        }
      });

      return stream;
    }
  }, {
    key: 'syncAutomatically',
    get: function get() {
      return false;
    }
  }]);

  return SyncStore;
}(_cachestore.CacheStore);

/***/ }),
/* 141 */
/*!**************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/acl.js ***!
  \**************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Acl = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _isPlainObject = __webpack_require__(/*! lodash/isPlainObject */ 32);

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _isArray = __webpack_require__(/*! lodash/isArray */ 4);

var _isArray2 = _interopRequireDefault(_isArray);

var _assign = __webpack_require__(/*! lodash/assign */ 17);

var _assign2 = _interopRequireDefault(_assign);

var _errors = __webpack_require__(/*! ./errors */ 1);

var _utils = __webpack_require__(/*! ./utils */ 2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * The Acl class is used as a wrapper for reading and setting permissions on an entity level.
 *
 * @example
 * var entity = { _acl: {} };
 * var acl = new Kinvey.Acl(entity);
 */
var Acl = exports.Acl = function () {
  function Acl(entity) {
    _classCallCheck(this, Acl);

    if ((0, _isPlainObject2.default)(entity) === false) {
      throw new _errors.KinveyError('entity argument must be an object');
    }

    /**
     * The entity.
     *
     * @private
     * @type {Object}
     */
    entity._acl = entity._acl || {};
    this.entity = entity;
  }

  _createClass(Acl, [{
    key: 'addReader',
    value: function addReader(user) {
      var r = this.readers;

      if (r.indexOf(user) === -1) {
        r.push(user);
      }

      this.entity._acl.r = r;
      return this;
    }
  }, {
    key: 'addReaderGroup',
    value: function addReaderGroup(group) {
      var groups = this.readerGroups;

      if (groups.indexOf(group) === -1) {
        groups.push(group);
      }

      this.entity._acl.groups = (0, _assign2.default)({}, this.entity._acl.groups, { r: groups });
      return this;
    }
  }, {
    key: 'addWriter',
    value: function addWriter(user) {
      var w = this.writers;

      if (w.indexOf(user) === -1) {
        w.push(user);
      }

      this.entity._acl.w = w;
      return this;
    }
  }, {
    key: 'addWriterGroup',
    value: function addWriterGroup(group) {
      var groups = this.writerGroups;

      if (groups.indexOf(group) === -1) {
        groups.push(group);
      }

      this.entity._acl.groups = (0, _assign2.default)({}, this.entity._acl.groups, { w: groups });
      return this;
    }
  }, {
    key: 'isGloballyReadable',
    value: function isGloballyReadable() {
      if (this.entity._acl.gr === true) {
        return this.entity._acl.gr;
      }

      return false;
    }
  }, {
    key: 'isGloballyWritable',
    value: function isGloballyWritable() {
      if (this.entity._acl.gw === true) {
        return this.entity._acl.gw;
      }

      return false;
    }
  }, {
    key: 'removeReader',
    value: function removeReader(user) {
      var r = this.readers;
      var index = r.indexOf(user);

      if (index !== -1) {
        r.splice(index, 1);
      }

      this.entity._acl.r = r;
      return this;
    }
  }, {
    key: 'removeReaderGroup',
    value: function removeReaderGroup(group) {
      var groups = this.readerGroups;
      var index = groups.indexOf(group);

      if (index !== -1) {
        groups.splice(index, 1);
      }

      this.entity._acl.groups = (0, _assign2.default)({}, this.entity._acl.groups, { r: groups });
      return this;
    }
  }, {
    key: 'removeWriter',
    value: function removeWriter(user) {
      var w = this.writers;
      var index = w.indexOf(user);

      if (index !== -1) {
        w.splice(index, 1);
      }

      this.entity._acl.w = w;
      return this;
    }
  }, {
    key: 'removeWriterGroup',
    value: function removeWriterGroup(group) {
      var groups = this.writerGroups;
      var index = groups.indexOf(group);

      if (index !== -1) {
        groups.splice(index, 1);
      }

      this.entity._acl.groups = (0, _assign2.default)({}, this.entity._acl.groups, { w: groups });
      return this;
    }
  }, {
    key: 'toPlainObject',
    value: function toPlainObject() {
      return this.entity._acl;
    }
  }, {
    key: 'creator',
    get: function get() {
      return this.entity._acl.creator;
    }
  }, {
    key: 'readers',
    get: function get() {
      return (0, _isArray2.default)(this.entity._acl.r) ? this.entity._acl.r : [];
    }
  }, {
    key: 'writers',
    get: function get() {
      return (0, _isArray2.default)(this.entity._acl.w) ? this.entity._acl.w : [];
    }
  }, {
    key: 'readerGroups',
    get: function get() {
      return (0, _utils.isDefined)(this.entity._acl.groups) && (0, _isArray2.default)(this.entity._acl.groups.r) ? this.entity._acl.groups.r : [];
    }
  }, {
    key: 'writerGroups',
    get: function get() {
      return (0, _utils.isDefined)(this.entity._acl.groups) && (0, _isArray2.default)(this.entity._acl.groups.w) ? this.entity._acl.groups.w : [];
    }
  }, {
    key: 'globallyReadable',
    set: function set(gr) {
      if (gr === true) {
        this.entity._acl.gr = gr;
      } else {
        this.entity._acl.gr = false;
      }
    }
  }, {
    key: 'globallyWritable',
    set: function set(gw) {
      if (gw === true) {
        this.entity._acl.gw = gw;
      } else {
        this.entity._acl.gw = false;
      }
    }
  }]);

  return Acl;
}();

/***/ }),
/* 142 */
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./bundle */ 91));
var Kinvey = __webpack_require__(/*! ./bundle */ 91);
exports.Kinvey = Kinvey;


/***/ }),
/* 143 */
/*!***********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/identity/mic.js ***!
  \***********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MobileIdentityConnect = exports.AuthorizationGrant = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _urlJoin = __webpack_require__(/*! url-join */ 153);

var _urlJoin2 = _interopRequireDefault(_urlJoin);

var _request = __webpack_require__(/*! ../request */ 7);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _popup = __webpack_require__(/*! ./popup */ 315);

var _identity = __webpack_require__(/*! ./identity */ 316);

var _enums = __webpack_require__(/*! ./enums */ 92);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Popup = _popup.Popup;

/**
 * Enum for Mobile Identity Connect authorization grants.
 * @property  {string}    AuthorizationCodeLoginPage   AuthorizationCodeLoginPage grant
 * @property  {string}    AuthorizationCodeAPI         AuthorizationCodeAPI grant
 */
var AuthorizationGrant = exports.AuthorizationGrant = {
  AuthorizationCodeLoginPage: 'AuthorizationCodeLoginPage',
  AuthorizationCodeAPI: 'AuthorizationCodeAPI'
};
Object.freeze(AuthorizationGrant);

var MobileIdentityConnect = exports.MobileIdentityConnect = function (_Identity) {
  _inherits(MobileIdentityConnect, _Identity);

  function MobileIdentityConnect() {
    _classCallCheck(this, MobileIdentityConnect);

    return _possibleConstructorReturn(this, (MobileIdentityConnect.__proto__ || Object.getPrototypeOf(MobileIdentityConnect)).apply(this, arguments));
  }

  _createClass(MobileIdentityConnect, [{
    key: 'isSupported',
    value: function isSupported() {
      return true;
    }
  }, {
    key: 'login',
    value: function login(redirectUri) {
      var _this2 = this;

      var authorizationGrant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AuthorizationGrant.AuthorizationCodeLoginPage;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var clientId = this.client.appKey;

      if ((0, _isString2.default)(options.micId)) {
        clientId = clientId + '.' + options.micId;
      }

      var promise = _es6Promise2.default.resolve().then(function () {
        if (authorizationGrant === AuthorizationGrant.AuthorizationCodeLoginPage) {
          // Step 1: Request a code
          return _this2.requestCodeWithPopup(clientId, redirectUri, options);
        } else if (authorizationGrant === AuthorizationGrant.AuthorizationCodeAPI) {
          // Step 1a: Request a temp login url
          return _this2.requestTempLoginUrl(clientId, redirectUri, options).then(function (url) {
            return _this2.requestCodeWithUrl(url, clientId, redirectUri, options);
          }); // Step 1b: Request a code
        }

        throw new _errors.KinveyError('The authorization grant ' + authorizationGrant + ' is unsupported. ' + 'Please use a supported authorization grant.');
      }).then(function (code) {
        return _this2.requestToken(code, clientId, redirectUri, options);
      }) // Step 3: Request a token
      .then(function (session) {
        session.identity = MobileIdentityConnect.identity;
        session.client_id = clientId;
        session.redirect_uri = redirectUri;
        session.protocol = _this2.client.micProtocol;
        session.host = _this2.client.micHost;
        return session;
      });

      return promise;
    }
  }, {
    key: 'refresh',
    value: function refresh(token, clientId, redirectUri) {
      var _this3 = this;

      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      return _es6Promise2.default.resolve().then(function () {
        return _this3.refreshToken(token, clientId, redirectUri, options);
      }).then(function (session) {
        session.identity = MobileIdentityConnect.identity;
        session.client_id = clientId;
        session.redirect_uri = redirectUri;
        session.protocol = _this3.client.micProtocol;
        session.host = _this3.client.micHost;
        return session;
      });
    }
  }, {
    key: 'requestTempLoginUrl',
    value: function requestTempLoginUrl(clientId, redirectUri) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var pathname = '/oauth/auth';

      if (options.version) {
        var version = options.version;

        if ((0, _isString2.default)(version) === false) {
          version = String(version);
        }

        pathname = (0, _urlJoin2.default)(version.indexOf('v') === 0 ? version : 'v' + version, pathname);
      }

      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        url: _url2.default.format({
          protocol: this.client.micProtocol,
          host: this.client.micHost,
          pathname: pathname
        }),
        properties: options.properties,
        body: {
          client_id: clientId,
          redirect_uri: redirectUri,
          response_type: 'code'
        }
      });
      return request.execute().then(function (response) {
        return response.data.temp_login_uri;
      });
    }
  }, {
    key: 'requestCodeWithPopup',
    value: function requestCodeWithPopup(clientId, redirectUri) {
      var _this4 = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var promise = _es6Promise2.default.resolve().then(function () {
        var pathname = '/oauth/auth';
        var popup = new Popup();

        if (options.version) {
          var version = options.version;

          if (!(0, _isString2.default)(version)) {
            version = String(version);
          }

          pathname = (0, _urlJoin2.default)(version.indexOf('v') === 0 ? version : 'v' + version, pathname);
        }

        return popup.open(_url2.default.format({
          protocol: _this4.client.micProtocol,
          host: _this4.client.micHost,
          pathname: pathname,
          query: {
            client_id: clientId,
            redirect_uri: redirectUri,
            response_type: 'code'
          }
        }));
      }).then(function (popup) {
        var promise = new _es6Promise2.default(function (resolve, reject) {
          var redirected = false;

          function loadCallback(event) {
            try {
              if (event.url && event.url.indexOf(redirectUri) === 0 && redirected === false) {
                redirected = true;
                popup.removeAllListeners();
                popup.close();
                resolve(_url2.default.parse(event.url, true).query.code);
              }
            } catch (error) {
              // Just catch the error
            }
          }

          function errorCallback(event) {
            try {
              if (event.url && event.url.indexOf(redirectUri) === 0 && redirected === false) {
                redirected = true;
                popup.removeAllListeners();
                popup.close();
                resolve(_url2.default.parse(event.url, true).query.code);
              } else if (redirected === false) {
                popup.removeAllListeners();
                popup.close();
                reject(new _errors.KinveyError(event.message, '', event.code));
              }
            } catch (error) {
              // Just catch the error
            }
          }

          function exitCallback() {
            if (redirected === false) {
              popup.removeAllListeners();
              reject(new _errors.KinveyError('Login has been cancelled.'));
            }
          }

          popup.on('loadstart', loadCallback);
          popup.on('loadstop', loadCallback);
          popup.on('error', errorCallback);
          popup.on('exit', exitCallback);
        });
        return promise;
      });

      return promise;
    }
  }, {
    key: 'requestCodeWithUrl',
    value: function requestCodeWithUrl(loginUrl, clientId, redirectUri) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      var promise = _es6Promise2.default.resolve().then(function () {
        var request = new _request.KinveyRequest({
          method: _request.RequestMethod.POST,
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
          },
          url: loginUrl,
          properties: options.properties,
          body: {
            client_id: clientId,
            redirect_uri: redirectUri,
            response_type: 'code',
            username: options.username,
            password: options.password
          },
          followRedirect: false
        });
        return request.execute();
      }).then(function (response) {
        var location = response.headers.get('location');

        if (location) {
          return _url2.default.parse(location, true).query.code;
        }

        throw new _errors.MobileIdentityConnectError('Unable to authorize user with username ' + options.username + '.', 'A location header was not provided with a code to exchange for an auth token.');
      });

      return promise;
    }
  }, {
    key: 'requestToken',
    value: function requestToken(code, clientId, redirectUri) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        authType: _request.AuthType.App,
        url: _url2.default.format({
          protocol: this.client.micProtocol,
          host: this.client.micHost,
          pathname: '/oauth/token'
        }),
        properties: options.properties,
        body: {
          grant_type: 'authorization_code',
          client_id: clientId,
          redirect_uri: redirectUri,
          code: code
        }
      });
      return request.execute().then(function (response) {
        return response.data;
      });
    }
  }, {
    key: 'refreshToken',
    value: function refreshToken(token, clientId, redirectUri) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        authType: _request.AuthType.App,
        url: _url2.default.format({
          protocol: this.client.micProtocol,
          host: this.client.micHost,
          pathname: '/oauth/token'
        }),
        body: {
          grant_type: 'refresh_token',
          client_id: clientId,
          redirect_uri: redirectUri,
          refresh_token: token
        },
        properties: options.properties,
        timeout: options.timeout
      });
      return request.execute().then(function (response) {
        return response.data;
      });
    }
  }, {
    key: 'logout',
    value: function logout(user) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.GET,
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        authType: _request.AuthType.App,
        url: _url2.default.format({
          protocol: this.client.micProtocol,
          host: this.client.micHost,
          pathname: '/oauth/invalidate',
          query: {
            user: user._id
          }
        }),
        properties: options.properties
      });
      return request.execute().then(function (response) {
        return response.data;
      });
    }

    /**
     * @private
     */

  }, {
    key: 'identity',
    get: function get() {
      return _enums.SocialIdentity.MobileIdentityConnect;
    }
  }], [{
    key: 'isSupported',
    value: function isSupported() {
      return true;
    }
  }, {
    key: 'usePopupClass',
    value: function usePopupClass(PopupClass) {
      if ((0, _utils.isDefined)(PopupClass)) {
        Popup = PopupClass;
      }
    }
  }, {
    key: 'identity',
    get: function get() {
      return _enums.SocialIdentity.MobileIdentityConnect;
    }
  }]);

  return MobileIdentityConnect;
}(_identity.Identity);

/***/ }),
/* 144 */
/*!*************************************************!*\
  !*** (webpack)/node_modules/process/browser.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 145 */
/*!***********************!*\
  !*** vertx (ignored) ***!
  \***********************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 146 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getRawTag.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 26);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),
/* 147 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_objectToString.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),
/* 148 */
/*!***************************************************!*\
  !*** (webpack)/node_modules/punycode/punycode.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
			return punycode;
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../buildin/module.js */ 37)(module), __webpack_require__(/*! ./../../buildin/global.js */ 23)))

/***/ }),
/* 149 */
/*!******************************************!*\
  !*** (webpack)/node_modules/url/util.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};


/***/ }),
/* 150 */
/*!*******************************************************!*\
  !*** (webpack)/node_modules/querystring-es3/index.js ***!
  \*******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(/*! ./decode */ 151);
exports.encode = exports.stringify = __webpack_require__(/*! ./encode */ 152);


/***/ }),
/* 151 */
/*!********************************************************!*\
  !*** (webpack)/node_modules/querystring-es3/decode.js ***!
  \********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),
/* 152 */
/*!********************************************************!*\
  !*** (webpack)/node_modules/querystring-es3/encode.js ***!
  \********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),
/* 153 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/url-join/lib/url-join.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (name, context, definition) {
  if (typeof module !== 'undefined' && module.exports) module.exports = definition();
  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else context[name] = definition();
})('urljoin', this, function () {

  function startsWith(str, searchString) {
    return str.substr(0, searchString.length) === searchString;
  }

  function normalize (str, options) {

    if (startsWith(str, 'file://')) {

      // make sure file protocol has max three slashes
      str = str.replace(/(\/{0,3})\/*/g, '$1');
    } else {

      // make sure protocol is followed by two slashes
      str = str.replace(/:\//g, '://');

      // remove consecutive slashes
      str = str.replace(/([^:\s\%\3\A])\/+/g, '$1/');
    }

    // remove trailing slash before parameters or hash
    str = str.replace(/\/(\?|&|#[^!])/g, '$1');

    // replace ? in parameters with &
    str = str.replace(/(\?.+)\?/g, '$1&');

    return str;
  }

  return function () {
    var input = arguments;
    var options = {};

    if (typeof arguments[0] === 'object') {
      // new syntax with array and options
      input = arguments[0];
      options = arguments[1] || {};
    }

    var joined = [].slice.call(input, 0).join('/');
    return normalize(joined, options);
  };

});


/***/ }),
/* 154 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseClone.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ 59),
    arrayEach = __webpack_require__(/*! ./_arrayEach */ 97),
    assignValue = __webpack_require__(/*! ./_assignValue */ 62),
    baseAssign = __webpack_require__(/*! ./_baseAssign */ 181),
    baseAssignIn = __webpack_require__(/*! ./_baseAssignIn */ 188),
    cloneBuffer = __webpack_require__(/*! ./_cloneBuffer */ 191),
    copyArray = __webpack_require__(/*! ./_copyArray */ 192),
    copySymbols = __webpack_require__(/*! ./_copySymbols */ 193),
    copySymbolsIn = __webpack_require__(/*! ./_copySymbolsIn */ 195),
    getAllKeys = __webpack_require__(/*! ./_getAllKeys */ 105),
    getAllKeysIn = __webpack_require__(/*! ./_getAllKeysIn */ 196),
    getTag = __webpack_require__(/*! ./_getTag */ 69),
    initCloneArray = __webpack_require__(/*! ./_initCloneArray */ 201),
    initCloneByTag = __webpack_require__(/*! ./_initCloneByTag */ 202),
    initCloneObject = __webpack_require__(/*! ./_initCloneObject */ 211),
    isArray = __webpack_require__(/*! ./isArray */ 4),
    isBuffer = __webpack_require__(/*! ./isBuffer */ 43),
    isObject = __webpack_require__(/*! ./isObject */ 14),
    keys = __webpack_require__(/*! ./keys */ 20);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, baseClone, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),
/* 155 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_listCacheClear.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),
/* 156 */
/*!**************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_listCacheDelete.js ***!
  \**************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ 39);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),
/* 157 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_listCacheGet.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ 39);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),
/* 158 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_listCacheHas.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ 39);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),
/* 159 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_listCacheSet.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ 39);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),
/* 160 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_stackClear.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ 38);

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),
/* 161 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_stackDelete.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),
/* 162 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_stackGet.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),
/* 163 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_stackHas.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),
/* 164 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_stackSet.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ 38),
    Map = __webpack_require__(/*! ./_Map */ 60),
    MapCache = __webpack_require__(/*! ./_MapCache */ 61);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),
/* 165 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseIsNative.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ 19),
    isMasked = __webpack_require__(/*! ./_isMasked */ 166),
    isObject = __webpack_require__(/*! ./isObject */ 14),
    toSource = __webpack_require__(/*! ./_toSource */ 96);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),
/* 166 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_isMasked.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(/*! ./_coreJsData */ 167);

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),
/* 167 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_coreJsData.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ 13);

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),
/* 168 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getValue.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),
/* 169 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_mapCacheClear.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(/*! ./_Hash */ 170),
    ListCache = __webpack_require__(/*! ./_ListCache */ 38),
    Map = __webpack_require__(/*! ./_Map */ 60);

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),
/* 170 */
/*!***************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_Hash.js ***!
  \***************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(/*! ./_hashClear */ 171),
    hashDelete = __webpack_require__(/*! ./_hashDelete */ 172),
    hashGet = __webpack_require__(/*! ./_hashGet */ 173),
    hashHas = __webpack_require__(/*! ./_hashHas */ 174),
    hashSet = __webpack_require__(/*! ./_hashSet */ 175);

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),
/* 171 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_hashClear.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ 40);

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),
/* 172 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_hashDelete.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),
/* 173 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_hashGet.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ 40);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),
/* 174 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_hashHas.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ 40);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),
/* 175 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_hashSet.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ 40);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),
/* 176 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_mapCacheDelete.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ 41);

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),
/* 177 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_isKeyable.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),
/* 178 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_mapCacheGet.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ 41);

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),
/* 179 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_mapCacheHas.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ 41);

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),
/* 180 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_mapCacheSet.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ 41);

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),
/* 181 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseAssign.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ 25),
    keys = __webpack_require__(/*! ./keys */ 20);

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),
/* 182 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseTimes.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),
/* 183 */
/*!**************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseIsArguments.js ***!
  \**************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 18),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 15);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),
/* 184 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/stubFalse.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),
/* 185 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseIsTypedArray.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 18),
    isLength = __webpack_require__(/*! ./isLength */ 65),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 15);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),
/* 186 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_nodeUtil.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ 93);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../../../../../.nvm/versions/node/v8.6.0/lib/node_modules/webpack/buildin/module.js */ 37)(module)))

/***/ }),
/* 187 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_nativeKeys.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ 102);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),
/* 188 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseAssignIn.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ 25),
    keysIn = __webpack_require__(/*! ./keysIn */ 45);

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),
/* 189 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseKeysIn.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ 14),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ 31),
    nativeKeysIn = __webpack_require__(/*! ./_nativeKeysIn */ 190);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),
/* 190 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_nativeKeysIn.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),
/* 191 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_cloneBuffer.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ 13);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../../../../../.nvm/versions/node/v8.6.0/lib/node_modules/webpack/buildin/module.js */ 37)(module)))

/***/ }),
/* 192 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_copyArray.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),
/* 193 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_copySymbols.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ 25),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ 66);

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),
/* 194 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arrayFilter.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),
/* 195 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_copySymbolsIn.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ 25),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ 104);

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),
/* 196 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getAllKeysIn.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ 106),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ 104),
    keysIn = __webpack_require__(/*! ./keysIn */ 45);

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),
/* 197 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_DataView.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 24),
    root = __webpack_require__(/*! ./_root */ 13);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),
/* 198 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_Promise.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 24),
    root = __webpack_require__(/*! ./_root */ 13);

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),
/* 199 */
/*!**************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_Set.js ***!
  \**************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 24),
    root = __webpack_require__(/*! ./_root */ 13);

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),
/* 200 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_WeakMap.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ 24),
    root = __webpack_require__(/*! ./_root */ 13);

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),
/* 201 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_initCloneArray.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),
/* 202 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_initCloneByTag.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ 70),
    cloneDataView = __webpack_require__(/*! ./_cloneDataView */ 203),
    cloneMap = __webpack_require__(/*! ./_cloneMap */ 204),
    cloneRegExp = __webpack_require__(/*! ./_cloneRegExp */ 206),
    cloneSet = __webpack_require__(/*! ./_cloneSet */ 207),
    cloneSymbol = __webpack_require__(/*! ./_cloneSymbol */ 209),
    cloneTypedArray = __webpack_require__(/*! ./_cloneTypedArray */ 210);

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, cloneFunc, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return cloneMap(object, isDeep, cloneFunc);

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return cloneSet(object, isDeep, cloneFunc);

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),
/* 203 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_cloneDataView.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ 70);

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),
/* 204 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_cloneMap.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var addMapEntry = __webpack_require__(/*! ./_addMapEntry */ 205),
    arrayReduce = __webpack_require__(/*! ./_arrayReduce */ 71),
    mapToArray = __webpack_require__(/*! ./_mapToArray */ 108);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a clone of `map`.
 *
 * @private
 * @param {Object} map The map to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned map.
 */
function cloneMap(map, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
  return arrayReduce(array, addMapEntry, new map.constructor);
}

module.exports = cloneMap;


/***/ }),
/* 205 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_addMapEntry.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Adds the key-value `pair` to `map`.
 *
 * @private
 * @param {Object} map The map to modify.
 * @param {Array} pair The key-value pair to add.
 * @returns {Object} Returns `map`.
 */
function addMapEntry(map, pair) {
  // Don't return `map.set` because it's not chainable in IE 11.
  map.set(pair[0], pair[1]);
  return map;
}

module.exports = addMapEntry;


/***/ }),
/* 206 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_cloneRegExp.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),
/* 207 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_cloneSet.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var addSetEntry = __webpack_require__(/*! ./_addSetEntry */ 208),
    arrayReduce = __webpack_require__(/*! ./_arrayReduce */ 71),
    setToArray = __webpack_require__(/*! ./_setToArray */ 109);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a clone of `set`.
 *
 * @private
 * @param {Object} set The set to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned set.
 */
function cloneSet(set, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
  return arrayReduce(array, addSetEntry, new set.constructor);
}

module.exports = cloneSet;


/***/ }),
/* 208 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_addSetEntry.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Adds `value` to `set`.
 *
 * @private
 * @param {Object} set The set to modify.
 * @param {*} value The value to add.
 * @returns {Object} Returns `set`.
 */
function addSetEntry(set, value) {
  // Don't return `set.add` because it's not chainable in IE 11.
  set.add(value);
  return set;
}

module.exports = addSetEntry;


/***/ }),
/* 209 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_cloneSymbol.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 26);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),
/* 210 */
/*!**************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_cloneTypedArray.js ***!
  \**************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ 70);

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),
/* 211 */
/*!**************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_initCloneObject.js ***!
  \**************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(/*! ./_baseCreate */ 212),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ 68),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ 31);

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),
/* 212 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseCreate.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ 14);

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),
/* 213 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/activeUser.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActiveUserError = ActiveUserError;

var _base = __webpack_require__(/*! ./base */ 0);

function ActiveUserError(message, debug, code, kinveyRequestId) {
  this.name = 'ActiveUserError';
  this.message = message || 'An active user already exists.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
ActiveUserError.prototype = Object.create(_base.BaseError.prototype);
ActiveUserError.prototype.constructor = ActiveUserError;

/***/ }),
/* 214 */
/*!****************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/apiVersionNotAvailable.js ***!
  \****************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.APIVersionNotAvailableError = APIVersionNotAvailableError;

var _base = __webpack_require__(/*! ./base */ 0);

function APIVersionNotAvailableError(message, debug, code, kinveyRequestId) {
  this.name = 'APIVersionNotAvailableError';
  this.message = message || 'This API version is not available for your app.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
APIVersionNotAvailableError.prototype = Object.create(_base.BaseError.prototype);
APIVersionNotAvailableError.prototype.constructor = APIVersionNotAvailableError;

/***/ }),
/* 215 */
/*!******************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/apiVersionNotImplemented.js ***!
  \******************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.APIVersionNotImplementedError = APIVersionNotImplementedError;

var _base = __webpack_require__(/*! ./base */ 0);

function APIVersionNotImplementedError(message, debug, code, kinveyRequestId) {
  this.name = 'APIVersionNotImplementedError';
  this.message = message || 'This API version is not implemented.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
APIVersionNotImplementedError.prototype = Object.create(_base.BaseError.prototype);
APIVersionNotImplementedError.prototype.constructor = APIVersionNotImplementedError;

/***/ }),
/* 216 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/appProblem.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AppProblemError = AppProblemError;

var _base = __webpack_require__(/*! ./base */ 0);

function AppProblemError(message, debug, code, kinveyRequestId) {
  this.name = 'AppProblemError';
  this.message = message || 'There is a problem with this app backend that prevents execution of this operation. Please contact support@kinvey.com for assistance.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
AppProblemError.prototype = Object.create(_base.BaseError.prototype);
AppProblemError.prototype.constructor = AppProblemError;

/***/ }),
/* 217 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/badRequest.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BadRequestError = BadRequestError;

var _base = __webpack_require__(/*! ./base */ 0);

function BadRequestError(message, debug, code, kinveyRequestId) {
  this.name = 'BadRequestError';
  this.message = message || 'Unable to understand request.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
BadRequestError.prototype = Object.create(_base.BaseError.prototype);
BadRequestError.prototype.constructor = BadRequestError;

/***/ }),
/* 218 */
/*!********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/bl.js ***!
  \********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BLError = BLError;

var _base = __webpack_require__(/*! ./base */ 0);

function BLError(message, debug, code, kinveyRequestId) {
  this.name = 'BLError';
  this.message = message || 'The Business Logic script did not complete.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
BLError.prototype = Object.create(_base.BaseError.prototype);
BLError.prototype.constructor = BLError;

/***/ }),
/* 219 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/corsDisabled.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CORSDisabledError = CORSDisabledError;

var _base = __webpack_require__(/*! ./base */ 0);

function CORSDisabledError(message, debug, code, kinveyRequestId) {
  this.name = 'CORSDisabledError';
  this.message = message || 'Cross Origin Support is disabled for this application.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
CORSDisabledError.prototype = Object.create(_base.BaseError.prototype);
CORSDisabledError.prototype.constructor = CORSDisabledError;

/***/ }),
/* 220 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/duplicateEndUsers.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DuplicateEndUsersError = DuplicateEndUsersError;

var _base = __webpack_require__(/*! ./base */ 0);

function DuplicateEndUsersError(message, debug, code, kinveyRequestId) {
  this.name = 'DuplicateEndUsersError';
  this.message = message || 'More than one user registered with this username for this application.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
DuplicateEndUsersError.prototype = Object.create(_base.BaseError.prototype);
DuplicateEndUsersError.prototype.constructor = DuplicateEndUsersError;

/***/ }),
/* 221 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/featureUnavailable.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FeatureUnavailableError = FeatureUnavailableError;

var _base = __webpack_require__(/*! ./base */ 0);

function FeatureUnavailableError(message, debug, code, kinveyRequestId) {
  this.name = 'FeatureUnavailableError';
  this.message = message || 'Requested functionality is unavailable in this API version.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
FeatureUnavailableError.prototype = Object.create(_base.BaseError.prototype);
FeatureUnavailableError.prototype.constructor = FeatureUnavailableError;

/***/ }),
/* 222 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/incompleteRequestBody.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IncompleteRequestBodyError = IncompleteRequestBodyError;

var _base = __webpack_require__(/*! ./base */ 0);

function IncompleteRequestBodyError(message, debug, code, kinveyRequestId) {
  this.name = 'IncompleteRequestBodyError';
  this.message = message || 'The request body is either missing or incomplete.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
IncompleteRequestBodyError.prototype = Object.create(_base.BaseError.prototype);
IncompleteRequestBodyError.prototype.constructor = IncompleteRequestBodyError;

/***/ }),
/* 223 */
/*!****************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/indirectCollectionAccessDisallowed.js ***!
  \****************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IndirectCollectionAccessDisallowedError = IndirectCollectionAccessDisallowedError;

var _base = __webpack_require__(/*! ./base */ 0);

function IndirectCollectionAccessDisallowedError(message, debug, code, kinveyRequestId) {
  this.name = 'IndirectCollectionAccessDisallowedError';
  this.message = message || 'Please use the appropriate API to access this collection for this app backend.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
IndirectCollectionAccessDisallowedError.prototype = Object.create(_base.BaseError.prototype);
IndirectCollectionAccessDisallowedError.prototype.constructor = IndirectCollectionAccessDisallowedError;

/***/ }),
/* 224 */
/*!*****************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/insufficientCredentials.js ***!
  \*****************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InsufficientCredentialsError = InsufficientCredentialsError;

var _base = __webpack_require__(/*! ./base */ 0);

function InsufficientCredentialsError(message, debug, code, kinveyRequestId) {
  this.name = 'InsufficientCredentialsError';
  this.message = message || 'The credentials used to authenticate this request are not authorized to run this operation. Please retry your request with appropriate credentials.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
InsufficientCredentialsError.prototype = Object.create(_base.BaseError.prototype);
InsufficientCredentialsError.prototype.constructor = InsufficientCredentialsError;

/***/ }),
/* 225 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/invalidCredentials.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InvalidCredentialsError = InvalidCredentialsError;

var _base = __webpack_require__(/*! ./base */ 0);

function InvalidCredentialsError(message, debug, code, kinveyRequestId) {
  this.name = 'InvalidCredentialsError';
  this.message = message || 'Invalid credentials. Please retry your request with correct credentials.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
InvalidCredentialsError.prototype = Object.create(_base.BaseError.prototype);
InvalidCredentialsError.prototype.constructor = InvalidCredentialsError;

/***/ }),
/* 226 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/invalidIdentifier.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InvalidIdentifierError = InvalidIdentifierError;

var _base = __webpack_require__(/*! ./base */ 0);

function InvalidIdentifierError(message, debug, code, kinveyRequestId) {
  this.name = 'InvalidIdentifierError';
  this.message = message || 'One of more identifier names in the request has an invalid format.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
InvalidIdentifierError.prototype = Object.create(_base.BaseError.prototype);
InvalidIdentifierError.prototype.constructor = InvalidIdentifierError;

/***/ }),
/* 227 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/invalidQuerySyntax.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InvalidQuerySyntaxError = InvalidQuerySyntaxError;

var _base = __webpack_require__(/*! ./base */ 0);

function InvalidQuerySyntaxError(message, debug, code, kinveyRequestId) {
  this.name = 'InvalidQuerySyntaxError';
  this.message = message || 'The query string in the request has an invalid syntax.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
InvalidQuerySyntaxError.prototype = Object.create(_base.BaseError.prototype);
InvalidQuerySyntaxError.prototype.constructor = InvalidQuerySyntaxError;

/***/ }),
/* 228 */
/*!***************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/jsonParse.js ***!
  \***************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.JSONParseError = JSONParseError;

var _base = __webpack_require__(/*! ./base */ 0);

function JSONParseError(message, debug, code, kinveyRequestId) {
  this.name = 'JSONParseError';
  this.message = message || 'Unable to parse the JSON in the request.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
JSONParseError.prototype = Object.create(_base.BaseError.prototype);
JSONParseError.prototype.constructor = JSONParseError;

/***/ }),
/* 229 */
/*!******************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/kinveyInternalErrorRetry.js ***!
  \******************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KinveyInternalErrorRetry = KinveyInternalErrorRetry;

var _base = __webpack_require__(/*! ./base */ 0);

function KinveyInternalErrorRetry(message, debug, code, kinveyRequestId) {
  this.name = 'KinveyInternalErrorRetry';
  this.message = message || 'The Kinvey server encountered an unexpected error. Please retry your request.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
KinveyInternalErrorRetry.prototype = Object.create(_base.BaseError.prototype);
KinveyInternalErrorRetry.prototype.constructor = KinveyInternalErrorRetry;

/***/ }),
/* 230 */
/*!*****************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/kinveyInternalErrorStop.js ***!
  \*****************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KinveyInternalErrorStop = KinveyInternalErrorStop;

var _base = __webpack_require__(/*! ./base */ 0);

function KinveyInternalErrorStop(message, debug, code, kinveyRequestId) {
  this.name = 'KinveyInternalErrorStop';
  this.message = message || 'The Kinvey server encountered an unexpected error. Please contact support@kinvey.com for assistance.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
KinveyInternalErrorStop.prototype = Object.create(_base.BaseError.prototype);
KinveyInternalErrorStop.prototype.constructor = KinveyInternalErrorStop;

/***/ }),
/* 231 */
/*!************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/kinvey.js ***!
  \************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KinveyError = KinveyError;

var _base = __webpack_require__(/*! ./base */ 0);

function KinveyError(message, debug, code, kinveyRequestId) {
  this.name = 'KinveyError';
  this.message = message || 'An error occurred.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
KinveyError.prototype = Object.create(_base.BaseError.prototype);
KinveyError.prototype.constructor = KinveyError;

/***/ }),
/* 232 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/missingQuery.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MissingQueryError = MissingQueryError;

var _base = __webpack_require__(/*! ./base */ 0);

function MissingQueryError(message, debug, code, kinveyRequestId) {
  this.name = 'MissingQueryError';
  this.message = message || 'The request is missing a query string.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
MissingQueryError.prototype = Object.create(_base.BaseError.prototype);
MissingQueryError.prototype.constructor = MissingQueryError;

/***/ }),
/* 233 */
/*!**************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/missingRequestHeader.js ***!
  \**************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MissingRequestHeaderError = MissingRequestHeaderError;

var _base = __webpack_require__(/*! ./base */ 0);

function MissingRequestHeaderError(message, debug, code, kinveyRequestId) {
  this.name = 'MissingRequestHeaderError';
  this.message = message || 'The request is missing a required header.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
MissingRequestHeaderError.prototype = Object.create(_base.BaseError.prototype);
MissingRequestHeaderError.prototype.constructor = MissingRequestHeaderError;

/***/ }),
/* 234 */
/*!*****************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/missingRequestParameter.js ***!
  \*****************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MissingRequestParameterError = MissingRequestParameterError;

var _base = __webpack_require__(/*! ./base */ 0);

function MissingRequestParameterError(message, debug, code, kinveyRequestId) {
  this.name = 'MissingRequestParameterError';
  this.message = message || 'A required parameter is missing from the request.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
MissingRequestParameterError.prototype = Object.create(_base.BaseError.prototype);
MissingRequestParameterError.prototype.constructor = MissingRequestParameterError;

/***/ }),
/* 235 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/mobileIdentityConnect.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MobileIdentityConnectError = MobileIdentityConnectError;

var _base = __webpack_require__(/*! ./base */ 0);

function MobileIdentityConnectError(message, debug, code, kinveyRequestId) {
  this.name = 'MobileIdentityConnectError';
  this.message = message || 'An error has occurred with Mobile Identity Connect.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
MobileIdentityConnectError.prototype = Object.create(_base.BaseError.prototype);
MobileIdentityConnectError.prototype.constructor = MobileIdentityConnectError;

/***/ }),
/* 236 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/networkConnection.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NetworkConnectionError = NetworkConnectionError;

var _base = __webpack_require__(/*! ./base */ 0);

function NetworkConnectionError(message, debug, code, kinveyRequestId) {
  this.name = 'NetworkConnectionError';
  this.message = message || 'There was an error connecting to the network.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
NetworkConnectionError.prototype = Object.create(_base.BaseError.prototype);
NetworkConnectionError.prototype.constructor = NetworkConnectionError;

/***/ }),
/* 237 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/noActiveUser.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NoActiveUserError = NoActiveUserError;

var _base = __webpack_require__(/*! ./base */ 0);

function NoActiveUserError(message, debug, code, kinveyRequestId) {
  this.name = 'NoActiveUserError';
  this.message = message || 'There is not an active user.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
NoActiveUserError.prototype = Object.create(_base.BaseError.prototype);
NoActiveUserError.prototype.constructor = NoActiveUserError;

/***/ }),
/* 238 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/noResponse.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NoResponseError = NoResponseError;

var _base = __webpack_require__(/*! ./base */ 0);

function NoResponseError(message, debug, code, kinveyRequestId) {
  this.name = 'NoResponseError';
  this.message = message || 'No response was provided.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
NoResponseError.prototype = Object.create(_base.BaseError.prototype);
NoResponseError.prototype.constructor = NoResponseError;

/***/ }),
/* 239 */
/*!**************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/notFound.js ***!
  \**************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotFoundError = NotFoundError;

var _base = __webpack_require__(/*! ./base */ 0);

function NotFoundError(message, debug, code, kinveyRequestId) {
  this.name = 'NotFoundError';
  this.message = message || 'The entity was not found.';
  this.debug = debug || undefined;
  this.code = code || 404;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
NotFoundError.prototype = Object.create(_base.BaseError.prototype);
NotFoundError.prototype.constructor = NotFoundError;

/***/ }),
/* 240 */
/*!******************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/parameterValueOutOfRange.js ***!
  \******************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ParameterValueOutOfRangeError = ParameterValueOutOfRangeError;

var _base = __webpack_require__(/*! ./base */ 0);

function ParameterValueOutOfRangeError(message, debug, code, kinveyRequestId) {
  this.name = 'ParameterValueOutOfRangeError';
  this.message = message || 'The value specified for one of the request parameters is out of range.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
ParameterValueOutOfRangeError.prototype = Object.create(_base.BaseError.prototype);
ParameterValueOutOfRangeError.prototype.constructor = ParameterValueOutOfRangeError;

/***/ }),
/* 241 */
/*!***********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/popup.js ***!
  \***********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PopupError = PopupError;

var _base = __webpack_require__(/*! ./base */ 0);

function PopupError(message, debug, code, kinveyRequestId) {
  this.name = 'PopupError';
  this.message = message || 'Unable to open a popup on this platform.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
PopupError.prototype = Object.create(_base.BaseError.prototype);
PopupError.prototype.constructor = PopupError;

/***/ }),
/* 242 */
/*!***********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/query.js ***!
  \***********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryError = QueryError;

var _base = __webpack_require__(/*! ./base */ 0);

function QueryError(message, debug, code, kinveyRequestId) {
  this.name = 'QueryError';
  this.message = message || 'An error occurred with the query.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
QueryError.prototype = Object.create(_base.BaseError.prototype);
QueryError.prototype.constructor = QueryError;

/***/ }),
/* 243 */
/*!************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/server.js ***!
  \************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ServerError = ServerError;

var _base = __webpack_require__(/*! ./base */ 0);

function ServerError(message, debug, code, kinveyRequestId) {
  this.name = 'ServerError';
  this.message = message || 'An error occurred on the server.';
  this.debug = debug || undefined;
  this.code = code || 500;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
ServerError.prototype = Object.create(_base.BaseError.prototype);
ServerError.prototype.constructor = ServerError;

/***/ }),
/* 244 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/staleRequest.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StaleRequestError = StaleRequestError;

var _base = __webpack_require__(/*! ./base */ 0);

function StaleRequestError(message, debug, code, kinveyRequestId) {
  this.name = 'StaleRequestError';
  this.message = message || 'The time window for this request has expired.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
StaleRequestError.prototype = Object.create(_base.BaseError.prototype);
StaleRequestError.prototype.constructor = StaleRequestError;

/***/ }),
/* 245 */
/*!**********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/sync.js ***!
  \**********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SyncError = SyncError;

var _base = __webpack_require__(/*! ./base */ 0);

function SyncError(message, debug, code, kinveyRequestId) {
  this.name = 'SyncError';
  this.message = message || 'An error occurred during sync.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
SyncError.prototype = Object.create(_base.BaseError.prototype);
SyncError.prototype.constructor = SyncError;

/***/ }),
/* 246 */
/*!*************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/timeout.js ***!
  \*************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TimeoutError = TimeoutError;

var _base = __webpack_require__(/*! ./base */ 0);

function TimeoutError(message, debug, code, kinveyRequestId) {
  this.name = 'TimeoutError';
  this.message = message || 'The request timed out.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
TimeoutError.prototype = Object.create(_base.BaseError.prototype);
TimeoutError.prototype.constructor = TimeoutError;

/***/ }),
/* 247 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/userAlreadyExists.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserAlreadyExistsError = UserAlreadyExistsError;

var _base = __webpack_require__(/*! ./base */ 0);

function UserAlreadyExistsError(message, debug, code, kinveyRequestId) {
  this.name = 'UserAlreadyExistsError';
  this.message = message || 'This username is already taken. Please retry your request with a different username.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
UserAlreadyExistsError.prototype = Object.create(_base.BaseError.prototype);
UserAlreadyExistsError.prototype.constructor = UserAlreadyExistsError;

/***/ }),
/* 248 */
/*!**********************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/errors/writesToCollectionDisallowed.js ***!
  \**********************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WritesToCollectionDisallowedError = WritesToCollectionDisallowedError;

var _base = __webpack_require__(/*! ./base */ 0);

function WritesToCollectionDisallowedError(message, debug, code, kinveyRequestId) {
  this.name = 'WritesToCollectionDisallowedError';
  this.message = message || 'This collection is configured to disallow any modifications to an existing entity or creation of new entities.';
  this.debug = debug || undefined;
  this.code = code || undefined;
  this.kinveyRequestId = kinveyRequestId || undefined;
  this.stack = new Error().stack;
}
WritesToCollectionDisallowedError.prototype = Object.create(_base.BaseError.prototype);
WritesToCollectionDisallowedError.prototype.constructor = WritesToCollectionDisallowedError;

/***/ }),
/* 249 */
/*!************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/sift/sift.js ***!
  \************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/*
 * Sift 3.x
 *
 * Copryright 2015, Craig Condon
 * Licensed under MIT
 *
 * Filter JavaScript objects with mongodb queries
 */

(function() {

  'use strict';

  /**
   */

  function isFunction(value) {
    return typeof value === 'function';
  }

  /**
   */

  function isArray(value) {
    return Object.prototype.toString.call(value) === '[object Array]';
  }

  /**
   */

  function comparable(value) {
    if (value instanceof Date) {
      return value.getTime();
    } else if (isArray(value)) {
      return value.map(comparable);
    } else if (value && typeof value.toJSON === 'function') {
      return value.toJSON();
    } else {
      return value;
    }
  }

  function get(obj, key) {
    return isFunction(obj.get) ? obj.get(key) : obj[key];
  }

  /**
   */

  function or(validator) {
    return function(a, b) {
      if (!isArray(b) || !b.length) {
        return validator(a, b);
      }
      for (var i = 0, n = b.length; i < n; i++) {
        if (validator(a, get(b,i))) return true;
      }
      return false;
    }
  }

  /**
   */

  function and(validator) {
    return function(a, b) {
      if (!isArray(b) || !b.length) {
        return validator(a, b);
      }
      for (var i = 0, n = b.length; i < n; i++) {
        if (!validator(a, get(b, i))) return false;
      }
      return true;
    };
  }

  function validate(validator, b, k, o) {
    return validator.v(validator.a, b, k, o);
  }

  var OPERATORS = {

    /**
     */

    $eq: or(function(a, b) {
      return a(b);
    }),

    /**
     */

    $ne: and(function(a, b) {
      return !a(b);
    }),

    /**
     */

    $gt: or(function(a, b) {
      return sift.compare(comparable(b), a) > 0;
    }),

    /**
     */

    $gte: or(function(a, b) {
      return sift.compare(comparable(b), a) >= 0;
    }),

    /**
     */

    $lt: or(function(a, b) {
      return sift.compare(comparable(b), a) < 0;
    }),

    /**
     */

    $lte: or(function(a, b) {
      return sift.compare(comparable(b), a) <= 0;
    }),

    /**
     */

    $mod: or(function(a, b) {
      return b % a[0] == a[1];
    }),

    /**
     */

    $in: function(a, b) {

      if (b instanceof Array) {
        for (var i = b.length; i--;) {
          if (~a.indexOf(comparable(get(b, i)))) {
            return true;
          }
        }
      } else {
        var comparableB = comparable(b);
        if (comparableB === b && typeof b === 'object') {
          for (var i = a.length; i--;) {
            if (String(a[i]) === String(b) && String(b) !== '[object Object]') {
              return true;
            }
          }
        }

        /*
          Handles documents that are undefined, whilst also
          having a 'null' element in the parameters to $in.
        */
        if (typeof comparableB == 'undefined') {
          for (var i = a.length; i--;) {
            if (a[i] == null) {
              return true;
            }
          }
        }

        /*
          Handles the case of {'field': {$in: [/regexp1/, /regexp2/, ...]}}
        */
        for (var i = a.length; i--;) {
          var validator = createRootValidator(get(a, i), undefined);
          var result = validate(validator, b, i, a);
          if ((result) && (String(result) !== '[object Object]') && (String(b) !== '[object Object]')) {
            return true;
          }
        }

        return !!~a.indexOf(comparableB);
      }

      return false;
    },

    /**
     */

    $nin: function(a, b, k, o) {
      return !OPERATORS.$in(a, b, k, o);
    },

    /**
     */

    $not: function(a, b, k, o) {
      return !validate(a, b, k, o);
    },

    /**
     */

    $type: function(a, b) {
      return b != void 0 ? b instanceof a || b.constructor == a : false;
     },

    /**
     */

    $all: function(a, b, k, o) {
      return OPERATORS.$and(a, b, k, o);
    },

    /**
     */

    $size: function(a, b) {
      return b ? a === b.length : false;
    },

    /**
     */

    $or: function(a, b, k, o) {
      for (var i = 0, n = a.length; i < n; i++) if (validate(get(a, i), b, k, o)) return true;
      return false;
    },

    /**
     */

    $nor: function(a, b, k, o) {
      return !OPERATORS.$or(a, b, k, o);
    },

    /**
     */

    $and: function(a, b, k, o) {
      for (var i = 0, n = a.length; i < n; i++) {
        if (!validate(get(a, i), b, k, o)) {
          return false;
        }
      }
      return true;
    },

    /**
     */

    $regex: or(function(a, b) {
      return typeof b === 'string' && a.test(b);
    }),

    /**
     */

    $where: function(a, b, k, o) {
      return a.call(b, b, k, o);
    },

    /**
     */

    $elemMatch: function(a, b, k, o) {
      if (isArray(b)) {
        return !!~search(b, a);
      }
      return validate(a, b, k, o);
    },

    /**
     */

    $exists: function(a, b, k, o) {
      return o.hasOwnProperty(k) === a;
    }
  };

  /**
   */

  var prepare = {

    /**
     */

    $eq: function(a) {

      if (a instanceof RegExp) {
        return function(b) {
          return typeof b === 'string' && a.test(b);
        };
      } else if (a instanceof Function) {
        return a;
      } else if (isArray(a) && !a.length) {
        // Special case of a == []
        return function(b) {
          return (isArray(b) && !b.length);
        };
      } else if (a === null){
        return function(b){
          //will match both null and undefined
          return b == null;
        }
      }

      return function(b) {
        return sift.compare(comparable(b), a) === 0;
      };
    },

    /**
     */

    $ne: function(a) {
      return prepare.$eq(a);
    },

    /**
     */

    $and: function(a) {
      return a.map(parse);
    },

    /**
     */

    $all: function(a) {
      return prepare.$and(a);
    },

    /**
     */

    $or: function(a) {
      return a.map(parse);
    },

    /**
     */

    $nor: function(a) {
      return a.map(parse);
    },

    /**
     */

    $not: function(a) {
      return parse(a);
    },

    /**
     */

    $regex: function(a, query) {
      return new RegExp(a, query.$options);
    },

    /**
     */

    $where: function(a) {
      return typeof a === 'string' ? new Function('obj', 'return ' + a) : a;
    },

    /**
     */

    $elemMatch: function(a) {
      return parse(a);
    },

    /**
     */

    $exists: function(a) {
      return !!a;
    }
  };

  /**
   */

  function search(array, validator) {

    for (var i = 0; i < array.length; i++) {
      var result = get(array, i);
      if (validate(validator, get(array, i))) {
        return i;
      }
    }

    return -1;
  }

  /**
   */

  function createValidator(a, validate) {
    return { a: a, v: validate };
  }

  /**
   */

  function nestedValidator(a, b) {
    var values  = [];
    findValues(b, a.k, 0, b, values);

    if (values.length === 1) {
      var first = values[0];
      return validate(a.nv, first[0], first[1], first[2]);
    }

    for (var i = 0; i < values.length; i++) {
      var result = values[i];
      if (validate(a.nv, result[0], result[1], result[2])) {
        return true;
      }
    }

    return false;
  }

  /**
   */

  function findValues(current, keypath, index, object, values) {

    if (index === keypath.length || current == void 0) {
      values.push([current, keypath[index - 1], object]);
      return;
    }

    var k = get(keypath, index);

    // ensure that if current is an array, that the current key
    // is NOT an array index. This sort of thing needs to work:
    // sift({'foo.0':42}, [{foo: [42]}]);
    if (isArray(current) && isNaN(Number(k))) {
      for (var i = 0, n = current.length; i < n; i++) {
        findValues(get(current, i), keypath, index, current, values);
      }
    } else {
      findValues(get(current, k), keypath, index + 1, current, values);
    }
  }

  /**
   */

  function createNestedValidator(keypath, a) {
    return { a: { k: keypath, nv: a }, v: nestedValidator };
  }

  /**
   * flatten the query
   */

  function isVanillaObject(value) {
    return value && value.constructor === Object;
  }

  function parse(query) {
    query = comparable(query);

    if (!query || !isVanillaObject(query)) { // cross browser support
      query = { $eq: query };
    }

    var validators = [];

    for (var key in query) {
      var a = query[key];

      if (key === '$options') {
        continue;
      }

      if (OPERATORS[key]) {
        if (prepare[key]) a = prepare[key](a, query);
        validators.push(createValidator(comparable(a), OPERATORS[key]));
      } else {

        if (key.charCodeAt(0) === 36) {
          throw new Error('Unknown operation ' + key);
        }

        validators.push(createNestedValidator(key.split('.'), parse(a)));
      }
    }

    return validators.length === 1 ? validators[0] : createValidator(validators, OPERATORS.$and);
  }

  /**
   */

  function createRootValidator(query, getter) {
    var validator = parse(query);
    if (getter) {
      validator = {
        a: validator,
        v: function(a, b, k, o) {
          return validate(a, getter(b), k, o);
        }
      };
    }
    return validator;
  }

  /**
   */

  function sift(query, array, getter) {

    if (isFunction(array)) {
      getter = array;
      array  = void 0;
    }

    var validator = createRootValidator(query, getter);

    function filter(b, k, o) {
      return validate(validator, b, k, o);
    }

    if (array) {
      return array.filter(filter);
    }

    return filter;
  }

  /**
   */

  sift.use = function(plugin) {
    if (isFunction(plugin)) return plugin(sift);
    for (var key in plugin) {
      /* istanbul ignore else */
      if (key.charCodeAt(0) === 36) {
        OPERATORS[key] = plugin[key];
      }
    }
  };

  /**
   */

  sift.indexOf = function(query, array, getter) {
    return search(array, createRootValidator(query, getter));
  };

  /**
   */

  sift.compare = function(a, b) {
    if(a===b) return 0;
    if(typeof a === typeof b) {
      if (a > b) {
        return 1;
      }
      if (a < b) {
        return -1;
      }
    }
  };

  /* istanbul ignore next */
  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    module.exports = sift;
    exports['default'] = module.exports.default = sift;
  }

  /* istanbul ignore next */
  if (typeof window !== 'undefined') {
    window.sift = sift;
  }
})();


/***/ }),
/* 250 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isNull.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is `null`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
 * @example
 *
 * _.isNull(null);
 * // => true
 *
 * _.isNull(void 0);
 * // => false
 */
function isNull(value) {
  return value === null;
}

module.exports = isNull;


/***/ }),
/* 251 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isUndefined.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
  return value === undefined;
}

module.exports = isUndefined;


/***/ }),
/* 252 */
/*!***********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/utils/string.js ***!
  \***********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.randomString = randomString;
exports.isNonemptyString = isNonemptyString;
exports.uuidv4 = uuidv4;
function uid() {
  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;

  var text = '';
  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';

  for (var i = 0; i < size; i += 1) {
    text += possible.charAt(Math.floor(Math.random() * possible.length));
  }

  return text;
}

function randomString() {
  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 18;
  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  return '' + prefix + uid(size);
}

function isNonemptyString(obj) {
  return typeof obj === 'string' && obj !== '';
}

function uuidv4() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  }
  return '' + s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
}

/***/ }),
/* 253 */
/*!********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/utils/url.js ***!
  \********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.appendQuery = appendQuery;

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _qs = __webpack_require__(/*! qs */ 72);

var _qs2 = _interopRequireDefault(_qs);

var _assign = __webpack_require__(/*! lodash/assign */ 17);

var _assign2 = _interopRequireDefault(_assign);

var _isArray = __webpack_require__(/*! lodash//isArray */ 4);

var _isArray2 = _interopRequireDefault(_isArray);

var _isPlainObject = __webpack_require__(/*! lodash//isPlainObject */ 32);

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _isString = __webpack_require__(/*! lodash//isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _isEmpty = __webpack_require__(/*! lodash//isEmpty */ 47);

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _object = __webpack_require__(/*! ./object */ 110);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Adapted from https://github.com/lakenen/node-append-query, to fit a non-node runtime.
 */
function serialize(obj) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var prefix = arguments[2];

  var str = [];
  var useArraySyntax = false;

  if ((0, _isArray2.default)(obj) && (0, _object.isDefined)(prefix)) {
    useArraySyntax = true;
  }

  Object.keys(obj).forEach(function (prop) {
    var query = void 0;
    var val = obj[prop];

    var key = prefix ? prefix + '[' + (useArraySyntax ? '' : prop) + ']' : prop;

    if ((0, _object.isDefined)(val) === false) {
      if (options.removeNull === true) {
        return;
      }

      query = options.encodeComponents === true ? encodeURIComponent(key) : key;
    } else if ((0, _isPlainObject2.default)(val)) {
      query = serialize(val, options, key);
    } else {
      query = options.encodeComponents ? encodeURIComponent(key) + '=' + encodeURIComponent(val) : key + '=' + val;
    }

    str.push(query);
  });

  return str.join('&');
}

function appendQuery(uri, query) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var parts = _url2.default.parse(uri, true);
  var queryToAppend = (0, _isString2.default)(query) ? _qs2.default.parse(query) : query;
  var parsedQuery = (0, _assign2.default)({}, parts.query, queryToAppend);
  options = (0, _assign2.default)({ encodeComponents: true, removeNull: false }, options);
  parts.query = null;
  var queryString = serialize(parsedQuery, options);
  parts.search = (0, _object.isDefined)(queryString) && (0, _isEmpty2.default)(queryString) === false ? '?' + queryString : null;
  return _url2.default.format(parts);
}

/***/ }),
/* 254 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/qs/lib/stringify.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ 111);
var formats = __webpack_require__(/*! ./formats */ 112);

var arrayPrefixGenerators = {
    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching
        return prefix + '[]';
    },
    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching
        return prefix + '[' + key + ']';
    },
    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching
        return prefix;
    }
};

var toISO = Date.prototype.toISOString;

var defaults = {
    delimiter: '&',
    encode: true,
    encoder: utils.encode,
    encodeValuesOnly: false,
    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching
        return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
};

var stringify = function stringify( // eslint-disable-line func-name-matching
    object,
    prefix,
    generateArrayPrefix,
    strictNullHandling,
    skipNulls,
    encoder,
    filter,
    sort,
    allowDots,
    serializeDate,
    formatter,
    encodeValuesOnly
) {
    var obj = object;
    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
        obj = serializeDate(obj);
    } else if (obj === null) {
        if (strictNullHandling) {
            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;
        }

        obj = '';
    }

    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {
        if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);
            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];
        }
        return [formatter(prefix) + '=' + formatter(String(obj))];
    }

    var values = [];

    if (typeof obj === 'undefined') {
        return values;
    }

    var objKeys;
    if (Array.isArray(filter)) {
        objKeys = filter;
    } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (skipNulls && obj[key] === null) {
            continue;
        }

        if (Array.isArray(obj)) {
            values = values.concat(stringify(
                obj[key],
                generateArrayPrefix(prefix, key),
                generateArrayPrefix,
                strictNullHandling,
                skipNulls,
                encoder,
                filter,
                sort,
                allowDots,
                serializeDate,
                formatter,
                encodeValuesOnly
            ));
        } else {
            values = values.concat(stringify(
                obj[key],
                prefix + (allowDots ? '.' + key : '[' + key + ']'),
                generateArrayPrefix,
                strictNullHandling,
                skipNulls,
                encoder,
                filter,
                sort,
                allowDots,
                serializeDate,
                formatter,
                encodeValuesOnly
            ));
        }
    }

    return values;
};

module.exports = function (object, opts) {
    var obj = object;
    var options = opts ? utils.assign({}, opts) : {};

    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {
        throw new TypeError('Encoder has to be a function.');
    }

    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;
    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;
    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;
    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;
    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;
    var sort = typeof options.sort === 'function' ? options.sort : null;
    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;
    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;
    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;
    if (typeof options.format === 'undefined') {
        options.format = formats['default'];
    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {
        throw new TypeError('Unknown format option provided.');
    }
    var formatter = formats.formatters[options.format];
    var objKeys;
    var filter;

    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    } else if (Array.isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
    }

    var keys = [];

    if (typeof obj !== 'object' || obj === null) {
        return '';
    }

    var arrayFormat;
    if (options.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = options.arrayFormat;
    } else if ('indices' in options) {
        arrayFormat = options.indices ? 'indices' : 'repeat';
    } else {
        arrayFormat = 'indices';
    }

    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

    if (!objKeys) {
        objKeys = Object.keys(obj);
    }

    if (sort) {
        objKeys.sort(sort);
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (skipNulls && obj[key] === null) {
            continue;
        }

        keys = keys.concat(stringify(
            obj[key],
            key,
            generateArrayPrefix,
            strictNullHandling,
            skipNulls,
            encode ? encoder : null,
            filter,
            sort,
            allowDots,
            serializeDate,
            formatter,
            encodeValuesOnly
        ));
    }

    var joined = keys.join(delimiter);
    var prefix = options.addQueryPrefix === true ? '?' : '';

    return joined.length > 0 ? prefix + joined : '';
};


/***/ }),
/* 255 */
/*!***************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/qs/lib/parse.js ***!
  \***************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ 111);

var has = Object.prototype.hasOwnProperty;

var defaults = {
    allowDots: false,
    allowPrototypes: false,
    arrayLimit: 20,
    decoder: utils.decode,
    delimiter: '&',
    depth: 5,
    parameterLimit: 1000,
    plainObjects: false,
    strictNullHandling: false
};

var parseValues = function parseQueryStringValues(str, options) {
    var obj = {};
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);

    for (var i = 0; i < parts.length; ++i) {
        var part = parts[i];

        var bracketEqualsPos = part.indexOf(']=');
        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;

        var key, val;
        if (pos === -1) {
            key = options.decoder(part, defaults.decoder);
            val = options.strictNullHandling ? null : '';
        } else {
            key = options.decoder(part.slice(0, pos), defaults.decoder);
            val = options.decoder(part.slice(pos + 1), defaults.decoder);
        }
        if (has.call(obj, key)) {
            obj[key] = [].concat(obj[key]).concat(val);
        } else {
            obj[key] = val;
        }
    }

    return obj;
};

var parseObject = function (chain, val, options) {
    var leaf = val;

    for (var i = chain.length - 1; i >= 0; --i) {
        var obj;
        var root = chain[i];

        if (root === '[]') {
            obj = [];
            obj = obj.concat(leaf);
        } else {
            obj = options.plainObjects ? Object.create(null) : {};
            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
            var index = parseInt(cleanRoot, 10);
            if (
                !isNaN(index)
                && root !== cleanRoot
                && String(index) === cleanRoot
                && index >= 0
                && (options.parseArrays && index <= options.arrayLimit)
            ) {
                obj = [];
                obj[index] = leaf;
            } else {
                obj[cleanRoot] = leaf;
            }
        }

        leaf = obj;
    }

    return leaf;
};

var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
    if (!givenKey) {
        return;
    }

    // Transform dot notation to bracket notation
    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;

    // The regex chunks

    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;

    // Get the parent

    var segment = brackets.exec(key);
    var parent = segment ? key.slice(0, segment.index) : key;

    // Stash the parent if it exists

    var keys = [];
    if (parent) {
        // If we aren't using plain objects, optionally prefix keys
        // that would overwrite object prototype properties
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
            if (!options.allowPrototypes) {
                return;
            }
        }

        keys.push(parent);
    }

    // Loop through children appending to the array until we hit depth

    var i = 0;
    while ((segment = child.exec(key)) !== null && i < options.depth) {
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options.allowPrototypes) {
                return;
            }
        }
        keys.push(segment[1]);
    }

    // If there's a remainder, just add whatever is left

    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }

    return parseObject(keys, val, options);
};

module.exports = function (str, opts) {
    var options = opts ? utils.assign({}, opts) : {};

    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {
        throw new TypeError('Decoder has to be a function.');
    }

    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;
    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;
    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;
    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;
    options.parseArrays = options.parseArrays !== false;
    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;
    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;
    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;
    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;
    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;
    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;

    if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? Object.create(null) : {};
    }

    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};

    // Iterate over the keys and setup the new object

    var keys = Object.keys(tempObj);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options);
        obj = utils.merge(obj, newObj, options);
    }

    return utils.compact(obj);
};


/***/ }),
/* 256 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_overRest.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(/*! ./_apply */ 113);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),
/* 257 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_setToString.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(/*! ./_baseSetToString */ 258),
    shortOut = __webpack_require__(/*! ./_shortOut */ 260);

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),
/* 258 */
/*!**************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseSetToString.js ***!
  \**************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(/*! ./constant */ 259),
    defineProperty = __webpack_require__(/*! ./_defineProperty */ 98),
    identity = __webpack_require__(/*! ./identity */ 46);

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),
/* 259 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/constant.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),
/* 260 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_shortOut.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),
/* 261 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/loglevel/lib/loglevel.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
* loglevel - https://github.com/pimterry/loglevel
*
* Copyright (c) 2013 Tim Perry
* Licensed under the MIT license.
*/
(function (root, definition) {
    "use strict";
    if (true) {
        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else if (typeof module === 'object' && module.exports) {
        module.exports = definition();
    } else {
        root.log = definition();
    }
}(this, function () {
    "use strict";

    // Slightly dubious tricks to cut down minimized file size
    var noop = function() {};
    var undefinedType = "undefined";

    var logMethods = [
        "trace",
        "debug",
        "info",
        "warn",
        "error"
    ];

    // Cross-browser bind equivalent that works at least back to IE6
    function bindMethod(obj, methodName) {
        var method = obj[methodName];
        if (typeof method.bind === 'function') {
            return method.bind(obj);
        } else {
            try {
                return Function.prototype.bind.call(method, obj);
            } catch (e) {
                // Missing bind shim or IE8 + Modernizr, fallback to wrapping
                return function() {
                    return Function.prototype.apply.apply(method, [obj, arguments]);
                };
            }
        }
    }

    // Build the best logging method possible for this env
    // Wherever possible we want to bind, not wrap, to preserve stack traces
    function realMethod(methodName) {
        if (methodName === 'debug') {
            methodName = 'log';
        }

        if (typeof console === undefinedType) {
            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives
        } else if (console[methodName] !== undefined) {
            return bindMethod(console, methodName);
        } else if (console.log !== undefined) {
            return bindMethod(console, 'log');
        } else {
            return noop;
        }
    }

    // These private functions always need `this` to be set properly

    function replaceLoggingMethods(level, loggerName) {
        /*jshint validthis:true */
        for (var i = 0; i < logMethods.length; i++) {
            var methodName = logMethods[i];
            this[methodName] = (i < level) ?
                noop :
                this.methodFactory(methodName, level, loggerName);
        }

        // Define log.log as an alias for log.debug
        this.log = this.debug;
    }

    // In old IE versions, the console isn't present until you first open it.
    // We build realMethod() replacements here that regenerate logging methods
    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {
        return function () {
            if (typeof console !== undefinedType) {
                replaceLoggingMethods.call(this, level, loggerName);
                this[methodName].apply(this, arguments);
            }
        };
    }

    // By default, we use closely bound real methods wherever possible, and
    // otherwise we wait for a console to appear, and then try again.
    function defaultMethodFactory(methodName, level, loggerName) {
        /*jshint validthis:true */
        return realMethod(methodName) ||
               enableLoggingWhenConsoleArrives.apply(this, arguments);
    }

    function Logger(name, defaultLevel, factory) {
      var self = this;
      var currentLevel;
      var storageKey = "loglevel";
      if (name) {
        storageKey += ":" + name;
      }

      function persistLevelIfPossible(levelNum) {
          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();

          if (typeof window === undefinedType) return;

          // Use localStorage if available
          try {
              window.localStorage[storageKey] = levelName;
              return;
          } catch (ignore) {}

          // Use session cookie as fallback
          try {
              window.document.cookie =
                encodeURIComponent(storageKey) + "=" + levelName + ";";
          } catch (ignore) {}
      }

      function getPersistedLevel() {
          var storedLevel;

          if (typeof window === undefinedType) return;

          try {
              storedLevel = window.localStorage[storageKey];
          } catch (ignore) {}

          // Fallback to cookies if local storage gives us nothing
          if (typeof storedLevel === undefinedType) {
              try {
                  var cookie = window.document.cookie;
                  var location = cookie.indexOf(
                      encodeURIComponent(storageKey) + "=");
                  if (location !== -1) {
                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];
                  }
              } catch (ignore) {}
          }

          // If the stored level is not valid, treat it as if nothing was stored.
          if (self.levels[storedLevel] === undefined) {
              storedLevel = undefined;
          }

          return storedLevel;
      }

      /*
       *
       * Public logger API - see https://github.com/pimterry/loglevel for details
       *
       */

      self.levels = { "TRACE": 0, "DEBUG": 1, "INFO": 2, "WARN": 3,
          "ERROR": 4, "SILENT": 5};

      self.methodFactory = factory || defaultMethodFactory;

      self.getLevel = function () {
          return currentLevel;
      };

      self.setLevel = function (level, persist) {
          if (typeof level === "string" && self.levels[level.toUpperCase()] !== undefined) {
              level = self.levels[level.toUpperCase()];
          }
          if (typeof level === "number" && level >= 0 && level <= self.levels.SILENT) {
              currentLevel = level;
              if (persist !== false) {  // defaults to true
                  persistLevelIfPossible(level);
              }
              replaceLoggingMethods.call(self, level, name);
              if (typeof console === undefinedType && level < self.levels.SILENT) {
                  return "No console available for logging";
              }
          } else {
              throw "log.setLevel() called with invalid level: " + level;
          }
      };

      self.setDefaultLevel = function (level) {
          if (!getPersistedLevel()) {
              self.setLevel(level, false);
          }
      };

      self.enableAll = function(persist) {
          self.setLevel(self.levels.TRACE, persist);
      };

      self.disableAll = function(persist) {
          self.setLevel(self.levels.SILENT, persist);
      };

      // Initialize with the right level
      var initialLevel = getPersistedLevel();
      if (initialLevel == null) {
          initialLevel = defaultLevel == null ? "WARN" : defaultLevel;
      }
      self.setLevel(initialLevel, false);
    }

    /*
     *
     * Top-level API
     *
     */

    var defaultLogger = new Logger();

    var _loggersByName = {};
    defaultLogger.getLogger = function getLogger(name) {
        if (typeof name !== "string" || name === "") {
          throw new TypeError("You must supply a name when creating a logger.");
        }

        var logger = _loggersByName[name];
        if (!logger) {
          logger = _loggersByName[name] = new Logger(
            name, defaultLogger.getLevel(), defaultLogger.methodFactory);
        }
        return logger;
    };

    // Grab the current global log variable in case of overwrite
    var _log = (typeof window !== undefinedType) ? window.log : undefined;
    defaultLogger.noConflict = function() {
        if (typeof window !== undefinedType &&
               window.log === defaultLogger) {
            window.log = _log;
        }

        return defaultLogger;
    };

    return defaultLogger;
}));


/***/ }),
/* 262 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseForOwn.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(/*! ./_baseFor */ 263),
    keys = __webpack_require__(/*! ./keys */ 20);

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),
/* 263 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseFor.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(/*! ./_createBaseFor */ 264);

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),
/* 264 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_createBaseFor.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),
/* 265 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_createBaseEach.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16);

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;


/***/ }),
/* 266 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_castFunction.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(/*! ./identity */ 46);

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : identity;
}

module.exports = castFunction;


/***/ }),
/* 267 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseMatches.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(/*! ./_baseIsMatch */ 268),
    getMatchData = __webpack_require__(/*! ./_getMatchData */ 275),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ 121);

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;


/***/ }),
/* 268 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseIsMatch.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ 59),
    baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ 116);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;


/***/ }),
/* 269 */
/*!**************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseIsEqualDeep.js ***!
  \**************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ 59),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ 117),
    equalByTag = __webpack_require__(/*! ./_equalByTag */ 273),
    equalObjects = __webpack_require__(/*! ./_equalObjects */ 274),
    getTag = __webpack_require__(/*! ./_getTag */ 69),
    isArray = __webpack_require__(/*! ./isArray */ 4),
    isBuffer = __webpack_require__(/*! ./isBuffer */ 43),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ 64);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),
/* 270 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_setCacheAdd.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),
/* 271 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_setCacheHas.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),
/* 272 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arraySome.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),
/* 273 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_equalByTag.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 26),
    Uint8Array = __webpack_require__(/*! ./_Uint8Array */ 107),
    eq = __webpack_require__(/*! ./eq */ 30),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ 117),
    mapToArray = __webpack_require__(/*! ./_mapToArray */ 108),
    setToArray = __webpack_require__(/*! ./_setToArray */ 109);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),
/* 274 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_equalObjects.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(/*! ./_getAllKeys */ 105);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),
/* 275 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_getMatchData.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ 120),
    keys = __webpack_require__(/*! ./keys */ 20);

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;


/***/ }),
/* 276 */
/*!******************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseMatchesProperty.js ***!
  \******************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ 116),
    get = __webpack_require__(/*! ./get */ 277),
    hasIn = __webpack_require__(/*! ./hasIn */ 283),
    isKey = __webpack_require__(/*! ./_isKey */ 79),
    isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ 120),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ 121),
    toKey = __webpack_require__(/*! ./_toKey */ 28);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;


/***/ }),
/* 277 */
/*!*************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/get.js ***!
  \*************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ 78);

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),
/* 278 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_stringToPath.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(/*! ./_memoizeCapped */ 279);

/** Used to match property names within property paths. */
var reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),
/* 279 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_memoizeCapped.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(/*! ./memoize */ 280);

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),
/* 280 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/memoize.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ 61);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),
/* 281 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/toString.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(/*! ./_baseToString */ 282);

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),
/* 282 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseToString.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 26),
    arrayMap = __webpack_require__(/*! ./_arrayMap */ 53),
    isArray = __webpack_require__(/*! ./isArray */ 4),
    isSymbol = __webpack_require__(/*! ./isSymbol */ 52);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),
/* 283 */
/*!***************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/hasIn.js ***!
  \***************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(/*! ./_baseHasIn */ 284),
    hasPath = __webpack_require__(/*! ./_hasPath */ 285);

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;


/***/ }),
/* 284 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseHasIn.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;


/***/ }),
/* 285 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_hasPath.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ 51),
    isArguments = __webpack_require__(/*! ./isArguments */ 42),
    isArray = __webpack_require__(/*! ./isArray */ 4),
    isIndex = __webpack_require__(/*! ./_isIndex */ 44),
    isLength = __webpack_require__(/*! ./isLength */ 65),
    toKey = __webpack_require__(/*! ./_toKey */ 28);

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),
/* 286 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/property.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(/*! ./_baseProperty */ 287),
    basePropertyDeep = __webpack_require__(/*! ./_basePropertyDeep */ 288),
    isKey = __webpack_require__(/*! ./_isKey */ 79),
    toKey = __webpack_require__(/*! ./_toKey */ 28);

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;


/***/ }),
/* 287 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseProperty.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),
/* 288 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_basePropertyDeep.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ 78);

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;


/***/ }),
/* 289 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseReduce.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.reduce` and `_.reduceRight`, without support
 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} accumulator The initial value.
 * @param {boolean} initAccum Specify using the first or last element of
 *  `collection` as the initial value.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the accumulated value.
 */
function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value, index, collection) {
    accumulator = initAccum
      ? (initAccum = false, value)
      : iteratee(accumulator, value, index, collection);
  });
  return accumulator;
}

module.exports = baseReduce;


/***/ }),
/* 290 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseValues.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ 53);

/**
 * The base implementation of `_.values` and `_.valuesIn` which creates an
 * array of `object` property values corresponding to the property names
 * of `props`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} props The property names to get values for.
 * @returns {Object} Returns the array of property values.
 */
function baseValues(object, props) {
  return arrayMap(props, function(key) {
    return object[key];
  });
}

module.exports = baseValues;


/***/ }),
/* 291 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/middleware/cache.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CacheMiddleware = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _isEmpty = __webpack_require__(/*! lodash/isEmpty */ 47);

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _utils = __webpack_require__(/*! ../../utils */ 2);

var _middleware = __webpack_require__(/*! ./middleware */ 35);

var _storage = __webpack_require__(/*! ./storage */ 123);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CacheMiddleware = exports.CacheMiddleware = function (_Middleware) {
  _inherits(CacheMiddleware, _Middleware);

  function CacheMiddleware() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Cache Middleware';

    _classCallCheck(this, CacheMiddleware);

    return _possibleConstructorReturn(this, (CacheMiddleware.__proto__ || Object.getPrototypeOf(CacheMiddleware)).call(this, name));
  }

  _createClass(CacheMiddleware, [{
    key: 'loadStorage',
    value: function loadStorage(name) {
      return new _storage.Storage(name);
    }
  }, {
    key: 'handle',
    value: function handle(request) {
      var method = request.method,
          body = request.body,
          appKey = request.appKey,
          collection = request.collection,
          entityId = request.entityId,
          encryptionKey = request.encryptionKey;

      var storage = this.loadStorage(appKey, encryptionKey);
      var promise = void 0;

      if (method === 'GET') {
        if ((0, _utils.isDefined)(entityId)) {
          promise = storage.findById(collection, entityId);
        } else {
          promise = storage.find(collection);
        }
      } else if (method === 'POST' || method === 'PUT') {
        if (entityId === '_group') {
          promise = storage.find(collection);
        } else {
          promise = storage.save(collection, body);
        }
      } else if (method === 'DELETE') {
        if ((0, _utils.isDefined)(collection) === false) {
          promise = storage.clear();
        } else {
          promise = storage.removeById(collection, entityId);
        }
      }

      return promise.then(function (data) {
        var response = {
          statusCode: method === 'POST' ? 201 : 200,
          data: data
        };

        if (method === 'POST' && entityId === '_group') {
          response.statusCode = 200;
        }

        if ((0, _utils.isDefined)(data) === false || (0, _isEmpty2.default)(data)) {
          response.statusCode = 204;
        }

        return response;
      }).catch(function (error) {
        return { statusCode: error.code };
      }).then(function (response) {
        return { response: response };
      });
    }
  }]);

  return CacheMiddleware;
}(_middleware.Middleware);

/***/ }),
/* 292 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/middleware/asciitree.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var levels = [];
var c0 = String.fromCharCode(9500);
var c1 = String.fromCharCode(9472);
var c2 = String.fromCharCode(9492);
var c3 = String.fromCharCode(9474);

function compose(node, end) {
  if (node.level === 0) {
    return node.value;
  }

  var ret = '\r\n';
  var c = end ? c2 : c0;

  for (var i = 1; i < node.level; i += 1) {
    ret = '' + ret + (levels[i] ? ' ' : c3);
    ret = ret + '  ';
  }

  return '' + ret + c + c1 + ' ' + node.value;
}

var AsciiTree = exports.AsciiTree = function () {
  function AsciiTree() {
    _classCallCheck(this, AsciiTree);
  }

  _createClass(AsciiTree, null, [{
    key: 'generate',
    value: function generate() {
      var _this = this;

      var tree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var end = arguments[1];

      var result = compose(tree, end);

      if (tree.nodes.length > 0) {
        var last = tree.nodes.length - 1;
        tree.nodes.forEach(function (subTree, index) {
          levels[subTree.level] = index === last;
          result += _this.generate(subTree, index === last);
        });
      }

      return result;
    }
  }]);

  return AsciiTree;
}();

/***/ }),
/* 293 */
/*!***************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/middleware/storage/promise-queue.js ***!
  \***************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Queue = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var noop = function noop() {};

function resolveWith(value) {
  if (value && typeof value.then === 'function') {
    return value;
  }

  return _es6Promise2.default.resolve(value);
}

var Queue = exports.Queue = function () {
  function Queue(maxPendingPromises, maxQueuedPromises) {
    _classCallCheck(this, Queue);

    this.pendingPromises = 0;
    this.maxPendingPromises = typeof maxPendingPromises !== 'undefined' ? maxPendingPromises : Infinity;
    this.maxQueuedPromises = typeof maxQueuedPromises !== 'undefined' ? maxQueuedPromises : Infinity;
    this.queue = [];
  }

  _createClass(Queue, [{
    key: 'add',
    value: function add(promiseGenerator) {
      var _this = this;

      return new _es6Promise2.default(function (resolve, reject, notify) {
        if (_this.queue.length >= _this.maxQueuedPromises) {
          reject(new Error('Queue limit reached'));
          return;
        }

        _this.queue.push({
          promiseGenerator: promiseGenerator,
          resolve: resolve,
          reject: reject,
          notify: notify || noop
        });

        _this._dequeue();
      });
    }
  }, {
    key: 'getPendingLength',
    value: function getPendingLength() {
      return this.pendingPromises;
    }
  }, {
    key: 'getQueueLength',
    value: function getQueueLength() {
      return this.queue.length;
    }
  }, {
    key: '_dequeue',
    value: function _dequeue() {
      var _this2 = this;

      if (this.pendingPromises >= this.maxPendingPromises) {
        return false;
      }

      // Remove from queue
      var item = this.queue.shift();
      if (!item) {
        return false;
      }

      try {
        this.pendingPromises += 1;
        resolveWith(item.promiseGenerator())
        // Forward all stuff
        .then(function (value) {
          // It is not pending now
          _this2.pendingPromises -= 1;
          // It should pass values
          item.resolve(value);
          _this2._dequeue();
        }, function (err) {
          // It is not pending now
          _this2.pendingPromises -= 1;
          // It should not mask errors
          item.reject(err);
          _this2._dequeue();
        }, function (message) {
          // It should pass notifications
          item.notify(message);
        });
      } catch (err) {
        this.pendingPromises -= 1;
        item.reject(err);
        this._dequeue();
      }

      return true;
    }
  }]);

  return Queue;
}();

/***/ }),
/* 294 */
/*!********************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/middleware/storage/memory.js ***!
  \********************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MemoryAdapter = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _fastMemoryCache = __webpack_require__(/*! fast-memory-cache */ 115);

var _fastMemoryCache2 = _interopRequireDefault(_fastMemoryCache);

var _keyBy = __webpack_require__(/*! lodash/keyBy */ 81);

var _keyBy2 = _interopRequireDefault(_keyBy);

var _forEach = __webpack_require__(/*! lodash/forEach */ 48);

var _forEach2 = _interopRequireDefault(_forEach);

var _values = __webpack_require__(/*! lodash/values */ 80);

var _values2 = _interopRequireDefault(_values);

var _find = __webpack_require__(/*! lodash/find */ 298);

var _find2 = _interopRequireDefault(_find);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _isArray = __webpack_require__(/*! lodash/isArray */ 4);

var _isArray2 = _interopRequireDefault(_isArray);

var _utils = __webpack_require__(/*! ../../../utils */ 2);

var _errors = __webpack_require__(/*! ../../../errors */ 1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var caches = {};

var Memory = function () {
  function Memory(name) {
    _classCallCheck(this, Memory);

    if (!(0, _utils.isDefined)(name)) {
      throw new Error('A name for the collection is required to use the memory persistence adapter.', name);
    }

    if (!(0, _isString2.default)(name)) {
      throw new Error('The name of the collection must be a string to use the memory persistence adapter', name);
    }

    this.name = name;
    this.cache = caches[name];

    if (!(0, _utils.isDefined)(this.cache)) {
      this.cache = new _fastMemoryCache2.default();
      caches[name] = this.cache;
    }
  }

  _createClass(Memory, [{
    key: 'find',
    value: function find(collection) {
      try {
        var entities = this.cache.get(collection);

        if (entities) {
          return _es6Promise2.default.resolve(JSON.parse(entities));
        }

        return _es6Promise2.default.resolve([]);
      } catch (error) {
        return _es6Promise2.default.reject(error);
      }
    }
  }, {
    key: 'findById',
    value: function findById(collection, id) {
      var _this = this;

      return this.find(collection).then(function (entities) {
        var entity = (0, _find2.default)(entities, function (entity) {
          return entity._id === id;
        });

        if (!entity) {
          return _es6Promise2.default.reject(new _errors.NotFoundError('An entity with _id = ' + id + ' was not found in the ' + collection + (' collection on the ' + _this.name + ' memory database.')));
        }

        return entity;
      });
    }
  }, {
    key: 'save',
    value: function save(collection, entities) {
      var _this2 = this;

      var singular = false;

      if (!(0, _isArray2.default)(entities)) {
        entities = [entities];
        singular = true;
      }

      if (entities.length === 0) {
        return _es6Promise2.default.resolve(entities);
      }

      return this.find(collection).then(function (existingEntities) {
        existingEntities = (0, _keyBy2.default)(existingEntities, '_id');
        entities = (0, _keyBy2.default)(entities, '_id');
        var entityIds = Object.keys(entities);

        (0, _forEach2.default)(entityIds, function (id) {
          existingEntities[id] = entities[id];
        });

        _this2.cache.set(collection, JSON.stringify((0, _values2.default)(existingEntities)));

        entities = (0, _values2.default)(entities);
        return singular ? entities[0] : entities;
      });
    }
  }, {
    key: 'removeById',
    value: function removeById(collection, id) {
      var _this3 = this;

      return this.find(collection).then(function (entities) {
        entities = (0, _keyBy2.default)(entities, '_id');
        var entity = entities[id];

        if (!(0, _utils.isDefined)(entity)) {
          return _es6Promise2.default.reject(new _errors.NotFoundError('An entity with _id = ' + id + ' was not found in the ' + collection + (' collection on the ' + _this3.name + ' memory database.')));
        }

        delete entities[id];
        _this3.cache.set(collection, JSON.stringify((0, _values2.default)(entities)));
        return { count: 1 };
      });
    }
  }, {
    key: 'clear',
    value: function clear() {
      this.cache.clear();
      return _es6Promise2.default.resolve(null);
    }
  }]);

  return Memory;
}();

var MemoryAdapter = exports.MemoryAdapter = {
  load: function load(name) {
    return _es6Promise2.default.resolve(new Memory(name));
  }
};

/***/ }),
/* 295 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_createAggregator.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayAggregator = __webpack_require__(/*! ./_arrayAggregator */ 296),
    baseAggregator = __webpack_require__(/*! ./_baseAggregator */ 297),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ 22),
    isArray = __webpack_require__(/*! ./isArray */ 4);

/**
 * Creates a function like `_.groupBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} [initializer] The accumulator object initializer.
 * @returns {Function} Returns the new aggregator function.
 */
function createAggregator(setter, initializer) {
  return function(collection, iteratee) {
    var func = isArray(collection) ? arrayAggregator : baseAggregator,
        accumulator = initializer ? initializer() : {};

    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);
  };
}

module.exports = createAggregator;


/***/ }),
/* 296 */
/*!**************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arrayAggregator.js ***!
  \**************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `baseAggregator` for arrays.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function arrayAggregator(array, setter, iteratee, accumulator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    var value = array[index];
    setter(accumulator, value, iteratee(value), array);
  }
  return accumulator;
}

module.exports = arrayAggregator;


/***/ }),
/* 297 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseAggregator.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(/*! ./_baseEach */ 33);

/**
 * Aggregates elements of `collection` on `accumulator` with keys transformed
 * by `iteratee` and values set by `setter`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function baseAggregator(collection, setter, iteratee, accumulator) {
  baseEach(collection, function(value, key, collection) {
    setter(accumulator, value, iteratee(value), collection);
  });
  return accumulator;
}

module.exports = baseAggregator;


/***/ }),
/* 298 */
/*!**************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/find.js ***!
  \**************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var createFind = __webpack_require__(/*! ./_createFind */ 299),
    findIndex = __webpack_require__(/*! ./findIndex */ 300);

/**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */
var find = createFind(findIndex);

module.exports = find;


/***/ }),
/* 299 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_createFind.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(/*! ./_baseIteratee */ 22),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16),
    keys = __webpack_require__(/*! ./keys */ 20);

/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike(collection)) {
      var iteratee = baseIteratee(predicate, 3);
      collection = keys(collection);
      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

module.exports = createFind;


/***/ }),
/* 300 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/findIndex.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(/*! ./_baseFindIndex */ 124),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ 22),
    toInteger = __webpack_require__(/*! ./toInteger */ 301);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger(fromIndex);
  if (index < 0) {
    index = nativeMax(length + index, 0);
  }
  return baseFindIndex(array, baseIteratee(predicate, 3), index);
}

module.exports = findIndex;


/***/ }),
/* 301 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/toInteger.js ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var toFinite = __webpack_require__(/*! ./toFinite */ 302);

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

module.exports = toInteger;


/***/ }),
/* 302 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/toFinite.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__(/*! ./toNumber */ 303);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;


/***/ }),
/* 303 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/toNumber.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ 14),
    isSymbol = __webpack_require__(/*! ./isSymbol */ 52);

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),
/* 304 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/middleware/http.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HttpMiddleware = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _errors = __webpack_require__(/*! ../../errors */ 1);

var _middleware = __webpack_require__(/*! ./middleware */ 35);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HttpMiddleware = exports.HttpMiddleware = function (_Middleware) {
  _inherits(HttpMiddleware, _Middleware);

  function HttpMiddleware() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Http Middleware';

    _classCallCheck(this, HttpMiddleware);

    return _possibleConstructorReturn(this, (HttpMiddleware.__proto__ || Object.getPrototypeOf(HttpMiddleware)).call(this, name));
  }

  _createClass(HttpMiddleware, [{
    key: 'handle',
    value: function handle() {
      return _es6Promise2.default.reject(new _errors.KinveyError('Unable to send network request.', 'Please override the core HttpMiddleware.'));
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      return _es6Promise2.default.resolve();
    }
  }]);

  return HttpMiddleware;
}(_middleware.Middleware);

/***/ }),
/* 305 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/middleware/parse.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ParseMiddleware = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _utils = __webpack_require__(/*! ../../utils */ 2);

var _middleware = __webpack_require__(/*! ./middleware */ 35);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ParseMiddleware = exports.ParseMiddleware = function (_Middleware) {
  _inherits(ParseMiddleware, _Middleware);

  function ParseMiddleware() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Parse Middleware';

    _classCallCheck(this, ParseMiddleware);

    return _possibleConstructorReturn(this, (ParseMiddleware.__proto__ || Object.getPrototypeOf(ParseMiddleware)).call(this, name));
  }

  _createClass(ParseMiddleware, [{
    key: 'handle',
    value: function handle(request, response) {
      if ((0, _utils.isDefined)(response) && (0, _utils.isDefined)(response.data)) {
        var contentType = response.headers['content-type'] || response.headers['Content-Type'];

        if (contentType) {
          if (contentType.indexOf('application/json') === 0) {
            try {
              response.data = JSON.parse(response.data);
            } catch (error) {
              // Just catch the error
            }
          }
        }
      }

      return _es6Promise2.default.resolve({ response: response });
    }
  }]);

  return ParseMiddleware;
}(_middleware.Middleware);

/***/ }),
/* 306 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/middleware/serialize.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SerializeMiddleware = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _utils = __webpack_require__(/*! ../../utils */ 2);

var _middleware = __webpack_require__(/*! ./middleware */ 35);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SerializeMiddleware = exports.SerializeMiddleware = function (_Middleware) {
  _inherits(SerializeMiddleware, _Middleware);

  function SerializeMiddleware() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Serialize Middleware';

    _classCallCheck(this, SerializeMiddleware);

    return _possibleConstructorReturn(this, (SerializeMiddleware.__proto__ || Object.getPrototypeOf(SerializeMiddleware)).call(this, name));
  }

  _createClass(SerializeMiddleware, [{
    key: 'handle',
    value: function handle(request) {
      if ((0, _utils.isDefined)(request) && (0, _utils.isDefined)(request.body)) {
        var contentType = request.headers['content-type'] || request.headers['Content-Type'];

        if ((0, _utils.isDefined)(contentType)) {
          if (contentType.indexOf('application/json') === 0) {
            request.body = JSON.stringify(request.body);
          } else if (contentType.indexOf('application/x-www-form-urlencoded') === 0) {
            var body = request.body;
            var str = [];

            Object.keys(body).forEach(function (key) {
              str.push(global.encodeURIComponent(key) + '=' + global.encodeURIComponent(body[key]));
            });

            request.body = str.join('&');
          }
        }
      }

      return _es6Promise2.default.resolve({ request: request });
    }
  }]);

  return SerializeMiddleware;
}(_middleware.Middleware);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../../../../../../../.nvm/versions/node/v8.6.0/lib/node_modules/webpack/buildin/global.js */ 23)))

/***/ }),
/* 307 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/request/deltafetch.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DeltaFetchRequest = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if ("value" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _keyBy = __webpack_require__(/*! lodash/keyBy */ 81);

var _keyBy2 = _interopRequireDefault(_keyBy);

var _reduce = __webpack_require__(/*! lodash/reduce */ 77);

var _reduce2 = _interopRequireDefault(_reduce);

var _result = __webpack_require__(/*! lodash/result */ 125);

var _result2 = _interopRequireDefault(_result);

var _values = __webpack_require__(/*! lodash/values */ 80);

var _values2 = _interopRequireDefault(_values);

var _forEach = __webpack_require__(/*! lodash/forEach */ 48);

var _forEach2 = _interopRequireDefault(_forEach);

var _isArray = __webpack_require__(/*! lodash/isArray */ 4);

var _isArray2 = _interopRequireDefault(_isArray);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _query3 = __webpack_require__(/*! ../query */ 12);

var _request3 = __webpack_require__(/*! ./request */ 49);

var _network = __webpack_require__(/*! ./network */ 126);

var _cache = __webpack_require__(/*! ./cache */ 94);

var _response = __webpack_require__(/*! ./response */ 34);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var maxIdsPerRequest = 200;

var DeltaFetchRequest = exports.DeltaFetchRequest = function (_KinveyRequest) {
  _inherits(DeltaFetchRequest, _KinveyRequest);

  function DeltaFetchRequest() {
    _classCallCheck(this, DeltaFetchRequest);

    return _possibleConstructorReturn(this, (DeltaFetchRequest.__proto__ || Object.getPrototypeOf(DeltaFetchRequest)).apply(this, arguments));
  }

  _createClass(DeltaFetchRequest, [{
    key: 'execute',
    value: function execute() {
      var _this2 = this;

      var request = new _cache.CacheRequest({
        method: _request3.RequestMethod.GET,
        url: this.url,
        headers: this.headers,
        query: this.query,
        timeout: this.timeout,
        client: this.client
      });
      return request.execute().then(function (response) {
        return response.data;
      }).catch(function (error) {
        if (!(error instanceof _errors.NotFoundError)) {
          throw error;
        }

        return [];
      }).then(function (cacheData) {
        if ((0, _isArray2.default)(cacheData) && cacheData.length > 0) {
          var cacheDocuments = (0, _keyBy2.default)(cacheData, '_id');
          var query = new _query3.Query((0, _result2.default)(_this2.query, 'toJSON', _this2.query));
          query.fields = ['_id', '_kmd.lmt'];
          var _request = new _network.KinveyRequest({
            method: _request3.RequestMethod.GET,
            url: _this2.url,
            headers: _this2.headers,
            authType: _this2.authType,
            query: query,
            timeout: _this2.timeout,
            client: _this2.client,
            properties: _this2.properties,
            skipBL: _this2.skipBL,
            trace: _this2.trace,
            followRedirect: _this2.followRedirect,
            cache: _this2.cache
          });

          return _request.execute().then(function (response) {
            return response.data;
          }).then(function (networkData) {
            var networkDocuments = (0, _keyBy2.default)(networkData, '_id');
            var deltaSet = networkDocuments;
            var cacheDocumentIds = Object.keys(cacheDocuments);

            (0, _forEach2.default)(cacheDocumentIds, function (id) {
              var cacheDocument = cacheDocuments[id];
              var networkDocument = networkDocuments[id];

              if (networkDocument) {
                if ((0, _utils.isDefined)(networkDocument._kmd) && (0, _utils.isDefined)(cacheDocument._kmd) && networkDocument._kmd.lmt === cacheDocument._kmd.lmt) {
                  delete deltaSet[id];
                } else {
                  delete cacheDocuments[id];
                }
              } else {
                delete cacheDocuments[id];
              }
            });

            var deltaSetIds = Object.keys(deltaSet);
            var promises = [];
            var i = 0;

            while (i < deltaSetIds.length) {
              var _query = new _query3.Query((0, _result2.default)(_this2.query, 'toJSON', _this2.query));
              var ids = deltaSetIds.slice(i, deltaSetIds.length > maxIdsPerRequest + i ? maxIdsPerRequest : deltaSetIds.length);
              _query.contains('_id', ids);

              var _request2 = new _network.KinveyRequest({
                method: _request3.RequestMethod.GET,
                url: _this2.url,
                headers: _this2.headers,
                authType: _this2.authType,
                query: _query,
                timeout: _this2.timeout,
                client: _this2.client,
                properties: _this2.properties,
                skipBL: _this2.skipBL,
                trace: _this2.trace,
                followRedirect: _this2.followRedirect,
                cache: _this2.cache
              });

              var promise = _request2.execute();
              promises.push(promise);
              i += maxIdsPerRequest;
            }

            return _es6Promise2.default.all(promises);
          }).then(function (responses) {
            var response = (0, _reduce2.default)(responses, function (result, response) {
              if (response.isSuccess()) {
                var headers = result.headers;
                headers.addAll(response.headers);
                result.headers = headers;
                result.data = result.data.concat(response.data);
              }

              return result;
            }, new _response.Response({
              statusCode: _response.StatusCode.Ok,
              data: []
            }));

            response.data = response.data.concat((0, _values2.default)(cacheDocuments));

            if (_this2.query) {
              var _query2 = new _query3.Query((0, _result2.default)(_this2.query, 'toJSON', _this2.query));
              _query2.skip = 0;
              _query2.limit = 0;
              response.data = _query2.process(response.data);
            }

            return response;
          });
        }

        var request = new _network.KinveyRequest({
          method: _request3.RequestMethod.GET,
          url: _this2.url,
          headers: _this2.headers,
          authType: _this2.authType,
          query: _this2.query,
          timeout: _this2.timeout,
          client: _this2.client,
          properties: _this2.properties,
          skipBL: _this2.skipBL,
          trace: _this2.trace,
          followRedirect: _this2.followRedirect,
          cache: _this2.cache
        });
        return request.execute();
      });
    }
  }, {
    key: 'method',
    get: function get() {
      return _get(DeltaFetchRequest.prototype.__proto__ || Object.getPrototypeOf(DeltaFetchRequest.prototype), 'method', this);
    },
    set: function set(method) {
      // Cast the method to a string
      if (!(0, _isString2.default)(method)) {
        method = String(method);
      }

      // Make sure the the method is upper case
      method = method.toUpperCase();

      // Verify that the method is allowed
      switch (method) {
        case _request3.RequestMethod.GET:
          _set(DeltaFetchRequest.prototype.__proto__ || Object.getPrototypeOf(DeltaFetchRequest.prototype), 'method', method, this);
          break;
        case _request3.RequestMethod.POST:
        case _request3.RequestMethod.PATCH:
        case _request3.RequestMethod.PUT:
        case _request3.RequestMethod.DELETE:
        default:
          throw new _errors.KinveyError('Invalid request Method. Only RequestMethod.GET is allowed.');
      }
    }
  }]);

  return DeltaFetchRequest;
}(_network.KinveyRequest);

/***/ }),
/* 308 */
/*!**********************************************!*\
  !*** (webpack)/node_modules/buffer/index.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ 309)
var ieee754 = __webpack_require__(/*! ieee754 */ 310)
var isArray = __webpack_require__(/*! isarray */ 311)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../buildin/global.js */ 23)))

/***/ }),
/* 309 */
/*!*************************************************!*\
  !*** (webpack)/node_modules/base64-js/index.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}


/***/ }),
/* 310 */
/*!***********************************************!*\
  !*** (webpack)/node_modules/ieee754/index.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 311 */
/*!***********************************************!*\
  !*** (webpack)/node_modules/isarray/index.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 312 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/defaults.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(/*! ./_apply */ 113),
    assignInWith = __webpack_require__(/*! ./assignInWith */ 313),
    baseRest = __webpack_require__(/*! ./_baseRest */ 74),
    customDefaultsAssignIn = __webpack_require__(/*! ./_customDefaultsAssignIn */ 314);

/**
 * Assigns own and inherited enumerable string keyed properties of source
 * objects to the destination object for all destination properties that
 * resolve to `undefined`. Source objects are applied from left to right.
 * Once a property is set, additional values of the same property are ignored.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.defaultsDeep
 * @example
 *
 * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var defaults = baseRest(function(args) {
  args.push(undefined, customDefaultsAssignIn);
  return apply(assignInWith, undefined, args);
});

module.exports = defaults;


/***/ }),
/* 313 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/assignInWith.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ 25),
    createAssigner = __webpack_require__(/*! ./_createAssigner */ 73),
    keysIn = __webpack_require__(/*! ./keysIn */ 45);

/**
 * This method is like `_.assignIn` except that it accepts `customizer`
 * which is invoked to produce the assigned values. If `customizer` returns
 * `undefined`, assignment is handled by the method instead. The `customizer`
 * is invoked with five arguments: (objValue, srcValue, key, object, source).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias extendWith
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @see _.assignWith
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   return _.isUndefined(objValue) ? srcValue : objValue;
 * }
 *
 * var defaults = _.partialRight(_.assignInWith, customizer);
 *
 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
  copyObject(source, keysIn(source), object, customizer);
});

module.exports = assignInWith;


/***/ }),
/* 314 */
/*!*********************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_customDefaultsAssignIn.js ***!
  \*********************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ 30);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
 * of source objects to the destination object for all destination properties
 * that resolve to `undefined`.
 *
 * @private
 * @param {*} objValue The destination value.
 * @param {*} srcValue The source value.
 * @param {string} key The key of the property to assign.
 * @param {Object} object The parent object of `objValue`.
 * @returns {*} Returns the value to assign.
 */
function customDefaultsAssignIn(objValue, srcValue, key, object) {
  if (objValue === undefined ||
      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
    return srcValue;
  }
  return objValue;
}

module.exports = customDefaultsAssignIn;


/***/ }),
/* 315 */
/*!*************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/identity/popup.js ***!
  \*************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Popup = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _events = __webpack_require__(/*! events */ 54);

var _errors = __webpack_require__(/*! ../errors */ 1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Popup = exports.Popup = function (_EventEmitter) {
  _inherits(Popup, _EventEmitter);

  function Popup() {
    _classCallCheck(this, Popup);

    return _possibleConstructorReturn(this, (Popup.__proto__ || Object.getPrototypeOf(Popup)).apply(this, arguments));
  }

  _createClass(Popup, [{
    key: 'open',
    value: function open() {
      throw new _errors.PopupError('Unable to open a popup on this platform.');
    }
  }, {
    key: 'close',
    value: function close() {
      return this;
    }
  }], [{
    key: 'isSupported',
    value: function isSupported() {
      return false;
    }
  }]);

  return Popup;
}(_events.EventEmitter);

/***/ }),
/* 316 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/identity/identity.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Identity = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _client = __webpack_require__(/*! ../client */ 10);

var _errors = __webpack_require__(/*! ../errors */ 1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Identity = exports.Identity = function () {
  function Identity() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Identity);

    this.client = options.client || _client.Client.sharedInstance();
  }

  _createClass(Identity, [{
    key: 'isSupported',
    value: function isSupported() {
      return false;
    }
  }, {
    key: 'isOnline',
    value: function isOnline(session) {
      var currentTime = new Date().getTime() / 1000;
      return session && session.access_token && session.expires > currentTime;
    }
  }, {
    key: 'identity',
    get: function get() {
      throw new _errors.KinveyError('A subclass must override this property.');
    }
  }], [{
    key: 'isSupported',
    value: function isSupported() {
      return false;
    }
  }, {
    key: 'identity',
    get: function get() {
      throw new _errors.KinveyError('A subclass must override this property.');
    }
  }]);

  return Identity;
}();

/***/ }),
/* 317 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/nativescript/cache/index.ts ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(/*! ../../core/utils */ 2);
var request_1 = __webpack_require__(/*! ../../core/request */ 7);
var sqlite_1 = __webpack_require__(/*! ./sqlite */ 318);
var Storage = (function (_super) {
    __extends(Storage, _super);
    function Storage(name) {
        return _super.call(this, name) || this;
    }
    Storage.prototype.loadAdapter = function () {
        var _this = this;
        return sqlite_1.sqLite.load(this.name)
            .then(function (adapter) {
            if (!utils_1.isDefined(adapter)) {
                return _super.prototype.loadAdapter.call(_this);
            }
            return adapter;
        });
    };
    return Storage;
}(request_1.Storage));
var CacheMiddleware = (function (_super) {
    __extends(CacheMiddleware, _super);
    function CacheMiddleware(name) {
        if (name === void 0) { name = 'NativeScript Cache Middleware'; }
        return _super.call(this, name) || this;
    }
    CacheMiddleware.prototype.handle = function (request) {
        var method = request.method, body = request.body, appKey = request.appKey, collection = request.collection, entityId = request.entityId, encryptionKey = request.encryptionKey;
        var storage = new Storage(appKey);
        var promise;
        if (method === request_1.RequestMethod.GET) {
            if (entityId) {
                promise = storage.findById(collection, entityId);
            }
            else {
                promise = storage.find(collection);
            }
        }
        else if (method === request_1.RequestMethod.POST || method === request_1.RequestMethod.PUT) {
            if (entityId === '_group') {
                promise = storage.find(collection);
            }
            else {
                promise = storage.save(collection, body);
            }
        }
        else if (method === request_1.RequestMethod.DELETE) {
            if (!collection) {
                promise = storage.clear();
            }
            else {
                promise = storage.removeById(collection, entityId);
            }
        }
        return promise
            .then(function (data) {
            var response = {
                statusCode: method === 'POST' ? request_1.StatusCode.Created : request_1.StatusCode.Ok,
                data: data
            };
            if (method === 'POST' && entityId === '_group') {
                response.statusCode = request_1.StatusCode.Ok;
            }
            if (!data || utils_1.isEmpty(data)) {
                response.statusCode = request_1.StatusCode.Empty;
            }
            return response;
        })
            .catch(function (error) { return ({ statusCode: error.code }); })
            .then(function (response) { return ({ response: response }); });
    };
    return CacheMiddleware;
}(request_1.Middleware));
exports.CacheMiddleware = CacheMiddleware;


/***/ }),
/* 318 */
/*!*******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/nativescript/cache/sqlite.ts ***!
  \*******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(/*! ../../core/utils */ 2);
var errors_1 = __webpack_require__(/*! ../../core/errors */ 1);
var nativeScriptSQLite = __webpack_require__(/*! nativescript-sqlite */ 319);
var masterCollectionName = 'sqlite_master';
var isSupported;
var SQLiteAdapter = (function () {
    function SQLiteAdapter(name) {
        if (name === void 0) { name = 'kinvey'; }
        if (utils_1.isDefined(name) === false) {
            throw new Error('A name is required to use the SQLite adapter.');
        }
        if (typeof name !== 'string') {
            throw new Error('The name must be a string to use the SQLite adapter');
        }
        this.name = name;
    }
    SQLiteAdapter.prototype.openTransaction = function (collection, query, parameters, write) {
        if (write === void 0) { write = false; }
        var escapedCollection = "\"" + collection + "\"";
        var isMaster = collection === masterCollectionName;
        var isMulti = Array.isArray(query);
        query = isMulti ? query : [[query, parameters]];
        return new nativeScriptSQLite(this.name)
            .then(function (db) {
            // This will set the database to return the results as an array of objects
            db.resultType(nativeScriptSQLite.RESULTSASOBJECT);
            if (write && isMaster === false) {
                return db.execSQL("CREATE TABLE IF NOT EXISTS " + escapedCollection
                    + ' (key BLOB PRIMARY KEY NOT NULL, value BLOB NOT NULL)')
                    .then(function () { return db; });
            }
            return db;
        })
            .then(function (db) {
            var responses = [];
            if (query.length === 0) {
                return db.close()
                    .then(function () {
                    return isMulti ? responses : responses.shift();
                });
            }
            return query.reduce(function (prev, parts) {
                var sql = parts[0].replace('#{collection}', escapedCollection);
                return prev
                    .then(function () {
                    if (write === false) {
                        return db.all(sql, parts[1]);
                    }
                    return db.execSQL(sql, parts[1]);
                })
                    .then(function (resultSet) {
                    if (resultSet === void 0) { resultSet = []; }
                    if (write === false && Array.isArray(resultSet) && resultSet.length > 0) {
                        for (var i = 0, len = resultSet.length; i < len; i += 1) {
                            try {
                                var row = resultSet[i];
                                var entity = isMaster ? row.value : JSON.parse(row.value);
                                responses.push(entity);
                            }
                            catch (error) {
                                // Catch the error
                            }
                        }
                    }
                    else if (write === true) {
                        responses.push(resultSet);
                    }
                    return responses;
                });
            }, Promise.resolve())
                .then(function (response) {
                return db.close()
                    .then(function () { return response; });
            })
                .catch(function (error) {
                return db.close()
                    .then(function () {
                    throw error;
                });
            });
        });
    };
    SQLiteAdapter.prototype.find = function (collection) {
        var sql = 'SELECT value FROM #{collection}';
        return this.openTransaction(collection, sql, [])
            .catch(function () { return []; });
    };
    SQLiteAdapter.prototype.findById = function (collection, id) {
        var _this = this;
        var sql = 'SELECT value FROM #{collection} WHERE key = ?';
        return this.openTransaction(collection, sql, [id])
            .then(function (entities) {
            if (entities.length === 0) {
                throw new errors_1.NotFoundError("An entity with _id = " + id + " was not found in the " + collection
                    + (" collection on the " + _this.name + " SQLite database."));
            }
            return entities[0];
        })
            .catch(function () {
            throw new errors_1.NotFoundError("An entity with _id = " + id + " was not found in the " + collection
                + (" collection on the " + _this.name + " SQLite database."));
        });
    };
    SQLiteAdapter.prototype.save = function (collection, entities) {
        var queries = [];
        var singular = false;
        if (Array.isArray(entities) === false) {
            singular = true;
            entities = [entities];
        }
        if (entities.length === 0) {
            return Promise.resolve(null);
        }
        entities = entities.map(function (entity) {
            queries.push([
                'REPLACE INTO #{collection} (key, value) VALUES (?, ?)',
                [entity._id, JSON.stringify(entity)]
            ]);
            return entity;
        });
        return this.openTransaction(collection, queries, null, true)
            .then(function () { return (singular ? entities[0] : entities); });
    };
    SQLiteAdapter.prototype.removeById = function (collection, id) {
        var _this = this;
        var query = 'DELETE FROM #{collection} WHERE key = ?';
        return this.openTransaction(collection, query, [id], true)
            .then(function (response) {
            var count = response[0];
            if (count === 0) {
                var errMsg = "An entity with _id = " + id + " was not found in the " + collection + " collection on the " + _this.name + " SQLite database.";
                return Promise.reject(new errors_1.NotFoundError(errMsg));
            }
            return { count: count };
        });
    };
    SQLiteAdapter.prototype.clear = function () {
        var _this = this;
        return this.openTransaction(masterCollectionName, 'SELECT name AS value FROM #{collection} WHERE type = ?', ['table'], false)
            .then(function (tables) {
            // If there are no tables, return.
            if (tables.length === 0) {
                return null;
            }
            // Drop all tables. Filter tables first to avoid attempting to delete
            // system tables (which will fail).
            var queries = tables
                .filter(function (table) { return (/^[a-zA-Z0-9-]{1,128}/).test(table); })
                .map(function (table) { return ["DROP TABLE IF EXISTS '" + table + "'"]; });
            return _this.openTransaction(masterCollectionName, queries, null, true);
        })
            .then(function () { return null; });
    };
    return SQLiteAdapter;
}());
exports.sqLite = {
    load: function (name) {
        var db = new SQLiteAdapter(name);
        if (utils_1.isDefined(nativeScriptSQLite) === false) {
            return Promise.resolve(undefined);
        }
        if (utils_1.isDefined(isSupported)) {
            if (isSupported) {
                return Promise.resolve(db);
            }
            return Promise.resolve(undefined);
        }
        return db.save('__testSupport', { _id: '1' })
            .then(function () {
            isSupported = true;
            return db;
        })
            .catch(function () {
            isSupported = false;
            return undefined;
        });
    }
};


/***/ }),
/* 319 */
/*!**************************************!*\
  !*** external "nativescript-sqlite" ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = require("nativescript-sqlite");

/***/ }),
/* 320 */
/*!***********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/nativescript/http.ts ***!
  \***********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = __webpack_require__(/*! tns-core-modules/http */ 127);
var platform_1 = __webpack_require__(/*! tns-core-modules/platform */ 128);
var request_1 = __webpack_require__(/*! ../core/request */ 7);
function deviceInformation(pkg) {
    if (pkg === void 0) { pkg = {}; }
    var platform = platform_1.device.os;
    var version = platform_1.device.osVersion;
    var manufacturer = platform_1.device.manufacturer;
    var parts = ["js-" + pkg.name + "/" + pkg.version];
    return parts.concat([platform, version, manufacturer]).map(function (part) {
        if (part) {
            return part.toString().replace(/\s/g, '_').toLowerCase();
        }
        return 'unknown';
    }).join(' ');
}
var HttpMiddleware = (function (_super) {
    __extends(HttpMiddleware, _super);
    function HttpMiddleware(pkg) {
        var _this = _super.call(this) || this;
        _this.pkg = pkg;
        return _this;
    }
    HttpMiddleware.prototype.handle = function (request) {
        var url = request.url, method = request.method, headers = request.headers, body = request.body, timeout = request.timeout, followRedirect = request.followRedirect;
        headers['X-Kinvey-Device-Information'] = deviceInformation(this.pkg);
        var options = {
            method: method,
            headers: headers,
            url: url,
            content: body,
            timeout: timeout,
            dontFollowRedirects: !followRedirect
        };
        return http_1.request(options)
            .then(function (response) {
            var data = response.content.raw;
            try {
                data = response.content.toString();
            }
            catch (e) { }
            return {
                response: {
                    statusCode: response.statusCode,
                    headers: response.headers,
                    data: data
                }
            };
        });
    };
    HttpMiddleware.prototype.cancel = function () {
        return Promise.resolve();
    };
    return HttpMiddleware;
}(request_1.Middleware));
exports.HttpMiddleware = HttpMiddleware;


/***/ }),
/* 321 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/nativescript/popup/popup.ios.ts ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path="../../../../node_modules/tns-platform-declarations/ios.d.ts" />
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = __webpack_require__(/*! events */ 54);
var frameModule = __webpack_require__(/*! tns-core-modules/ui/frame */ 322);
var page_1 = __webpack_require__(/*! tns-core-modules/ui/page */ 323);
var grid_layout_1 = __webpack_require__(/*! tns-core-modules/ui/layouts/grid-layout */ 324);
var stack_layout_1 = __webpack_require__(/*! tns-core-modules/ui/layouts/stack-layout */ 325);
var web_view_1 = __webpack_require__(/*! tns-core-modules/ui/web-view */ 326);
/**
 * Implementation details have been copied from https://github.com/alexziskind1/nativescript-oauth.
 */
var OAuthWebViewHelper = (function (_super) {
    __extends(OAuthWebViewHelper, _super);
    function OAuthWebViewHelper() {
        return _super.call(this) || this;
    }
    OAuthWebViewHelper.initWithWebViewAndIntercept = function (wv, webViewIntercept) {
        wv._delegate = OAuthWebViewHelper.initWithOwner(new WeakRef(wv), webViewIntercept);
    };
    OAuthWebViewHelper.initWithOwner = function (owner, webViewIntercept) {
        var delegate = new OAuthWebViewHelper();
        delegate._owner = owner;
        delegate._origDelegate = owner.get()._delegate;
        delegate._webViewIntercept = webViewIntercept;
        return delegate;
    };
    OAuthWebViewHelper.prototype.webViewShouldStartLoadWithRequestNavigationType = function (webView, request, navigationType) {
        return this._origDelegate.webViewShouldStartLoadWithRequestNavigationType(webView, request, navigationType);
    };
    OAuthWebViewHelper.prototype.webViewDidStartLoad = function (webView) {
        this._origDelegate.webViewDidStartLoad(webView);
    };
    OAuthWebViewHelper.prototype.webViewDidFinishLoad = function (webView) {
        this._webViewIntercept(webView, null);
        this._origDelegate.webViewDidFinishLoad(webView);
    };
    OAuthWebViewHelper.prototype.webViewDidFailLoadWithError = function (webView, error) {
        this._webViewIntercept(webView, error);
        this._origDelegate.webViewDidFailLoadWithError(webView, error);
    };
    return OAuthWebViewHelper;
}(NSObject));
OAuthWebViewHelper.objCProtocols = [UIWebViewDelegate];
var OAuthPageProvider = (function () {
    function OAuthPageProvider(authUrl, webViewIntercept) {
        this._authUrl = authUrl;
        this._webViewIntercept = webViewIntercept;
    }
    OAuthPageProvider.prototype.createWebViewPage = function () {
        var webView = new web_view_1.WebView();
        OAuthWebViewHelper.initWithWebViewAndIntercept(webView, this._webViewIntercept);
        var grid = new grid_layout_1.GridLayout();
        grid.addChild(webView);
        var stack = new stack_layout_1.StackLayout();
        stack.addChild(grid);
        var page = new page_1.Page();
        page.content = stack;
        webView.src = this._authUrl;
        return page;
    };
    return OAuthPageProvider;
}());
var Popup = (function (_super) {
    __extends(Popup, _super);
    function Popup() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._open = false;
        return _this;
    }
    Popup.prototype.open = function (url) {
        var _this = this;
        if (url === void 0) { url = '/'; }
        if (this._open === false) {
            var webViewIntercept = function (webView, error, url) {
                var urlStr = '';
                try {
                    if (error && error.userInfo && error.userInfo.allValues && error.userInfo.allValues.count > 0) {
                        var val0 = error.userInfo.allValues[0];
                        if (val0.absoluteString) {
                            urlStr = val0.absoluteString;
                        }
                        else if (val0.userInfo && val0.userInfo.allValues && val0.userInfo.allValues.count > 0) {
                            urlStr = val0.userInfo.allValues[0];
                        }
                        else {
                            urlStr = val0;
                        }
                    }
                    else if (webView.request && webView.request.URL && webView.request.URL.absoluteString) {
                        urlStr = webView.request.URL.absoluteString;
                    }
                    else if (url) {
                        urlStr = url;
                    }
                }
                catch (ex) {
                    // Just catch the exception
                }
                _this.emit('loadstop', { url: urlStr });
                return true;
            };
            var authPage_1 = new OAuthPageProvider(url, webViewIntercept);
            frameModule.topmost().navigate(function () { return authPage_1.createWebViewPage(); });
            this._open = true;
        }
        return this;
    };
    Popup.prototype.close = function () {
        if (this._open) {
            frameModule.topmost().goBack();
            this._open = false;
        }
        return this;
    };
    return Popup;
}(events_1.EventEmitter));
exports.Popup = Popup;


/***/ }),
/* 322 */
/*!***************************!*\
  !*** external "ui/frame" ***!
  \***************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = require("ui/frame");

/***/ }),
/* 323 */
/*!**************************!*\
  !*** external "ui/page" ***!
  \**************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = require("ui/page");

/***/ }),
/* 324 */
/*!*****************************************!*\
  !*** external "ui/layouts/grid-layout" ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = require("ui/layouts/grid-layout");

/***/ }),
/* 325 */
/*!******************************************!*\
  !*** external "ui/layouts/stack-layout" ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = require("ui/layouts/stack-layout");

/***/ }),
/* 326 */
/*!******************************!*\
  !*** external "ui/web-view" ***!
  \******************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = require("ui/web-view");

/***/ }),
/* 327 */
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = {"private":true,"version":"3.9.6","name":"kinvey-nativescript-sdk","description":"Kinvey NativeScript SDK for developing NativeScript applications.","author":"Kinvey, Inc.","homepage":"http://www.kinvey.com","license":"Apache-2.0","main":"kinvey-nativescript-sdk.js","typings":"kinvey.d.ts","dependencies":{"nativescript-sqlite":"~1.1.11","rxjs":"~5.5.5"},"scripts":{"prebuild":"rm -rf dist","build":"npm run build:android && npm run build:ios","build:android":"webpack --config webpack.config.js --env.android","build:ios":"webpack --config webpack.config.js --env.ios","lint":"tslint **/*.ts --exclude **/node_modules/**/* --exclude **/*.d.ts","release":"npm run build -- --env.uglify","release:android":"npm run build:android -- --env.uglify","release:ios":"npm run build:ios -- --env.uglify","postrelease":"rm -rf tmp"},"files":["kinvey-nativescript-sdk.ios.js","kinvey-nativescript-sdk.ios.js.map","kinvey-nativescript-sdk.android.js","kinvey-nativescript-sdk.android.js.map","kinvey.d.ts","platforms/android/include.gradle","platforms/ios/Podfile"],"nativescript":{"platforms":{"ios":"3.0.0","android":"3.0.0"}}}

/***/ }),
/* 328 */
/*!****************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/index.js ***!
  \****************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _kinvey = __webpack_require__(/*! ./kinvey */ 329);

Object.defineProperty(exports, 'client', {
  enumerable: true,
  get: function get() {
    return _kinvey.client;
  }
});
Object.defineProperty(exports, 'getAppVersion', {
  enumerable: true,
  get: function get() {
    return _kinvey.getAppVersion;
  }
});
Object.defineProperty(exports, 'setAppVersion', {
  enumerable: true,
  get: function get() {
    return _kinvey.setAppVersion;
  }
});
Object.defineProperty(exports, 'init', {
  enumerable: true,
  get: function get() {
    return _kinvey.init;
  }
});
Object.defineProperty(exports, 'initialize', {
  enumerable: true,
  get: function get() {
    return _kinvey.initialize;
  }
});
Object.defineProperty(exports, 'ping', {
  enumerable: true,
  get: function get() {
    return _kinvey.ping;
  }
});

var _acl = __webpack_require__(/*! ./acl */ 141);

Object.defineProperty(exports, 'Acl', {
  enumerable: true,
  get: function get() {
    return _acl.Acl;
  }
});

var _aggregation = __webpack_require__(/*! ./aggregation */ 27);

Object.defineProperty(exports, 'Aggregation', {
  enumerable: true,
  get: function get() {
    return _aggregation.Aggregation;
  }
});

var _identity = __webpack_require__(/*! ./identity */ 58);

Object.defineProperty(exports, 'AuthorizationGrant', {
  enumerable: true,
  get: function get() {
    return _identity.AuthorizationGrant;
  }
});

var _endpoint = __webpack_require__(/*! ./endpoint */ 403);

Object.defineProperty(exports, 'CustomEndpoint', {
  enumerable: true,
  get: function get() {
    return _endpoint.CustomEndpoint;
  }
});

var _datastore = __webpack_require__(/*! ./datastore */ 55);

Object.defineProperty(exports, 'DataStore', {
  enumerable: true,
  get: function get() {
    return _datastore.DataStore;
  }
});
Object.defineProperty(exports, 'DataStoreType', {
  enumerable: true,
  get: function get() {
    return _datastore.DataStoreType;
  }
});
Object.defineProperty(exports, 'SyncOperation', {
  enumerable: true,
  get: function get() {
    return _datastore.SyncOperation;
  }
});

var _live = __webpack_require__(/*! ./live */ 89);

Object.defineProperty(exports, 'LiveService', {
  enumerable: true,
  get: function get() {
    return _live.LiveService;
  }
});

var _files = __webpack_require__(/*! ./files */ 404);

Object.defineProperty(exports, 'Files', {
  enumerable: true,
  get: function get() {
    return _files.Files;
  }
});

var _log = __webpack_require__(/*! ./log */ 21);

Object.defineProperty(exports, 'Log', {
  enumerable: true,
  get: function get() {
    return _log.Log;
  }
});

var _metadata = __webpack_require__(/*! ./metadata */ 85);

Object.defineProperty(exports, 'Metadata', {
  enumerable: true,
  get: function get() {
    return _metadata.Metadata;
  }
});

var _query = __webpack_require__(/*! ./query */ 12);

Object.defineProperty(exports, 'Query', {
  enumerable: true,
  get: function get() {
    return _query.Query;
  }
});

var _request = __webpack_require__(/*! ./request */ 7);

Object.defineProperty(exports, 'Properties', {
  enumerable: true,
  get: function get() {
    return _request.Properties;
  }
});

var _user = __webpack_require__(/*! ./user */ 82);

Object.defineProperty(exports, 'User', {
  enumerable: true,
  get: function get() {
    return _user.User;
  }
});

var _errors = __webpack_require__(/*! ./errors */ 1);

Object.defineProperty(exports, 'ActiveUserError', {
  enumerable: true,
  get: function get() {
    return _errors.ActiveUserError;
  }
});
Object.defineProperty(exports, 'APIVersionNotAvailableError', {
  enumerable: true,
  get: function get() {
    return _errors.APIVersionNotAvailableError;
  }
});
Object.defineProperty(exports, 'APIVersionNotImplementedError', {
  enumerable: true,
  get: function get() {
    return _errors.APIVersionNotImplementedError;
  }
});
Object.defineProperty(exports, 'AppProblemError', {
  enumerable: true,
  get: function get() {
    return _errors.AppProblemError;
  }
});
Object.defineProperty(exports, 'BadRequestError', {
  enumerable: true,
  get: function get() {
    return _errors.BadRequestError;
  }
});
Object.defineProperty(exports, 'BLError', {
  enumerable: true,
  get: function get() {
    return _errors.BLError;
  }
});
Object.defineProperty(exports, 'CORSDisabledError', {
  enumerable: true,
  get: function get() {
    return _errors.CORSDisabledError;
  }
});
Object.defineProperty(exports, 'DuplicateEndUsersError', {
  enumerable: true,
  get: function get() {
    return _errors.DuplicateEndUsersError;
  }
});
Object.defineProperty(exports, 'FeatureUnavailableError', {
  enumerable: true,
  get: function get() {
    return _errors.FeatureUnavailableError;
  }
});
Object.defineProperty(exports, 'IncompleteRequestBodyError', {
  enumerable: true,
  get: function get() {
    return _errors.IncompleteRequestBodyError;
  }
});
Object.defineProperty(exports, 'IndirectCollectionAccessDisallowedError', {
  enumerable: true,
  get: function get() {
    return _errors.IndirectCollectionAccessDisallowedError;
  }
});
Object.defineProperty(exports, 'InsufficientCredentialsError', {
  enumerable: true,
  get: function get() {
    return _errors.InsufficientCredentialsError;
  }
});
Object.defineProperty(exports, 'InvalidCredentialsError', {
  enumerable: true,
  get: function get() {
    return _errors.InvalidCredentialsError;
  }
});
Object.defineProperty(exports, 'InvalidIdentifierError', {
  enumerable: true,
  get: function get() {
    return _errors.InvalidIdentifierError;
  }
});
Object.defineProperty(exports, 'InvalidQuerySyntaxError', {
  enumerable: true,
  get: function get() {
    return _errors.InvalidQuerySyntaxError;
  }
});
Object.defineProperty(exports, 'JSONParseError', {
  enumerable: true,
  get: function get() {
    return _errors.JSONParseError;
  }
});
Object.defineProperty(exports, 'KinveyError', {
  enumerable: true,
  get: function get() {
    return _errors.KinveyError;
  }
});
Object.defineProperty(exports, 'KinveyInternalErrorRetry', {
  enumerable: true,
  get: function get() {
    return _errors.KinveyInternalErrorRetry;
  }
});
Object.defineProperty(exports, 'KinveyInternalErrorStop', {
  enumerable: true,
  get: function get() {
    return _errors.KinveyInternalErrorStop;
  }
});
Object.defineProperty(exports, 'MissingQueryError', {
  enumerable: true,
  get: function get() {
    return _errors.MissingQueryError;
  }
});
Object.defineProperty(exports, 'MissingRequestHeaderError', {
  enumerable: true,
  get: function get() {
    return _errors.MissingRequestHeaderError;
  }
});
Object.defineProperty(exports, 'MissingRequestParameterError', {
  enumerable: true,
  get: function get() {
    return _errors.MissingRequestParameterError;
  }
});
Object.defineProperty(exports, 'MobileIdentityConnectError', {
  enumerable: true,
  get: function get() {
    return _errors.MobileIdentityConnectError;
  }
});
Object.defineProperty(exports, 'NoActiveUserError', {
  enumerable: true,
  get: function get() {
    return _errors.NoActiveUserError;
  }
});
Object.defineProperty(exports, 'NetworkConnectionError', {
  enumerable: true,
  get: function get() {
    return _errors.NetworkConnectionError;
  }
});
Object.defineProperty(exports, 'NoResponseError', {
  enumerable: true,
  get: function get() {
    return _errors.NoResponseError;
  }
});
Object.defineProperty(exports, 'NotFoundError', {
  enumerable: true,
  get: function get() {
    return _errors.NotFoundError;
  }
});
Object.defineProperty(exports, 'ParameterValueOutOfRangeError', {
  enumerable: true,
  get: function get() {
    return _errors.ParameterValueOutOfRangeError;
  }
});
Object.defineProperty(exports, 'PopupError', {
  enumerable: true,
  get: function get() {
    return _errors.PopupError;
  }
});
Object.defineProperty(exports, 'QueryError', {
  enumerable: true,
  get: function get() {
    return _errors.QueryError;
  }
});
Object.defineProperty(exports, 'ServerError', {
  enumerable: true,
  get: function get() {
    return _errors.ServerError;
  }
});
Object.defineProperty(exports, 'StaleRequestError', {
  enumerable: true,
  get: function get() {
    return _errors.StaleRequestError;
  }
});
Object.defineProperty(exports, 'SyncError', {
  enumerable: true,
  get: function get() {
    return _errors.SyncError;
  }
});
Object.defineProperty(exports, 'TimeoutError', {
  enumerable: true,
  get: function get() {
    return _errors.TimeoutError;
  }
});
Object.defineProperty(exports, 'UserAlreadyExistsError', {
  enumerable: true,
  get: function get() {
    return _errors.UserAlreadyExistsError;
  }
});
Object.defineProperty(exports, 'WritesToCollectionDisallowedError', {
  enumerable: true,
  get: function get() {
    return _errors.WritesToCollectionDisallowedError;
  }
});

/***/ }),
/* 329 */
/*!*****************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/kinvey.js ***!
  \*****************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.client = undefined;
exports.getAppVersion = getAppVersion;
exports.setAppVersion = setAppVersion;
exports.init = init;
exports.initialize = initialize;
exports.ping = ping;

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _errors = __webpack_require__(/*! ./errors */ 1);

var _utils = __webpack_require__(/*! ./utils */ 2);

var _client = __webpack_require__(/*! ./client */ 10);

var _user = __webpack_require__(/*! ./user */ 82);

var _request = __webpack_require__(/*! ./request */ 7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Returns the shared instance of the Client class used by the SDK.
 *
 * @throws {KinveyError} If a shared instance does not exist.
 *
 * @return {Client} The shared instance.
 *
 * @example
 * var client = Kinvey.client;
 */
function getClient() {
  return _client.Client.sharedInstance();
}
exports.client = getClient;

/**
 * The version of your app. It will sent with Kinvey API requests
 * using the X-Kinvey-Api-Version header.
 *
 * @return {String} The version of your app.
 *
 * @example
 * var appVersion = Kinvey.appVersion;
 */

function getAppVersion() {
  var client = getClient();

  if (client) {
    return client.appVersion;
  }

  return undefined;
}

/**
 * Set the version of your app. It will sent with Kinvey API requests
 * using the X-Kinvey-Api-Version header.
 *
 * @param  {String} appVersion  App version.
 *
 * @example
 * Kinvey.appVersion = '1.0.0';
 * // or
 * Kinvey.appVersion = 'v1';
 */
function setAppVersion(appVersion) {
  var client = getClient();

  if (client) {
    client.appVersion = appVersion;
  }
}

/**
 * Initializes the SDK with your app's configuration.
 *
 * @param {Object}    options                                            Options
 * @param {string}    [options.apiHostname='https://baas.kinvey.com']    Host name used for Kinvey API requests
 * @param {string}    [options.micHostname='https://auth.kinvey.com']    Host name used for Kinvey MIC requests
 * @param {string}    [options.appKey]                                   App Key
 * @param {string}    [options.appSecret]                                App Secret
 * @param {string}    [options.masterSecret]                             App Master Secret
 * @param {string}    [options.encryptionKey]                            App Encryption Key
 * @param {string}    [options.appVersion]                               App Version
 * @return {Promise}                                                     A promise.
 *
 * @throws  {KinveyError}  If an `options.appKey` is not provided.
 * @throws  {KinveyError}  If neither an `options.appSecret` or `options.masterSecret` is provided.
 */
function init() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  // Check that an appKey or appId was provided
  if ((0, _utils.isDefined)(options.appKey) === false) {
    throw new _errors.KinveyError('No App Key was provided.' + ' Unable to create a new Client without an App Key.');
  }

  // Check that an appSecret or masterSecret was provided
  if ((0, _utils.isDefined)(options.appSecret) === false && (0, _utils.isDefined)(options.masterSecret) === false) {
    throw new _errors.KinveyError('No App Secret or Master Secret was provided.' + ' Unable to create a new Client without an App Secret.');
  }

  // Initialize the client
  return _client.Client.init(options);
}

/**
 * Initializes the SDK with your app's information. The SDK is initialized when the returned
 * promise resolves.
 *
 * @param {Object}    options                                            Options
 * @param {string}    [options.apiHostname='https://baas.kinvey.com']    Host name used for Kinvey API requests
 * @param {string}    [options.micHostname='https://auth.kinvey.com']    Host name used for Kinvey MIC requests
 * @param {string}    [options.appKey]                                   App Key
 * @param {string}    [options.appSecret]                                App Secret
 * @param {string}    [options.masterSecret]                             App Master Secret
 * @param {string}    [options.encryptionKey]                            App Encryption Key
 * @param {string}    [options.appVersion]                               App Version
 * @return {Promise}                                                     A promise.
 *
 * @throws  {KinveyError}  If an `options.appKey` is not provided.
 * @throws  {KinveyError}  If neither an `options.appSecret` or `options.masterSecret` is provided.
 *
 * @deprecated Please use Kinvey.init().
 */
function initialize(config) {
  try {
    var client = init(config);
    return _es6Promise2.default.resolve(_user.User.getActiveUser(client));
  } catch (error) {
    return _es6Promise2.default.reject(error);
  }
}

/**
 * Pings the Kinvey API service.
 *
 * @returns {Promise<Object>} The response from the ping request.
 *
 * @example
 * var promise = Kinvey.ping().then(function(response) {
 *   console.log('Kinvey Ping Success. Kinvey Service is alive, version: ' + response.version + ', response: ' + response.kinvey);
 * }).catch(function(error) {
 *   console.log('Kinvey Ping Failed. Response: ' + error.description);
 * });
 */
function ping() {
  var client = getClient();
  var request = new _request.KinveyRequest({
    method: _request.RequestMethod.GET,
    authType: _request.AuthType.All,
    url: client.apiHostname + '/appdata/' + client.appKey
  });

  return request.execute().then(function (response) {
    return response.data;
  });
}

/***/ }),
/* 330 */
/*!********************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/user/user.js ***!
  \********************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.User = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _assign = __webpack_require__(/*! lodash/assign */ 17);

var _assign2 = _interopRequireDefault(_assign);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _isObject = __webpack_require__(/*! lodash/isObject */ 14);

var _isObject2 = _interopRequireDefault(_isObject);

var _isEmpty = __webpack_require__(/*! lodash/isEmpty */ 47);

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _client = __webpack_require__(/*! ../client */ 10);

var _request = __webpack_require__(/*! ../request */ 7);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _datastore = __webpack_require__(/*! ../datastore */ 55);

var _identity = __webpack_require__(/*! ../identity */ 58);

var _log = __webpack_require__(/*! ../log */ 21);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _acl = __webpack_require__(/*! ../acl */ 141);

var _metadata = __webpack_require__(/*! ../metadata */ 85);

var _live = __webpack_require__(/*! ../live */ 89);

var _userstore = __webpack_require__(/*! ./userstore */ 402);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * The User class is used to represent a single user on the Kinvey platform.
 * Use the user class to manage the active user lifecycle and perform user operations.
 */
var User = exports.User = function () {
  /**
   * Create a new instance of a User.
   *
   * @param {Object} [data={}] Data for the user.
   * @param {Object} [options={}] Options.
   * @return {User} User
   */
  function User() {
    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, User);

    /**
     * The users data.
     *
     * @type {Object}
     */
    this.data = data;

    /**
     * @private
     * The client used by this user.
     *
     * @type {Client}
     */
    this.client = options.client || _client.Client.sharedInstance();
  }

  /**
   * The _id for the user.
   *
   * @return {?string} _id
   */


  _createClass(User, [{
    key: 'isActive',


    /**
     * Checks if the user is the active user.
     *
     * @return {boolean} True the user is the active user otherwise false.
     */
    value: function isActive() {
      var activeUser = User.getActiveUser(this.client);

      if ((0, _utils.isDefined)(activeUser) && activeUser._id === this._id) {
        return true;
      }

      return false;
    }

    /**
     * Checks if the users email is verfified.
     *
     * @return {boolean} True if the users email is verified otherwise false.
     */

  }, {
    key: 'isEmailVerified',
    value: function isEmailVerified() {
      var status = this.metadata.emailVerification;
      return status === 'confirmed';
    }

    /**
     * Login using a username or password.
     *
     * @param {string|Object} username Username or an object with username and password as properties.
     * @param {string} [password] Password
     * @param {Object} [options={}] Options
     * @return {Promise<User>} The user.
     */

  }, {
    key: 'login',
    value: function login(username, password) {
      var _this = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var credentials = username;
      var isActive = this.isActive();
      var activeUser = User.getActiveUser(this.client);

      if (isActive === true) {
        return _es6Promise2.default.reject(new _errors.ActiveUserError('This user is already the active user.'));
      }

      if ((0, _utils.isDefined)(activeUser)) {
        return _es6Promise2.default.reject(new _errors.ActiveUserError('An active user already exists. Please logout the active user before you login.'));
      }

      if ((0, _isObject2.default)(credentials)) {
        options = password || {};
      } else {
        credentials = {
          username: username,
          password: password
        };
      }

      if ((0, _utils.isDefined)(credentials.username)) {
        credentials.username = String(credentials.username).trim();
      }

      if ((0, _utils.isDefined)(credentials.password)) {
        credentials.password = String(credentials.password).trim();
      }

      if ((!(0, _utils.isDefined)(credentials.username) || credentials.username === '' || !(0, _utils.isDefined)(credentials.password) || credentials.password === '') && !(0, _utils.isDefined)(credentials._socialIdentity)) {
        return _es6Promise2.default.reject(new _errors.KinveyError('Username and/or password missing. Please provide both a username and password to login.'));
      }

      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        authType: _request.AuthType.App,
        url: _url2.default.format({
          protocol: this.client.apiProtocol,
          host: this.client.apiHost,
          pathname: this.pathname + '/login'
        }),
        body: credentials,
        properties: options.properties,
        timeout: options.timeout,
        client: this.client
      });

      return request.execute().then(function (response) {
        return response.data;
      }).then(function (data) {
        if ((0, _utils.isDefined)(credentials._socialIdentity) && (0, _utils.isDefined)(data._socialIdentity)) {
          var identities = Object.keys(data._socialIdentity);
          identities.forEach(function (identity) {
            data._socialIdentity[identity] = (0, _assign2.default)({}, credentials._socialIdentity[identity], data._socialIdentity[identity]);
          });
          data._socialIdentity = (0, _assign2.default)({}, credentials._socialIdentity, data._socialIdentity);
        }

        // Remove sensitive data
        delete data.password;

        // Store the active user
        return _this.client.setActiveUser(data);
      }).then(function (data) {
        _this.data = data;
        return _this;
      });
    }

    /**
     * Login using a username or password.
     *
     * @param {string|Object} username Username or an object with username and password as properties.
     * @param {string} [password] Password
     * @param {Object} [options={}] Options
     * @return {Promise<User>} The user.
     */

  }, {
    key: 'loginWithMIC',


    /**
     * Login using Mobile Identity Connect.
     *
     * @param {string} redirectUri The redirect uri.
     * @param {AuthorizationGrant} [authorizationGrant=AuthoizationGrant.AuthorizationCodeLoginPage] MIC authorization grant to use.
     * @param {Object} [options] Options
     * @return {Promise<User>} The user.
     */
    value: function loginWithMIC(redirectUri, authorizationGrant) {
      var _this2 = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var isActive = this.isActive();
      var activeUser = User.getActiveUser(this.client);

      if (isActive) {
        return _es6Promise2.default.reject(new _errors.ActiveUserError('This user is already the active user.'));
      }

      if ((0, _utils.isDefined)(activeUser)) {
        return _es6Promise2.default.reject(new _errors.ActiveUserError('An active user already exists. Please logout the active user before you login.'));
      }

      var mic = new _identity.MobileIdentityConnect({ client: this.client });
      return mic.login(redirectUri, authorizationGrant, options).then(function (session) {
        return _this2.connectIdentity(_identity.MobileIdentityConnect.identity, session, options);
      });
    }

    /**
     * Login using Mobile Identity Connect.
     *
     * @param {string} redirectUri The redirect uri.
     * @param {AuthorizationGrant} [authorizationGrant=AuthoizationGrant.AuthorizationCodeLoginPage] MIC authorization grant to use.
     * @param {Object} [options] Options
     * @return {Promise<User>} The user.
     */

  }, {
    key: 'connectIdentity',


    /**
     * Connect a social identity.
     *
     * @param {string} identity Social identity.
     * @param {Object} session Social identity session.
     * @param {Object} [options] Options
     * @return {Promise<User>} The user.
     */
    value: function connectIdentity(identity, session) {
      var _this3 = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var isActive = this.isActive();
      var data = {};
      var socialIdentity = data._socialIdentity || {};
      socialIdentity[identity] = session;
      data._socialIdentity = socialIdentity;

      if (isActive) {
        return this.update(data, options);
      }

      return this.login(data, options).catch(function (error) {
        if (error instanceof _errors.NotFoundError) {
          return _this3.signup(data, options).then(function () {
            return _this3.connectIdentity(identity, session, options);
          });
        }

        throw error;
      });
    }

    /**
     * Connect a social identity.
     *
     * @param {string} identity Social identity.
     * @param {Object} session Social identity session.
     * @param {Object} [options] Options
     * @return {Promise<User>} The user.
     */

  }, {
    key: 'disconnectIdentity',


    /**
     * @private
     * Disconnects the user from  an identity.
     *
     * @param {SocialIdentity|string} identity Identity used to connect the user.
     * @param  {Object} [options] Options
     * @return {Promise<User>} The user.
     */
    value: function disconnectIdentity(identity) {
      var _this4 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var promise = _es6Promise2.default.resolve();

      if (identity === _identity.MobileIdentityConnect.identity) {
        promise = _identity.MobileIdentityConnect.logout(this, options);
      }

      return promise.catch(function (error) {
        _log.Log.error(error);
      }).then(function () {
        var data = _this4.data;
        var socialIdentity = data._socialIdentity || {};
        delete socialIdentity[identity];
        data._socialIdentity = socialIdentity;
        _this4.data = data;

        if (!_this4._id) {
          return _this4;
        }

        return _this4.update(data, options);
      }).then(function () {
        return _this4;
      });
    }

    /**
     * Logout the active user.
     *
     * @param {Object} [options={}] Options
     * @return {Promise<User>} The user.
     */

  }, {
    key: 'logout',
    value: function logout() {
      var _this5 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      // Logout from  Kinvey
      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        authType: _request.AuthType.Session,
        url: _url2.default.format({
          protocol: this.client.apiProtocol,
          host: this.client.apiHost,
          pathname: this.pathname + '/_logout'
        }),
        properties: options.properties,
        timeout: options.timeout,
        client: this.client
      });

      return this.unregisterFromLiveService().then(function () {
        return request.execute();
      }).catch(function (error) {
        _log.Log.error(error);
        return null;
      }).then(function () {
        return _this5.client.setActiveUser(null);
      }).catch(function (error) {
        _log.Log.error(error);
        return null;
      }).then(function () {
        return _datastore.DataStore.clearCache({ client: _this5.client });
      }).catch(function (error) {
        _log.Log.error(error);
        return null;
      }).then(function () {
        return _this5;
      });
    }

    /**
     * Logout the active user.
     *
     * @param {Object} [options={}] Options
     * @return {Promise<User>} The user.
     */

  }, {
    key: 'signup',


    /**
     * Sign up a user with Kinvey.
     *
     * @param {?User|?Object} data Users data.
     * @param {Object} [options] Options
     * @param {boolean} [options.state=true] If set to true, the user will be set as the active user after successfully
     *                                       being signed up.
     * @return {Promise<User>} The user.
     */
    value: function signup(data) {
      var _this6 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var activeUser = User.getActiveUser(this.client);
      options = (0, _assign2.default)({
        state: true
      }, options);

      if (options.state === true && (0, _utils.isDefined)(activeUser)) {
        throw new _errors.ActiveUserError('An active user already exists. Please logout the active user before you login.');
      }

      if (data instanceof User) {
        data = data.data;
      }

      // Merge the data
      data = (0, _assign2.default)(this.data, data);

      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        authType: _request.AuthType.App,
        url: _url2.default.format({
          protocol: this.client.apiProtocol,
          host: this.client.apiHost,
          pathname: this.pathname
        }),
        body: (0, _isEmpty2.default)(data) ? null : data,
        properties: options.properties,
        timeout: options.timeout,
        client: this.client
      });

      return request.execute().then(function (response) {
        return response.data;
      }).then(function (data) {
        if (options.state === true) {
          return _this6.client.setActiveUser(data);
        }

        return data;
      }).then(function (data) {
        _this6.data = data;
        return _this6;
      });
    }

    /**
     * Sign up a user with Kinvey.
     *
     * @param {User|Object} data Users data.
     * @param {Object} [options] Options
     * @param {boolean} [options.state=true] If set to true, the user will be set as the active user after successfully
     *                                       being signed up.
     * @return {Promise<User>} The user.
     */

  }, {
    key: 'signupWithIdentity',


    /**
     * Sign up a user with Kinvey using an identity.
     *
     * @param {SocialIdentity|string} identity The identity.
     * @param {Object} session Identity session
     * @param {Object} [options] Options
     * @param {boolean} [options.state=true] If set to true, the user will be set as the active user after successfully
     *                                       being signed up.
     * @return {Promise<User>} The user.
     */
    value: function signupWithIdentity(identity, session) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var data = {};
      data._socialIdentity = {};
      data._socialIdentity[identity] = session;
      return this.signup(data, options);
    }

    /**
     * Sign up a user with Kinvey using an identity.
     *
     * @param {SocialIdentity|string} identity The identity.
     * @param {Object} session Identity session
     * @param {Object} [options] Options
     * @param {boolean} [options.state=true] If set to true, the user will be set as the active user after successfully
     *                                       being signed up.
     * @return {Promise<User>} The user.
     */

  }, {
    key: 'update',


    /**
     * Update the users data.
     *
     * @param {Object} data Data.
     * @param {Object} [options] Options
     * @return {Promise<User>} The user.
     */
    value: function update(data) {
      var _this7 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      data = (0, _assign2.default)(this.data, data);
      var store = new _userstore.UserStore();
      return store.update(data, options).then(function (data) {
        if (_this7.isActive()) {
          return _this7.client.setActiveUser(data);
        }

        return data;
      }).then(function (data) {
        _this7.data = data;
        return _this7;
      });
    }

    /**
     * Update the active user.
     *
     * @param {Object} data Data.
     * @param {Object} [options] Options
     * @return {Promise<User>} The user.
     */

  }, {
    key: 'me',


    /**
     * Retfresh the users data.
     *
     * @param {Object} [options={}] Options
     * @return {Promise<User>} The user.
     */
    value: function me() {
      var _this8 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.GET,
        authType: _request.AuthType.Session,
        url: _url2.default.format({
          protocol: this.client.apiProtocol,
          host: this.client.apiHost,
          pathname: this.pathname + '/_me'
        }),
        properties: options.properties,
        timeout: options.timeout
      });

      return request.execute().then(function (response) {
        return response.data;
      }).then(function (data) {
        // Merge returned data
        data = (0, _assign2.default)(_this8.data, data);

        // Remove sensitive data
        delete data.password;

        // Store the active user
        if (_this8.isActive()) {
          return _this8.client.setActiveUser(data);
        }

        return data;
      }).then(function (data) {
        _this8.data = data;
        return _this8;
      });
    }

    /**
     * @returns {Promise}
     */

  }, {
    key: 'registerForLiveService',
    value: function registerForLiveService() {
      var liveService = (0, _live.getLiveService)(this.client);
      var promise = _es6Promise2.default.resolve();
      if (!liveService.isInitialized()) {
        promise = liveService.fullInitialization(this);
      }
      return promise;
    }
  }, {
    key: 'unregisterFromLiveService',
    value: function unregisterFromLiveService() {
      var liveService = (0, _live.getLiveService)(this.client);
      var promise = _es6Promise2.default.resolve();
      if (liveService.isInitialized()) {
        promise = liveService.fullUninitialization();
      }
      return promise;
    }

    /**
     * Refresh the active user.
     *
     * @param {Object} [options={}] Options
     * @return {Promise<User>} The user.
     */

  }, {
    key: '_id',
    get: function get() {
      return this.data._id;
    }

    /**
     * The _acl for the user.
     *
     * @return {Acl} _acl
     */

  }, {
    key: '_acl',
    get: function get() {
      return new _acl.Acl(this.data);
    }

    /**
     * The metadata for the user.
     *
     * @return {Metadata} metadata
     */

  }, {
    key: 'metadata',
    get: function get() {
      return new _metadata.Metadata(this.data);
    }

    /**
     * The _kmd for the user.
     *
     * @return {Metadata} _kmd
     */

  }, {
    key: '_kmd',
    get: function get() {
      return this.metadata;
    }

    /**
     * The _socialIdentity for the user.
     *
     * @return {Object} _socialIdentity
     */

  }, {
    key: '_socialIdentity',
    get: function get() {
      return this.data._socialIdentity;
    }

    /**
     * The auth token for the user.
     *
     * @return {?string} Auth token
     */

  }, {
    key: 'authtoken',
    get: function get() {
      return this.metadata.authtoken;
    }

    /**
     * The username for the user.
     *
     * @return {?string} Username
     */

  }, {
    key: 'username',
    get: function get() {
      return this.data.username;
    }

    /**
     * The email for the user.
     *
     * @return {?string} Email
     */

  }, {
    key: 'email',
    get: function get() {
      return this.data.email;
    }

    /**
     * @private
     */

  }, {
    key: 'pathname',
    get: function get() {
      return '/user/' + this.client.appKey;
    }
  }], [{
    key: 'login',
    value: function login(username, password) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var user = new User({}, options);
      return user.login(username, password, options);
    }
  }, {
    key: 'loginWithMIC',
    value: function loginWithMIC(redirectUri, authorizationGrant) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var user = new this({}, options);
      return user.loginWithMIC(redirectUri, authorizationGrant, options);
    }
  }, {
    key: 'connectIdentity',
    value: function connectIdentity(identity, session) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var user = new this({}, options);
      return user.connectIdentity(identity, session, options);
    }
  }, {
    key: 'logout',
    value: function logout() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var activeUser = User.getActiveUser(options.client);

      if ((0, _utils.isDefined)(activeUser)) {
        return activeUser.logout(options);
      }

      return _es6Promise2.default.resolve(null);
    }
  }, {
    key: 'signup',
    value: function signup(data) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var user = new this({}, options);
      return user.signup(data, options);
    }
  }, {
    key: 'signupWithIdentity',
    value: function signupWithIdentity(identity, session) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var user = new this({}, options);
      return user.signupWithIdentity(identity, session, options);
    }
  }, {
    key: 'update',
    value: function update(data) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var activeUser = User.getActiveUser(options.client);

      if ((0, _utils.isDefined)(activeUser)) {
        return activeUser.update(data, options);
      }

      return _es6Promise2.default.resolve(null);
    }
  }, {
    key: 'registerForLiveService',
    value: function registerForLiveService() {
      var activeUser = User.getActiveUser();

      if (activeUser) {
        return activeUser.registerForLiveService();
      }

      return _es6Promise2.default.reject(new _errors.ActiveUserError('There is no active user'));
    }

    /**
     * @returns {Promise}
     */

  }, {
    key: 'unregisterFromLiveService',
    value: function unregisterFromLiveService() {
      var activeUser = User.getActiveUser();

      if (activeUser) {
        return activeUser.unregisterFromLiveService();
      }

      return _es6Promise2.default.reject(new _errors.ActiveUserError('There is no active user'));
    }
  }, {
    key: 'me',
    value: function me() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var activeUser = User.getActiveUser(options.client);

      if (activeUser) {
        return activeUser.me(options);
      }

      return _es6Promise2.default.resolve(null);
    }

    /**
     * Gets the active user. You can optionally provide a client
     * to use to lookup the active user.
     *
     * @param {Client} [client=Client.sharedInstance()] Client to use to lookup active user.
     * @return {?User} The active user.
     */

  }, {
    key: 'getActiveUser',
    value: function getActiveUser() {
      var client = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _client.Client.sharedInstance();

      var data = client.getActiveUser();

      if ((0, _utils.isDefined)(data)) {
        return new this(data, { client: client });
      }

      return null;
    }

    /**
     * Request an email to be sent to verify the users email.
     *
     * @param {string} username Username
     * @param {Object} [options={}] Options
     * @return {Promise<Object>} The response.
     */

  }, {
    key: 'verifyEmail',
    value: function verifyEmail(username) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!username) {
        return _es6Promise2.default.reject(new _errors.KinveyError('A username was not provided.', 'Please provide a username for the user that you would like to verify their email.'));
      }

      if (!(0, _isString2.default)(username)) {
        return _es6Promise2.default.reject(new _errors.KinveyError('The provided username is not a string.'));
      }

      var client = options.client || _client.Client.sharedInstance();
      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        authType: _request.AuthType.App,
        url: _url2.default.format({
          protocol: client.apiProtocol,
          host: client.apiHost,
          pathname: '/rpc/' + client.appKey + '/' + username + '/user-email-verification-initiate'
        }),
        properties: options.properties,
        timeout: options.timeout,
        client: client
      });
      return request.execute().then(function (response) {
        return response.data;
      });
    }

    /**
     * Request an email to be sent to recover a forgot username.
     *
     * @param {string} email Email
     * @param {Object} [options={}] Options
     * @return {Promise<Object>} The response.
     */

  }, {
    key: 'forgotUsername',
    value: function forgotUsername(email) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!email) {
        return _es6Promise2.default.reject(new _errors.KinveyError('An email was not provided.', 'Please provide an email for the user that you would like to retrieve their username.'));
      }

      if (!(0, _isString2.default)(email)) {
        return _es6Promise2.default.reject(new _errors.KinveyError('The provided email is not a string.'));
      }

      var client = options.client || _client.Client.sharedInstance();
      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        authType: _request.AuthType.App,
        url: _url2.default.format({
          protocol: client.apiProtocol,
          host: client.apiHost,
          pathname: '/rpc/' + client.appKey + '/user-forgot-username'
        }),
        properties: options.properties,
        data: { email: email },
        timeout: options.timeout,
        client: client
      });
      return request.execute().then(function (response) {
        return response.data;
      });
    }

    /**
     * Request an email to be sent to reset a users password.
     *
     * @param {string} username Username
     * @param {Object} [options={}] Options
     * @return {Promise<Object>} The response.
     */

  }, {
    key: 'resetPassword',
    value: function resetPassword(username) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!username) {
        return _es6Promise2.default.reject(new _errors.KinveyError('A username was not provided.', 'Please provide a username for the user that you would like to verify their email.'));
      }

      if (!(0, _isString2.default)(username)) {
        return _es6Promise2.default.reject(new _errors.KinveyError('The provided username is not a string.'));
      }

      var client = options.client || _client.Client.sharedInstance();
      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        authType: _request.AuthType.App,
        url: _url2.default.format({
          protocol: client.apiProtocol,
          host: client.apiHost,
          pathname: '/rpc/' + client.appKey + '/' + username + '/user-password-reset-initiate'
        }),
        properties: options.properties,
        timeout: options.timeout,
        client: client
      });
      return request.execute().then(function (response) {
        return response.data;
      });
    }

    /**
     * Lookup users.
     *
     * @param {Query} [query] Query used to filter entities.
     * @param {Object} [options] Options
     * @return {Observable} Observable.
     */

  }, {
    key: 'lookup',
    value: function lookup(query) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var store = new _userstore.UserStore();
      return store.lookup(query, options);
    }

    /**
     * Check if a username already exists.
     *
     * @param {string} username Username
     * @param {Object} [options] Options
     * @return {boolean} True if the username already exists otherwise false.
     */

  }, {
    key: 'exists',
    value: function exists(username) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var store = new _userstore.UserStore();
      return store.exists(username, options);
    }

    /**
     * Remove a user.
     *
     * @param   {string}  id               Id of the user to remove.
     * @param   {Object}  [options]        Options
     * @param   {boolean} [options.hard=false]   Boolean indicating whether user should be permanently removed from  the backend (defaults to false).
     * @return  {Promise}
     */

  }, {
    key: 'remove',
    value: function remove(id) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var store = new _userstore.UserStore();
      return store.removeById(id, options);
    }

    /**
     * Restore a user that has been suspended.
     *
     * @throw {KinveyError} Unsupported method.
     */

  }, {
    key: 'restore',
    value: function restore() {
      return _es6Promise2.default.reject(new _errors.KinveyError('This function requires a master secret to be provided for your application.' + ' We strongly advise not to do this.'));
    }
  }]);

  return User;
}();

/***/ }),
/* 331 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/differenceBy.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseDifference = __webpack_require__(/*! ./_baseDifference */ 332),
    baseFlatten = __webpack_require__(/*! ./_baseFlatten */ 338),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ 22),
    baseRest = __webpack_require__(/*! ./_baseRest */ 74),
    isArrayLikeObject = __webpack_require__(/*! ./isArrayLikeObject */ 340),
    last = __webpack_require__(/*! ./last */ 129);

/**
 * This method is like `_.difference` except that it accepts `iteratee` which
 * is invoked for each element of `array` and `values` to generate the criterion
 * by which they're compared. The order and references of result values are
 * determined by the first array. The iteratee is invoked with one argument:
 * (value).
 *
 * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
 * // => [{ 'x': 2 }]
 */
var differenceBy = baseRest(function(array, values) {
  var iteratee = last(values);
  if (isArrayLikeObject(iteratee)) {
    iteratee = undefined;
  }
  return isArrayLikeObject(array)
    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2))
    : [];
});

module.exports = differenceBy;


/***/ }),
/* 332 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseDifference.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ 118),
    arrayIncludes = __webpack_require__(/*! ./_arrayIncludes */ 333),
    arrayIncludesWith = __webpack_require__(/*! ./_arrayIncludesWith */ 337),
    arrayMap = __webpack_require__(/*! ./_arrayMap */ 53),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ 100),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ 119);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap(values, baseUnary(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas;
    isCommon = false;
    values = new SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

module.exports = baseDifference;


/***/ }),
/* 333 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arrayIncludes.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(/*! ./_baseIndexOf */ 334);

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;


/***/ }),
/* 334 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseIndexOf.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(/*! ./_baseFindIndex */ 124),
    baseIsNaN = __webpack_require__(/*! ./_baseIsNaN */ 335),
    strictIndexOf = __webpack_require__(/*! ./_strictIndexOf */ 336);

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;


/***/ }),
/* 335 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseIsNaN.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;


/***/ }),
/* 336 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_strictIndexOf.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;


/***/ }),
/* 337 */
/*!****************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arrayIncludesWith.js ***!
  \****************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;


/***/ }),
/* 338 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseFlatten.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ 67),
    isFlattenable = __webpack_require__(/*! ./_isFlattenable */ 339);

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;


/***/ }),
/* 339 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_isFlattenable.js ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ 26),
    isArguments = __webpack_require__(/*! ./isArguments */ 42),
    isArray = __webpack_require__(/*! ./isArray */ 4);

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;


/***/ }),
/* 340 */
/*!***************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/isArrayLikeObject.js ***!
  \***************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 15);

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;


/***/ }),
/* 341 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/remove.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(/*! ./_baseIteratee */ 22),
    basePullAt = __webpack_require__(/*! ./_basePullAt */ 342);

/**
 * Removes all elements from `array` that `predicate` returns truthy for
 * and returns an array of the removed elements. The predicate is invoked
 * with three arguments: (value, index, array).
 *
 * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
 * to pull elements from an array by value.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new array of removed elements.
 * @example
 *
 * var array = [1, 2, 3, 4];
 * var evens = _.remove(array, function(n) {
 *   return n % 2 == 0;
 * });
 *
 * console.log(array);
 * // => [1, 3]
 *
 * console.log(evens);
 * // => [2, 4]
 */
function remove(array, predicate) {
  var result = [];
  if (!(array && array.length)) {
    return result;
  }
  var index = -1,
      indexes = [],
      length = array.length;

  predicate = baseIteratee(predicate, 3);
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result.push(value);
      indexes.push(index);
    }
  }
  basePullAt(array, indexes);
  return result;
}

module.exports = remove;


/***/ }),
/* 342 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_basePullAt.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseUnset = __webpack_require__(/*! ./_baseUnset */ 343),
    isIndex = __webpack_require__(/*! ./_isIndex */ 44);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * The base implementation of `_.pullAt` without support for individual
 * indexes or capturing the removed elements.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {number[]} indexes The indexes of elements to remove.
 * @returns {Array} Returns `array`.
 */
function basePullAt(array, indexes) {
  var length = array ? indexes.length : 0,
      lastIndex = length - 1;

  while (length--) {
    var index = indexes[length];
    if (length == lastIndex || index !== previous) {
      var previous = index;
      if (isIndex(index)) {
        splice.call(array, index, 1);
      } else {
        baseUnset(array, index);
      }
    }
  }
  return array;
}

module.exports = basePullAt;


/***/ }),
/* 343 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseUnset.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ 51),
    last = __webpack_require__(/*! ./last */ 129),
    parent = __webpack_require__(/*! ./_parent */ 344),
    toKey = __webpack_require__(/*! ./_toKey */ 28);

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;


/***/ }),
/* 344 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_parent.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ 78),
    baseSlice = __webpack_require__(/*! ./_baseSlice */ 345);

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;


/***/ }),
/* 345 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseSlice.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;


/***/ }),
/* 346 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseMap.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(/*! ./_baseEach */ 33),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ 16);

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;


/***/ }),
/* 347 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/Observable.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(/*! ./util/root */ 86);
var toSubscriber_1 = __webpack_require__(/*! ./util/toSubscriber */ 348);
var observable_1 = __webpack_require__(/*! ./symbol/observable */ 354);
var pipe_1 = __webpack_require__(/*! ./util/pipe */ 355);
/**
 * A representation of any set of values over any amount of time. This is the most basic building block
 * of RxJS.
 *
 * @class Observable<T>
 */
var Observable = (function () {
    /**
     * @constructor
     * @param {Function} subscribe the function that is called when the Observable is
     * initially subscribed to. This function is given a Subscriber, to which new values
     * can be `next`ed, or an `error` method can be called to raise an error, or
     * `complete` can be called to notify of a successful completion.
     */
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    /**
     * Creates a new Observable, with this Observable as the source, and the passed
     * operator defined as the new observable's operator.
     * @method lift
     * @param {Operator} operator the operator defining the operation to take on the observable
     * @return {Observable} a new observable with the Operator applied
     */
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    /**
     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.
     *
     * <span class="informal">Use it when you have all these Observables, but still nothing is happening.</span>
     *
     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It
     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is
     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling
     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often
     * thought.
     *
     * Apart from starting the execution of an Observable, this method allows you to listen for values
     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two
     * following ways.
     *
     * The first way is creating an object that implements {@link Observer} interface. It should have methods
     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create
     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do
     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also
     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't
     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will
     * be left uncaught.
     *
     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.
     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent
     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,
     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,
     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes
     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.
     *
     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.
     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean
     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback
     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.
     *
     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.
     * It is an Observable itself that decides when these functions will be called. For example {@link of}
     * by default emits all its values synchronously. Always check documentation for how given Observable
     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.
     *
     * @example <caption>Subscribe with an Observer</caption>
     * const sumObserver = {
     *   sum: 0,
     *   next(value) {
     *     console.log('Adding: ' + value);
     *     this.sum = this.sum + value;
     *   },
     *   error() { // We actually could just remove this method,
     *   },        // since we do not really care about errors right now.
     *   complete() {
     *     console.log('Sum equals: ' + this.sum);
     *   }
     * };
     *
     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.
     * .subscribe(sumObserver);
     *
     * // Logs:
     * // "Adding: 1"
     * // "Adding: 2"
     * // "Adding: 3"
     * // "Sum equals: 6"
     *
     *
     * @example <caption>Subscribe with functions</caption>
     * let sum = 0;
     *
     * Rx.Observable.of(1, 2, 3)
     * .subscribe(
     *   function(value) {
     *     console.log('Adding: ' + value);
     *     sum = sum + value;
     *   },
     *   undefined,
     *   function() {
     *     console.log('Sum equals: ' + sum);
     *   }
     * );
     *
     * // Logs:
     * // "Adding: 1"
     * // "Adding: 2"
     * // "Adding: 3"
     * // "Sum equals: 6"
     *
     *
     * @example <caption>Cancel a subscription</caption>
     * const subscription = Rx.Observable.interval(1000).subscribe(
     *   num => console.log(num),
     *   undefined,
     *   () => console.log('completed!') // Will not be called, even
     * );                                // when cancelling subscription
     *
     *
     * setTimeout(() => {
     *   subscription.unsubscribe();
     *   console.log('unsubscribed!');
     * }, 2500);
     *
     * // Logs:
     * // 0 after 1s
     * // 1 after 2s
     * // "unsubscribed!" after 2.5s
     *
     *
     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,
     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed
     *  Observable.
     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,
     *  the error will be thrown as unhandled.
     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.
     * @return {ISubscription} a subscription reference to the registered handlers
     * @method subscribe
     */
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);
        if (operator) {
            operator.call(sink, this.source);
        }
        else {
            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));
        }
        if (sink.syncErrorThrowable) {
            sink.syncErrorThrowable = false;
            if (sink.syncErrorThrown) {
                throw sink.syncErrorValue;
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            sink.syncErrorThrown = true;
            sink.syncErrorValue = err;
            sink.error(err);
        }
    };
    /**
     * @method forEach
     * @param {Function} next a handler for each value emitted by the observable
     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise
     * @return {Promise} a promise that either resolves on observable completion or
     *  rejects with the handled error
     */
    Observable.prototype.forEach = function (next, PromiseCtor) {
        var _this = this;
        if (!PromiseCtor) {
            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
                PromiseCtor = root_1.root.Rx.config.Promise;
            }
            else if (root_1.root.Promise) {
                PromiseCtor = root_1.root.Promise;
            }
        }
        if (!PromiseCtor) {
            throw new Error('no Promise impl found');
        }
        return new PromiseCtor(function (resolve, reject) {
            // Must be declared in a separate statement to avoid a RefernceError when
            // accessing subscription below in the closure due to Temporal Dead Zone.
            var subscription;
            subscription = _this.subscribe(function (value) {
                if (subscription) {
                    // if there is a subscription, then we can surmise
                    // the next handling is asynchronous. Any errors thrown
                    // need to be rejected explicitly and unsubscribe must be
                    // called manually
                    try {
                        next(value);
                    }
                    catch (err) {
                        reject(err);
                        subscription.unsubscribe();
                    }
                }
                else {
                    // if there is NO subscription, then we're getting a nexted
                    // value synchronously during subscription. We can just call it.
                    // If it errors, Observable's `subscribe` will ensure the
                    // unsubscription logic is called, then synchronously rethrow the error.
                    // After that, Promise will trap the error and send it
                    // down the rejection path.
                    next(value);
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        return this.source.subscribe(subscriber);
    };
    /**
     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable
     * @method Symbol.observable
     * @return {Observable} this instance of the observable
     */
    Observable.prototype[observable_1.observable] = function () {
        return this;
    };
    /* tslint:enable:max-line-length */
    /**
     * Used to stitch together functional operators into a chain.
     * @method pipe
     * @return {Observable} the Observable result of all of the operators having
     * been called in the order they were passed in.
     *
     * @example
     *
     * import { map, filter, scan } from 'rxjs/operators';
     *
     * Rx.Observable.interval(1000)
     *   .pipe(
     *     filter(x => x % 2 === 0),
     *     map(x => x + x),
     *     scan((acc, x) => acc + x)
     *   )
     *   .subscribe(x => console.log(x))
     */
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i - 0] = arguments[_i];
        }
        if (operations.length === 0) {
            return this;
        }
        return pipe_1.pipeFromArray(operations)(this);
    };
    /* tslint:enable:max-line-length */
    Observable.prototype.toPromise = function (PromiseCtor) {
        var _this = this;
        if (!PromiseCtor) {
            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
                PromiseCtor = root_1.root.Rx.config.Promise;
            }
            else if (root_1.root.Promise) {
                PromiseCtor = root_1.root.Promise;
            }
        }
        if (!PromiseCtor) {
            throw new Error('no Promise impl found');
        }
        return new PromiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    // HACK: Since TypeScript inherits static properties too, we have to
    // fight against TypeScript here so Subject can have a different static create signature
    /**
     * Creates a new cold Observable by calling the Observable constructor
     * @static true
     * @owner Observable
     * @method create
     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor
     * @return {Observable} a new cold observable
     */
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());
exports.Observable = Observable;
//# sourceMappingURL=Observable.js.map

/***/ }),
/* 348 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/util/toSubscriber.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Subscriber_1 = __webpack_require__(/*! ../Subscriber */ 130);
var rxSubscriber_1 = __webpack_require__(/*! ../symbol/rxSubscriber */ 87);
var Observer_1 = __webpack_require__(/*! ../Observer */ 133);
function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof Subscriber_1.Subscriber) {
            return nextOrObserver;
        }
        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {
            return nextOrObserver[rxSubscriber_1.rxSubscriber]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new Subscriber_1.Subscriber(Observer_1.empty);
    }
    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);
}
exports.toSubscriber = toSubscriber;
//# sourceMappingURL=toSubscriber.js.map

/***/ }),
/* 349 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/Subscription.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray_1 = __webpack_require__(/*! ./util/isArray */ 350);
var isObject_1 = __webpack_require__(/*! ./util/isObject */ 351);
var isFunction_1 = __webpack_require__(/*! ./util/isFunction */ 131);
var tryCatch_1 = __webpack_require__(/*! ./util/tryCatch */ 352);
var errorObject_1 = __webpack_require__(/*! ./util/errorObject */ 132);
var UnsubscriptionError_1 = __webpack_require__(/*! ./util/UnsubscriptionError */ 353);
/**
 * Represents a disposable resource, such as the execution of an Observable. A
 * Subscription has one important method, `unsubscribe`, that takes no argument
 * and just disposes the resource held by the subscription.
 *
 * Additionally, subscriptions may be grouped together through the `add()`
 * method, which will attach a child Subscription to the current Subscription.
 * When a Subscription is unsubscribed, all its children (and its grandchildren)
 * will be unsubscribed as well.
 *
 * @class Subscription
 */
var Subscription = (function () {
    /**
     * @param {function(): void} [unsubscribe] A function describing how to
     * perform the disposal of resources when the `unsubscribe` method is called.
     */
    function Subscription(unsubscribe) {
        /**
         * A flag to indicate whether this Subscription has already been unsubscribed.
         * @type {boolean}
         */
        this.closed = false;
        this._parent = null;
        this._parents = null;
        this._subscriptions = null;
        if (unsubscribe) {
            this._unsubscribe = unsubscribe;
        }
    }
    /**
     * Disposes the resources held by the subscription. May, for instance, cancel
     * an ongoing Observable execution or cancel any other type of work that
     * started when the Subscription was created.
     * @return {void}
     */
    Subscription.prototype.unsubscribe = function () {
        var hasErrors = false;
        var errors;
        if (this.closed) {
            return;
        }
        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parent = null;
        this._parents = null;
        // null out _subscriptions first so any child subscriptions that attempt
        // to remove themselves from this subscription will noop
        this._subscriptions = null;
        var index = -1;
        var len = _parents ? _parents.length : 0;
        // if this._parent is null, then so is this._parents, and we
        // don't have to remove ourselves from any parent subscriptions.
        while (_parent) {
            _parent.remove(this);
            // if this._parents is null or index >= len,
            // then _parent is set to null, and the loop exits
            _parent = ++index < len && _parents[index] || null;
        }
        if (isFunction_1.isFunction(_unsubscribe)) {
            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);
            if (trial === errorObject_1.errorObject) {
                hasErrors = true;
                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?
                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);
            }
        }
        if (isArray_1.isArray(_subscriptions)) {
            index = -1;
            len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (isObject_1.isObject(sub)) {
                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);
                    if (trial === errorObject_1.errorObject) {
                        hasErrors = true;
                        errors = errors || [];
                        var err = errorObject_1.errorObject.e;
                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {
                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));
                        }
                        else {
                            errors.push(err);
                        }
                    }
                }
            }
        }
        if (hasErrors) {
            throw new UnsubscriptionError_1.UnsubscriptionError(errors);
        }
    };
    /**
     * Adds a tear down to be called during the unsubscribe() of this
     * Subscription.
     *
     * If the tear down being added is a subscription that is already
     * unsubscribed, is the same reference `add` is being called on, or is
     * `Subscription.EMPTY`, it will not be added.
     *
     * If this subscription is already in an `closed` state, the passed
     * tear down logic will be executed immediately.
     *
     * @param {TeardownLogic} teardown The additional logic to execute on
     * teardown.
     * @return {Subscription} Returns the Subscription used or created to be
     * added to the inner subscriptions list. This Subscription can be used with
     * `remove()` to remove the passed teardown logic from the inner subscriptions
     * list.
     */
    Subscription.prototype.add = function (teardown) {
        if (!teardown || (teardown === Subscription.EMPTY)) {
            return Subscription.EMPTY;
        }
        if (teardown === this) {
            return this;
        }
        var subscription = teardown;
        switch (typeof teardown) {
            case 'function':
                subscription = new Subscription(teardown);
            case 'object':
                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {
                    return subscription;
                }
                else if (this.closed) {
                    subscription.unsubscribe();
                    return subscription;
                }
                else if (typeof subscription._addParent !== 'function' /* quack quack */) {
                    var tmp = subscription;
                    subscription = new Subscription();
                    subscription._subscriptions = [tmp];
                }
                break;
            default:
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
        }
        var subscriptions = this._subscriptions || (this._subscriptions = []);
        subscriptions.push(subscription);
        subscription._addParent(this);
        return subscription;
    };
    /**
     * Removes a Subscription from the internal list of subscriptions that will
     * unsubscribe during the unsubscribe process of this Subscription.
     * @param {Subscription} subscription The subscription to remove.
     * @return {void}
     */
    Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.prototype._addParent = function (parent) {
        var _a = this, _parent = _a._parent, _parents = _a._parents;
        if (!_parent || _parent === parent) {
            // If we don't have a parent, or the new parent is the same as the
            // current parent, then set this._parent to the new parent.
            this._parent = parent;
        }
        else if (!_parents) {
            // If there's already one parent, but not multiple, allocate an Array to
            // store the rest of the parent Subscriptions.
            this._parents = [parent];
        }
        else if (_parents.indexOf(parent) === -1) {
            // Only add the new parent to the _parents list if it's not already there.
            _parents.push(parent);
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());
exports.Subscription = Subscription;
function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map

/***/ }),
/* 350 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/util/isArray.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });
//# sourceMappingURL=isArray.js.map

/***/ }),
/* 351 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/util/isObject.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isObject(x) {
    return x != null && typeof x === 'object';
}
exports.isObject = isObject;
//# sourceMappingURL=isObject.js.map

/***/ }),
/* 352 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/util/tryCatch.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var errorObject_1 = __webpack_require__(/*! ./errorObject */ 132);
var tryCatchTarget;
function tryCatcher() {
    try {
        return tryCatchTarget.apply(this, arguments);
    }
    catch (e) {
        errorObject_1.errorObject.e = e;
        return errorObject_1.errorObject;
    }
}
function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
}
exports.tryCatch = tryCatch;
;
//# sourceMappingURL=tryCatch.js.map

/***/ }),
/* 353 */
/*!********************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/util/UnsubscriptionError.js ***!
  \********************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when one or more errors have occurred during the
 * `unsubscribe` of a {@link Subscription}.
 */
var UnsubscriptionError = (function (_super) {
    __extends(UnsubscriptionError, _super);
    function UnsubscriptionError(errors) {
        _super.call(this);
        this.errors = errors;
        var err = Error.call(this, errors ?
            errors.length + " errors occurred during unsubscription:\n  " + errors.map(function (err, i) { return ((i + 1) + ") " + err.toString()); }).join('\n  ') : '');
        this.name = err.name = 'UnsubscriptionError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return UnsubscriptionError;
}(Error));
exports.UnsubscriptionError = UnsubscriptionError;
//# sourceMappingURL=UnsubscriptionError.js.map

/***/ }),
/* 354 */
/*!*************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/symbol/observable.js ***!
  \*************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(/*! ../util/root */ 86);
function getSymbolObservable(context) {
    var $$observable;
    var Symbol = context.Symbol;
    if (typeof Symbol === 'function') {
        if (Symbol.observable) {
            $$observable = Symbol.observable;
        }
        else {
            $$observable = Symbol('observable');
            Symbol.observable = $$observable;
        }
    }
    else {
        $$observable = '@@observable';
    }
    return $$observable;
}
exports.getSymbolObservable = getSymbolObservable;
exports.observable = getSymbolObservable(root_1.root);
/**
 * @deprecated use observable instead
 */
exports.$$observable = exports.observable;
//# sourceMappingURL=observable.js.map

/***/ }),
/* 355 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/util/pipe.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var noop_1 = __webpack_require__(/*! ./noop */ 356);
/* tslint:enable:max-line-length */
function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i - 0] = arguments[_i];
    }
    return pipeFromArray(fns);
}
exports.pipe = pipe;
/* @internal */
function pipeFromArray(fns) {
    if (!fns) {
        return noop_1.noop;
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
exports.pipeFromArray = pipeFromArray;
//# sourceMappingURL=pipe.js.map

/***/ }),
/* 356 */
/*!*****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/rxjs/util/noop.js ***!
  \*****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* tslint:disable:no-empty */
function noop() { }
exports.noop = noop;
//# sourceMappingURL=noop.js.map

/***/ }),
/* 357 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/live/collection/index.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _liveCollectionManager = __webpack_require__(/*! ./live-collection-manager */ 358);

Object.keys(_liveCollectionManager).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _liveCollectionManager[key];
    }
  });
});

/***/ }),
/* 358 */
/*!**************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/live/collection/live-collection-manager.js ***!
  \**************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LiveCollectionManager = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.getLiveCollectionManager = getLiveCollectionManager;

var _client = __webpack_require__(/*! ../../client */ 10);

var _errors = __webpack_require__(/*! ../../errors */ 1);

var _request = __webpack_require__(/*! ../../request */ 7);

var _liveService = __webpack_require__(/*! ../live-service */ 56);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var LiveCollectionManager = exports.LiveCollectionManager = function () {
  /**
   * @param {Client} client
   */
  function LiveCollectionManager(client) {
    _classCallCheck(this, LiveCollectionManager);

    this._client = client || _client.Client.sharedInstance();
  }

  _createClass(LiveCollectionManager, [{
    key: 'subscribeCollection',
    value: function subscribeCollection(name, receiver) {
      var _this = this;

      if (!(0, _liveService.isValidChannelName)(name)) {
        return Promise.reject(new _errors.KinveyError('Invalid or missing collection name'));
      }

      if (!(0, _liveService.isValidReceiver)(receiver)) {
        return Promise.reject(new _errors.KinveyError('Invalid or missing receiver'));
      }

      return this._makeSubscriptionRequest(name, '_subscribe').then(function () {
        var channelName = _this._buildChannelName(name);
        var personalChannelName = _this._buildPersonalChannelName(name);
        var liveService = (0, _liveService.getLiveService)();
        liveService.subscribeToChannel(channelName, receiver);
        liveService.subscribeToChannel(personalChannelName, receiver);
      });
    }
  }, {
    key: 'unsubscribeCollection',
    value: function unsubscribeCollection(name) {
      var _this2 = this;

      if (!(0, _liveService.isValidChannelName)(name)) {
        return Promise.reject(new _errors.KinveyError('Invalid or missing collection name'));
      }

      return this._makeSubscriptionRequest(name, '_unsubscribe').then(function () {
        var channelName = _this2._buildChannelName(name);
        var personalChannelName = _this2._buildPersonalChannelName(name);
        var liveService = (0, _liveService.getLiveService)();
        liveService.unsubscribeFromChannel(channelName);
        liveService.unsubscribeFromChannel(personalChannelName);
      });
    }

    /**
     * Builds the expected channel name, used when receiving messages from PubNub
     * @private
     * @param {string} collectionName
     */

  }, {
    key: '_buildChannelName',
    value: function _buildChannelName(collectionName) {
      return this._client.appKey + '.c-' + collectionName;
    }
  }, {
    key: '_buildPersonalChannelName',
    value: function _buildPersonalChannelName(collectionName) {
      var channelName = this._buildChannelName(collectionName);
      var userId = this._client.getActiveUser()._id;
      return channelName + '.u-' + userId;
    }

    /**
     * @private
     * @param {string} collectionName
     * @param {string} path
     */

  }, {
    key: '_makeSubscriptionRequest',
    value: function _makeSubscriptionRequest(collectionName, path) {
      return _request.KinveyRequest.executeShort({
        method: _request.RequestMethod.POST,
        pathname: '/appdata/' + this._client.appKey + '/' + collectionName + '/' + path,
        body: { deviceId: this._client.deviceId }
      });
    }
  }]);

  return LiveCollectionManager;
}();

/** @type {LiveCollectionManager} */


var managerInstance = void 0;

/**
 * @param {Client} client
 */
function getLiveCollectionManager(client) {
  if (!managerInstance) {
    managerInstance = new LiveCollectionManager(client);
  }
  return managerInstance;
}

/***/ }),
/* 359 */
/*!********************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/nativescript/index.js ***!
  \********************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pubnubCommon = __webpack_require__(/*! ../core/pubnub-common */ 360);

var _pubnubCommon2 = _interopRequireDefault(_pubnubCommon);

var _networking = __webpack_require__(/*! ../networking */ 389);

var _networking2 = _interopRequireDefault(_networking);

var _common = __webpack_require__(/*! ../db/common */ 390);

var _common2 = _interopRequireDefault(_common);

var _nativescript = __webpack_require__(/*! ../networking/modules/nativescript */ 391);

var _flow_interfaces = __webpack_require__(/*! ../core/flow_interfaces */ 3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _class = function (_PubNubCore) {
  _inherits(_class, _PubNubCore);

  function _class(setup) {
    _classCallCheck(this, _class);

    setup.db = new _common2.default();
    setup.networking = new _networking2.default({ del: _nativescript.del, get: _nativescript.get, post: _nativescript.post });
    setup.sdkFamily = 'NativeScript';
    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, setup));
  }

  return _class;
}(_pubnubCommon2.default);

exports.default = _class;
module.exports = exports['default'];
//# sourceMappingURL=index.js.map


/***/ }),
/* 360 */
/*!********************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/pubnub-common.js ***!
  \********************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(/*! ./components/config */ 29);

var _config2 = _interopRequireDefault(_config);

var _index = __webpack_require__(/*! ./components/cryptography/index */ 134);

var _index2 = _interopRequireDefault(_index);

var _subscription_manager = __webpack_require__(/*! ./components/subscription_manager */ 363);

var _subscription_manager2 = _interopRequireDefault(_subscription_manager);

var _listener_manager = __webpack_require__(/*! ./components/listener_manager */ 135);

var _listener_manager2 = _interopRequireDefault(_listener_manager);

var _endpoint = __webpack_require__(/*! ./components/endpoint */ 366);

var _endpoint2 = _interopRequireDefault(_endpoint);

var _add_channels = __webpack_require__(/*! ./endpoints/channel_groups/add_channels */ 367);

var addChannelsChannelGroupConfig = _interopRequireWildcard(_add_channels);

var _remove_channels = __webpack_require__(/*! ./endpoints/channel_groups/remove_channels */ 368);

var removeChannelsChannelGroupConfig = _interopRequireWildcard(_remove_channels);

var _delete_group = __webpack_require__(/*! ./endpoints/channel_groups/delete_group */ 369);

var deleteChannelGroupConfig = _interopRequireWildcard(_delete_group);

var _list_groups = __webpack_require__(/*! ./endpoints/channel_groups/list_groups */ 370);

var listChannelGroupsConfig = _interopRequireWildcard(_list_groups);

var _list_channels = __webpack_require__(/*! ./endpoints/channel_groups/list_channels */ 371);

var listChannelsInChannelGroupConfig = _interopRequireWildcard(_list_channels);

var _add_push_channels = __webpack_require__(/*! ./endpoints/push/add_push_channels */ 372);

var addPushChannelsConfig = _interopRequireWildcard(_add_push_channels);

var _remove_push_channels = __webpack_require__(/*! ./endpoints/push/remove_push_channels */ 373);

var removePushChannelsConfig = _interopRequireWildcard(_remove_push_channels);

var _list_push_channels = __webpack_require__(/*! ./endpoints/push/list_push_channels */ 374);

var listPushChannelsConfig = _interopRequireWildcard(_list_push_channels);

var _remove_device = __webpack_require__(/*! ./endpoints/push/remove_device */ 375);

var removeDevicePushConfig = _interopRequireWildcard(_remove_device);

var _leave = __webpack_require__(/*! ./endpoints/presence/leave */ 376);

var presenceLeaveEndpointConfig = _interopRequireWildcard(_leave);

var _where_now = __webpack_require__(/*! ./endpoints/presence/where_now */ 377);

var presenceWhereNowEndpointConfig = _interopRequireWildcard(_where_now);

var _heartbeat = __webpack_require__(/*! ./endpoints/presence/heartbeat */ 378);

var presenceHeartbeatEndpointConfig = _interopRequireWildcard(_heartbeat);

var _get_state = __webpack_require__(/*! ./endpoints/presence/get_state */ 379);

var presenceGetStateConfig = _interopRequireWildcard(_get_state);

var _set_state = __webpack_require__(/*! ./endpoints/presence/set_state */ 380);

var presenceSetStateConfig = _interopRequireWildcard(_set_state);

var _here_now = __webpack_require__(/*! ./endpoints/presence/here_now */ 381);

var presenceHereNowConfig = _interopRequireWildcard(_here_now);

var _audit = __webpack_require__(/*! ./endpoints/access_manager/audit */ 382);

var auditEndpointConfig = _interopRequireWildcard(_audit);

var _grant = __webpack_require__(/*! ./endpoints/access_manager/grant */ 383);

var grantEndpointConfig = _interopRequireWildcard(_grant);

var _publish = __webpack_require__(/*! ./endpoints/publish */ 384);

var publishEndpointConfig = _interopRequireWildcard(_publish);

var _get_history = __webpack_require__(/*! ./endpoints/history/get_history */ 385);

var historyEndpointConfig = _interopRequireWildcard(_get_history);

var _delete_messages = __webpack_require__(/*! ./endpoints/history/delete_messages */ 386);

var deleteMessagesEndpointConfig = _interopRequireWildcard(_delete_messages);

var _fetch_messages = __webpack_require__(/*! ./endpoints/fetch_messages */ 387);

var fetchMessagesEndpointConfig = _interopRequireWildcard(_fetch_messages);

var _time = __webpack_require__(/*! ./endpoints/time */ 136);

var timeEndpointConfig = _interopRequireWildcard(_time);

var _subscribe = __webpack_require__(/*! ./endpoints/subscribe */ 388);

var subscribeEndpointConfig = _interopRequireWildcard(_subscribe);

var _operations = __webpack_require__(/*! ./constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _categories = __webpack_require__(/*! ./constants/categories */ 57);

var _categories2 = _interopRequireDefault(_categories);

var _flow_interfaces = __webpack_require__(/*! ./flow_interfaces */ 3);

var _uuid = __webpack_require__(/*! ./components/uuid */ 90);

var _uuid2 = _interopRequireDefault(_uuid);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _class = function () {
  function _class(setup) {
    var _this = this;

    _classCallCheck(this, _class);

    var db = setup.db,
        networking = setup.networking;


    var config = this._config = new _config2.default({ setup: setup, db: db });
    var crypto = new _index2.default({ config: config });

    networking.init(config);

    var modules = { config: config, networking: networking, crypto: crypto };

    var timeEndpoint = _endpoint2.default.bind(this, modules, timeEndpointConfig);
    var leaveEndpoint = _endpoint2.default.bind(this, modules, presenceLeaveEndpointConfig);
    var heartbeatEndpoint = _endpoint2.default.bind(this, modules, presenceHeartbeatEndpointConfig);
    var setStateEndpoint = _endpoint2.default.bind(this, modules, presenceSetStateConfig);
    var subscribeEndpoint = _endpoint2.default.bind(this, modules, subscribeEndpointConfig);

    var listenerManager = this._listenerManager = new _listener_manager2.default();

    var subscriptionManager = new _subscription_manager2.default({
      timeEndpoint: timeEndpoint,
      leaveEndpoint: leaveEndpoint,
      heartbeatEndpoint: heartbeatEndpoint,
      setStateEndpoint: setStateEndpoint,
      subscribeEndpoint: subscribeEndpoint,
      crypto: modules.crypto,
      config: modules.config,
      listenerManager: listenerManager
    });

    this.addListener = listenerManager.addListener.bind(listenerManager);
    this.removeListener = listenerManager.removeListener.bind(listenerManager);
    this.removeAllListeners = listenerManager.removeAllListeners.bind(listenerManager);

    this.channelGroups = {
      listGroups: _endpoint2.default.bind(this, modules, listChannelGroupsConfig),
      listChannels: _endpoint2.default.bind(this, modules, listChannelsInChannelGroupConfig),
      addChannels: _endpoint2.default.bind(this, modules, addChannelsChannelGroupConfig),
      removeChannels: _endpoint2.default.bind(this, modules, removeChannelsChannelGroupConfig),
      deleteGroup: _endpoint2.default.bind(this, modules, deleteChannelGroupConfig)
    };

    this.push = {
      addChannels: _endpoint2.default.bind(this, modules, addPushChannelsConfig),
      removeChannels: _endpoint2.default.bind(this, modules, removePushChannelsConfig),
      deleteDevice: _endpoint2.default.bind(this, modules, removeDevicePushConfig),
      listChannels: _endpoint2.default.bind(this, modules, listPushChannelsConfig)
    };

    this.hereNow = _endpoint2.default.bind(this, modules, presenceHereNowConfig);
    this.whereNow = _endpoint2.default.bind(this, modules, presenceWhereNowEndpointConfig);
    this.getState = _endpoint2.default.bind(this, modules, presenceGetStateConfig);
    this.setState = subscriptionManager.adaptStateChange.bind(subscriptionManager);

    this.grant = _endpoint2.default.bind(this, modules, grantEndpointConfig);
    this.audit = _endpoint2.default.bind(this, modules, auditEndpointConfig);

    this.publish = _endpoint2.default.bind(this, modules, publishEndpointConfig);

    this.fire = function (args, callback) {
      args.replicate = false;
      args.storeInHistory = false;
      return _this.publish(args, callback);
    };

    this.history = _endpoint2.default.bind(this, modules, historyEndpointConfig);
    this.deleteMessages = _endpoint2.default.bind(this, modules, deleteMessagesEndpointConfig);
    this.fetchMessages = _endpoint2.default.bind(this, modules, fetchMessagesEndpointConfig);

    this.time = timeEndpoint;

    this.subscribe = subscriptionManager.adaptSubscribeChange.bind(subscriptionManager);
    this.unsubscribe = subscriptionManager.adaptUnsubscribeChange.bind(subscriptionManager);
    this.disconnect = subscriptionManager.disconnect.bind(subscriptionManager);
    this.reconnect = subscriptionManager.reconnect.bind(subscriptionManager);

    this.destroy = function (isOffline) {
      subscriptionManager.unsubscribeAll(isOffline);
      subscriptionManager.disconnect();
    };

    this.stop = this.destroy;

    this.unsubscribeAll = subscriptionManager.unsubscribeAll.bind(subscriptionManager);

    this.getSubscribedChannels = subscriptionManager.getSubscribedChannels.bind(subscriptionManager);
    this.getSubscribedChannelGroups = subscriptionManager.getSubscribedChannelGroups.bind(subscriptionManager);

    this.encrypt = crypto.encrypt.bind(crypto);
    this.decrypt = crypto.decrypt.bind(crypto);

    this.getAuthKey = modules.config.getAuthKey.bind(modules.config);
    this.setAuthKey = modules.config.setAuthKey.bind(modules.config);
    this.setCipherKey = modules.config.setCipherKey.bind(modules.config);
    this.getUUID = modules.config.getUUID.bind(modules.config);
    this.setUUID = modules.config.setUUID.bind(modules.config);
    this.getFilterExpression = modules.config.getFilterExpression.bind(modules.config);
    this.setFilterExpression = modules.config.setFilterExpression.bind(modules.config);

    this.setHeartbeatInterval = modules.config.setHeartbeatInterval.bind(modules.config);
  }

  _createClass(_class, [{
    key: 'getVersion',
    value: function getVersion() {
      return this._config.getVersion();
    }
  }, {
    key: 'networkDownDetected',
    value: function networkDownDetected() {
      this._listenerManager.announceNetworkDown();

      if (this._config.restore) {
        this.disconnect();
      } else {
        this.destroy(true);
      }
    }
  }, {
    key: 'networkUpDetected',
    value: function networkUpDetected() {
      this._listenerManager.announceNetworkUp();
      this.reconnect();
    }
  }], [{
    key: 'generateUUID',
    value: function generateUUID() {
      return _uuid2.default.createUUID();
    }
  }]);

  return _class;
}();

_class.OPERATIONS = _operations2.default;
_class.CATEGORIES = _categories2.default;
exports.default = _class;
module.exports = exports['default'];
//# sourceMappingURL=pubnub-common.js.map


/***/ }),
/* 361 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lil-uuid/uuid.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! lil-uuid - v0.1 - MIT License - https://github.com/lil-js/uuid */
(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
  } else if (typeof exports === 'object') {
    factory(exports)
    if (typeof module === 'object' && module !== null) {
      module.exports = exports.uuid
    }
  } else {
    factory((root.lil = root.lil || {}))
  }
}(this, function (exports) {
  var VERSION = '0.1.0'
  var uuidRegex = {
    '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
    '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
    '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
  }

  function uuid() {
    var uuid = '', i, random
    for (i = 0; i < 32; i++) {
      random = Math.random() * 16 | 0;
      if (i === 8 || i === 12 || i === 16 || i === 20) uuid += '-'
      uuid += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16)
    }
    return uuid
  }

  function isUUID(str, version) {
    var pattern = uuidRegex[version || 'all']
    return pattern && pattern.test(str) || false
  }

  uuid.isUUID = isUUID
  uuid.VERSION = VERSION

  exports.uuid = uuid
  exports.isUUID = isUUID
}));


/***/ }),
/* 362 */
/*!******************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/components/cryptography/hmac-sha256.js ***!
  \******************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var CryptoJS = CryptoJS || function (h, s) {
  var f = {},
      g = f.lib = {},
      q = function q() {},
      m = g.Base = { extend: function extend(a) {
      q.prototype = this;var c = new q();a && c.mixIn(a);c.hasOwnProperty("init") || (c.init = function () {
        c.$super.init.apply(this, arguments);
      });c.init.prototype = c;c.$super = this;return c;
    }, create: function create() {
      var a = this.extend();a.init.apply(a, arguments);return a;
    }, init: function init() {}, mixIn: function mixIn(a) {
      for (var c in a) {
        a.hasOwnProperty(c) && (this[c] = a[c]);
      }a.hasOwnProperty("toString") && (this.toString = a.toString);
    }, clone: function clone() {
      return this.init.prototype.extend(this);
    } },
      r = g.WordArray = m.extend({ init: function init(a, c) {
      a = this.words = a || [];this.sigBytes = c != s ? c : 4 * a.length;
    }, toString: function toString(a) {
      return (a || k).stringify(this);
    }, concat: function concat(a) {
      var c = this.words,
          d = a.words,
          b = this.sigBytes;a = a.sigBytes;this.clamp();if (b % 4) for (var e = 0; e < a; e++) {
        c[b + e >>> 2] |= (d[e >>> 2] >>> 24 - 8 * (e % 4) & 255) << 24 - 8 * ((b + e) % 4);
      } else if (65535 < d.length) for (e = 0; e < a; e += 4) {
        c[b + e >>> 2] = d[e >>> 2];
      } else c.push.apply(c, d);this.sigBytes += a;return this;
    }, clamp: function clamp() {
      var a = this.words,
          c = this.sigBytes;a[c >>> 2] &= 4294967295 << 32 - 8 * (c % 4);a.length = h.ceil(c / 4);
    }, clone: function clone() {
      var a = m.clone.call(this);a.words = this.words.slice(0);return a;
    }, random: function random(a) {
      for (var c = [], d = 0; d < a; d += 4) {
        c.push(4294967296 * h.random() | 0);
      }return new r.init(c, a);
    } }),
      l = f.enc = {},
      k = l.Hex = { stringify: function stringify(a) {
      var c = a.words;a = a.sigBytes;for (var d = [], b = 0; b < a; b++) {
        var e = c[b >>> 2] >>> 24 - 8 * (b % 4) & 255;d.push((e >>> 4).toString(16));d.push((e & 15).toString(16));
      }return d.join("");
    }, parse: function parse(a) {
      for (var c = a.length, d = [], b = 0; b < c; b += 2) {
        d[b >>> 3] |= parseInt(a.substr(b, 2), 16) << 24 - 4 * (b % 8);
      }return new r.init(d, c / 2);
    } },
      n = l.Latin1 = { stringify: function stringify(a) {
      var c = a.words;a = a.sigBytes;for (var d = [], b = 0; b < a; b++) {
        d.push(String.fromCharCode(c[b >>> 2] >>> 24 - 8 * (b % 4) & 255));
      }return d.join("");
    }, parse: function parse(a) {
      for (var c = a.length, d = [], b = 0; b < c; b++) {
        d[b >>> 2] |= (a.charCodeAt(b) & 255) << 24 - 8 * (b % 4);
      }return new r.init(d, c);
    } },
      j = l.Utf8 = { stringify: function stringify(a) {
      try {
        return decodeURIComponent(escape(n.stringify(a)));
      } catch (c) {
        throw Error("Malformed UTF-8 data");
      }
    }, parse: function parse(a) {
      return n.parse(unescape(encodeURIComponent(a)));
    } },
      u = g.BufferedBlockAlgorithm = m.extend({ reset: function reset() {
      this._data = new r.init();this._nDataBytes = 0;
    }, _append: function _append(a) {
      "string" == typeof a && (a = j.parse(a));this._data.concat(a);this._nDataBytes += a.sigBytes;
    }, _process: function _process(a) {
      var c = this._data,
          d = c.words,
          b = c.sigBytes,
          e = this.blockSize,
          f = b / (4 * e),
          f = a ? h.ceil(f) : h.max((f | 0) - this._minBufferSize, 0);a = f * e;b = h.min(4 * a, b);if (a) {
        for (var g = 0; g < a; g += e) {
          this._doProcessBlock(d, g);
        }g = d.splice(0, a);c.sigBytes -= b;
      }return new r.init(g, b);
    }, clone: function clone() {
      var a = m.clone.call(this);
      a._data = this._data.clone();return a;
    }, _minBufferSize: 0 });g.Hasher = u.extend({ cfg: m.extend(), init: function init(a) {
      this.cfg = this.cfg.extend(a);this.reset();
    }, reset: function reset() {
      u.reset.call(this);this._doReset();
    }, update: function update(a) {
      this._append(a);this._process();return this;
    }, finalize: function finalize(a) {
      a && this._append(a);return this._doFinalize();
    }, blockSize: 16, _createHelper: function _createHelper(a) {
      return function (c, d) {
        return new a.init(d).finalize(c);
      };
    }, _createHmacHelper: function _createHmacHelper(a) {
      return function (c, d) {
        return new t.HMAC.init(a, d).finalize(c);
      };
    } });var t = f.algo = {};return f;
}(Math);

(function (h) {
  for (var s = CryptoJS, f = s.lib, g = f.WordArray, q = f.Hasher, f = s.algo, m = [], r = [], l = function l(a) {
    return 4294967296 * (a - (a | 0)) | 0;
  }, k = 2, n = 0; 64 > n;) {
    var j;a: {
      j = k;for (var u = h.sqrt(j), t = 2; t <= u; t++) {
        if (!(j % t)) {
          j = !1;break a;
        }
      }j = !0;
    }j && (8 > n && (m[n] = l(h.pow(k, 0.5))), r[n] = l(h.pow(k, 1 / 3)), n++);k++;
  }var a = [],
      f = f.SHA256 = q.extend({ _doReset: function _doReset() {
      this._hash = new g.init(m.slice(0));
    }, _doProcessBlock: function _doProcessBlock(c, d) {
      for (var b = this._hash.words, e = b[0], f = b[1], g = b[2], j = b[3], h = b[4], m = b[5], n = b[6], q = b[7], p = 0; 64 > p; p++) {
        if (16 > p) a[p] = c[d + p] | 0;else {
          var k = a[p - 15],
              l = a[p - 2];a[p] = ((k << 25 | k >>> 7) ^ (k << 14 | k >>> 18) ^ k >>> 3) + a[p - 7] + ((l << 15 | l >>> 17) ^ (l << 13 | l >>> 19) ^ l >>> 10) + a[p - 16];
        }k = q + ((h << 26 | h >>> 6) ^ (h << 21 | h >>> 11) ^ (h << 7 | h >>> 25)) + (h & m ^ ~h & n) + r[p] + a[p];l = ((e << 30 | e >>> 2) ^ (e << 19 | e >>> 13) ^ (e << 10 | e >>> 22)) + (e & f ^ e & g ^ f & g);q = n;n = m;m = h;h = j + k | 0;j = g;g = f;f = e;e = k + l | 0;
      }b[0] = b[0] + e | 0;b[1] = b[1] + f | 0;b[2] = b[2] + g | 0;b[3] = b[3] + j | 0;b[4] = b[4] + h | 0;b[5] = b[5] + m | 0;b[6] = b[6] + n | 0;b[7] = b[7] + q | 0;
    }, _doFinalize: function _doFinalize() {
      var a = this._data,
          d = a.words,
          b = 8 * this._nDataBytes,
          e = 8 * a.sigBytes;
      d[e >>> 5] |= 128 << 24 - e % 32;d[(e + 64 >>> 9 << 4) + 14] = h.floor(b / 4294967296);d[(e + 64 >>> 9 << 4) + 15] = b;a.sigBytes = 4 * d.length;this._process();return this._hash;
    }, clone: function clone() {
      var a = q.clone.call(this);a._hash = this._hash.clone();return a;
    } });s.SHA256 = q._createHelper(f);s.HmacSHA256 = q._createHmacHelper(f);
})(Math);

(function () {
  var h = CryptoJS,
      s = h.enc.Utf8;h.algo.HMAC = h.lib.Base.extend({ init: function init(f, g) {
      f = this._hasher = new f.init();"string" == typeof g && (g = s.parse(g));var h = f.blockSize,
          m = 4 * h;g.sigBytes > m && (g = f.finalize(g));g.clamp();for (var r = this._oKey = g.clone(), l = this._iKey = g.clone(), k = r.words, n = l.words, j = 0; j < h; j++) {
        k[j] ^= 1549556828, n[j] ^= 909522486;
      }r.sigBytes = l.sigBytes = m;this.reset();
    }, reset: function reset() {
      var f = this._hasher;f.reset();f.update(this._iKey);
    }, update: function update(f) {
      this._hasher.update(f);return this;
    }, finalize: function finalize(f) {
      var g = this._hasher;f = g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f));
    } });
})();

(function () {
  var u = CryptoJS,
      p = u.lib.WordArray;u.enc.Base64 = { stringify: function stringify(d) {
      var l = d.words,
          p = d.sigBytes,
          t = this._map;d.clamp();d = [];for (var r = 0; r < p; r += 3) {
        for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++) {
          d.push(t.charAt(w >>> 6 * (3 - v) & 63));
        }
      }if (l = t.charAt(64)) for (; d.length % 4;) {
        d.push(l);
      }return d.join("");
    }, parse: function parse(d) {
      var l = d.length,
          s = this._map,
          t = s.charAt(64);t && (t = d.indexOf(t), -1 != t && (l = t));for (var t = [], r = 0, w = 0; w < l; w++) {
        if (w % 4) {
          var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4),
              b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4);t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4);r++;
        }
      }return p.create(t, r);
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" };
})();

(function (u) {
  function p(b, n, a, c, e, j, k) {
    b = b + (n & a | ~n & c) + e + k;return (b << j | b >>> 32 - j) + n;
  }function d(b, n, a, c, e, j, k) {
    b = b + (n & c | a & ~c) + e + k;return (b << j | b >>> 32 - j) + n;
  }function l(b, n, a, c, e, j, k) {
    b = b + (n ^ a ^ c) + e + k;return (b << j | b >>> 32 - j) + n;
  }function s(b, n, a, c, e, j, k) {
    b = b + (a ^ (n | ~c)) + e + k;return (b << j | b >>> 32 - j) + n;
  }for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++) {
    b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0;
  }r = r.MD5 = v.extend({ _doReset: function _doReset() {
      this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]);
    },
    _doProcessBlock: function _doProcessBlock(q, n) {
      for (var a = 0; 16 > a; a++) {
        var c = n + a,
            e = q[c];q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360;
      }var a = this._hash.words,
          c = q[n + 0],
          e = q[n + 1],
          j = q[n + 2],
          k = q[n + 3],
          z = q[n + 4],
          r = q[n + 5],
          t = q[n + 6],
          w = q[n + 7],
          v = q[n + 8],
          A = q[n + 9],
          B = q[n + 10],
          C = q[n + 11],
          u = q[n + 12],
          D = q[n + 13],
          E = q[n + 14],
          x = q[n + 15],
          f = a[0],
          m = a[1],
          g = a[2],
          h = a[3],
          f = p(f, m, g, h, c, 7, b[0]),
          h = p(h, f, m, g, e, 12, b[1]),
          g = p(g, h, f, m, j, 17, b[2]),
          m = p(m, g, h, f, k, 22, b[3]),
          f = p(f, m, g, h, z, 7, b[4]),
          h = p(h, f, m, g, r, 12, b[5]),
          g = p(g, h, f, m, t, 17, b[6]),
          m = p(m, g, h, f, w, 22, b[7]),
          f = p(f, m, g, h, v, 7, b[8]),
          h = p(h, f, m, g, A, 12, b[9]),
          g = p(g, h, f, m, B, 17, b[10]),
          m = p(m, g, h, f, C, 22, b[11]),
          f = p(f, m, g, h, u, 7, b[12]),
          h = p(h, f, m, g, D, 12, b[13]),
          g = p(g, h, f, m, E, 17, b[14]),
          m = p(m, g, h, f, x, 22, b[15]),
          f = d(f, m, g, h, e, 5, b[16]),
          h = d(h, f, m, g, t, 9, b[17]),
          g = d(g, h, f, m, C, 14, b[18]),
          m = d(m, g, h, f, c, 20, b[19]),
          f = d(f, m, g, h, r, 5, b[20]),
          h = d(h, f, m, g, B, 9, b[21]),
          g = d(g, h, f, m, x, 14, b[22]),
          m = d(m, g, h, f, z, 20, b[23]),
          f = d(f, m, g, h, A, 5, b[24]),
          h = d(h, f, m, g, E, 9, b[25]),
          g = d(g, h, f, m, k, 14, b[26]),
          m = d(m, g, h, f, v, 20, b[27]),
          f = d(f, m, g, h, D, 5, b[28]),
          h = d(h, f, m, g, j, 9, b[29]),
          g = d(g, h, f, m, w, 14, b[30]),
          m = d(m, g, h, f, u, 20, b[31]),
          f = l(f, m, g, h, r, 4, b[32]),
          h = l(h, f, m, g, v, 11, b[33]),
          g = l(g, h, f, m, C, 16, b[34]),
          m = l(m, g, h, f, E, 23, b[35]),
          f = l(f, m, g, h, e, 4, b[36]),
          h = l(h, f, m, g, z, 11, b[37]),
          g = l(g, h, f, m, w, 16, b[38]),
          m = l(m, g, h, f, B, 23, b[39]),
          f = l(f, m, g, h, D, 4, b[40]),
          h = l(h, f, m, g, c, 11, b[41]),
          g = l(g, h, f, m, k, 16, b[42]),
          m = l(m, g, h, f, t, 23, b[43]),
          f = l(f, m, g, h, A, 4, b[44]),
          h = l(h, f, m, g, u, 11, b[45]),
          g = l(g, h, f, m, x, 16, b[46]),
          m = l(m, g, h, f, j, 23, b[47]),
          f = s(f, m, g, h, c, 6, b[48]),
          h = s(h, f, m, g, w, 10, b[49]),
          g = s(g, h, f, m, E, 15, b[50]),
          m = s(m, g, h, f, r, 21, b[51]),
          f = s(f, m, g, h, u, 6, b[52]),
          h = s(h, f, m, g, k, 10, b[53]),
          g = s(g, h, f, m, B, 15, b[54]),
          m = s(m, g, h, f, e, 21, b[55]),
          f = s(f, m, g, h, v, 6, b[56]),
          h = s(h, f, m, g, x, 10, b[57]),
          g = s(g, h, f, m, t, 15, b[58]),
          m = s(m, g, h, f, D, 21, b[59]),
          f = s(f, m, g, h, z, 6, b[60]),
          h = s(h, f, m, g, C, 10, b[61]),
          g = s(g, h, f, m, j, 15, b[62]),
          m = s(m, g, h, f, A, 21, b[63]);a[0] = a[0] + f | 0;a[1] = a[1] + m | 0;a[2] = a[2] + g | 0;a[3] = a[3] + h | 0;
    }, _doFinalize: function _doFinalize() {
      var b = this._data,
          n = b.words,
          a = 8 * this._nDataBytes,
          c = 8 * b.sigBytes;n[c >>> 5] |= 128 << 24 - c % 32;var e = u.floor(a / 4294967296);n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360;n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360;b.sigBytes = 4 * (n.length + 1);this._process();b = this._hash;n = b.words;for (a = 0; 4 > a; a++) {
        c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360;
      }return b;
    }, clone: function clone() {
      var b = v.clone.call(this);b._hash = this._hash.clone();return b;
    } });t.MD5 = v._createHelper(r);t.HmacMD5 = v._createHmacHelper(r);
})(Math);
(function () {
  var u = CryptoJS,
      p = u.lib,
      d = p.Base,
      l = p.WordArray,
      p = u.algo,
      s = p.EvpKDF = d.extend({ cfg: d.extend({ keySize: 4, hasher: p.MD5, iterations: 1 }), init: function init(d) {
      this.cfg = this.cfg.extend(d);
    }, compute: function compute(d, r) {
      for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) {
        n && s.update(n);var n = s.update(d).finalize(r);s.reset();for (var a = 1; a < p; a++) {
          n = s.finalize(n), s.reset();
        }b.concat(n);
      }b.sigBytes = 4 * q;return b;
    } });u.EvpKDF = function (d, l, p) {
    return s.create(p).compute(d, l);
  };
})();

CryptoJS.lib.Cipher || function (u) {
  var p = CryptoJS,
      d = p.lib,
      l = d.Base,
      s = d.WordArray,
      t = d.BufferedBlockAlgorithm,
      r = p.enc.Base64,
      w = p.algo.EvpKDF,
      v = d.Cipher = t.extend({ cfg: l.extend(), createEncryptor: function createEncryptor(e, a) {
      return this.create(this._ENC_XFORM_MODE, e, a);
    }, createDecryptor: function createDecryptor(e, a) {
      return this.create(this._DEC_XFORM_MODE, e, a);
    }, init: function init(e, a, b) {
      this.cfg = this.cfg.extend(b);this._xformMode = e;this._key = a;this.reset();
    }, reset: function reset() {
      t.reset.call(this);this._doReset();
    }, process: function process(e) {
      this._append(e);return this._process();
    },
    finalize: function finalize(e) {
      e && this._append(e);return this._doFinalize();
    }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function _createHelper(e) {
      return { encrypt: function encrypt(b, k, d) {
          return ("string" == typeof k ? c : a).encrypt(e, b, k, d);
        }, decrypt: function decrypt(b, k, d) {
          return ("string" == typeof k ? c : a).decrypt(e, b, k, d);
        } };
    } });d.StreamCipher = v.extend({ _doFinalize: function _doFinalize() {
      return this._process(!0);
    }, blockSize: 1 });var b = p.mode = {},
      x = function x(e, a, b) {
    var c = this._iv;c ? this._iv = u : c = this._prevBlock;for (var d = 0; d < b; d++) {
      e[a + d] ^= c[d];
    }
  },
      q = (d.BlockCipherMode = l.extend({ createEncryptor: function createEncryptor(e, a) {
      return this.Encryptor.create(e, a);
    }, createDecryptor: function createDecryptor(e, a) {
      return this.Decryptor.create(e, a);
    }, init: function init(e, a) {
      this._cipher = e;this._iv = a;
    } })).extend();q.Encryptor = q.extend({ processBlock: function processBlock(e, a) {
      var b = this._cipher,
          c = b.blockSize;x.call(this, e, a, c);b.encryptBlock(e, a);this._prevBlock = e.slice(a, a + c);
    } });q.Decryptor = q.extend({ processBlock: function processBlock(e, a) {
      var b = this._cipher,
          c = b.blockSize,
          d = e.slice(a, a + c);b.decryptBlock(e, a);x.call(this, e, a, c);this._prevBlock = d;
    } });b = b.CBC = q;q = (p.pad = {}).Pkcs7 = { pad: function pad(a, b) {
      for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4) {
        l.push(d);
      }c = s.create(l, c);a.concat(c);
    }, unpad: function unpad(a) {
      a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255;
    } };d.BlockCipher = v.extend({ cfg: v.cfg.extend({ mode: b, padding: q }), reset: function reset() {
      v.reset.call(this);var a = this.cfg,
          b = a.iv,
          a = a.mode;if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor;else c = a.createDecryptor, this._minBufferSize = 1;this._mode = c.call(a, this, b && b.words);
    }, _doProcessBlock: function _doProcessBlock(a, b) {
      this._mode.processBlock(a, b);
    }, _doFinalize: function _doFinalize() {
      var a = this.cfg.padding;if (this._xformMode == this._ENC_XFORM_MODE) {
        a.pad(this._data, this.blockSize);var b = this._process(!0);
      } else b = this._process(!0), a.unpad(b);return b;
    }, blockSize: 4 });var n = d.CipherParams = l.extend({ init: function init(a) {
      this.mixIn(a);
    }, toString: function toString(a) {
      return (a || this.formatter).stringify(this);
    } }),
      b = (p.format = {}).OpenSSL = { stringify: function stringify(a) {
      var b = a.ciphertext;a = a.salt;return (a ? s.create([1398893684, 1701076831]).concat(a).concat(b) : b).toString(r);
    }, parse: function parse(a) {
      a = r.parse(a);var b = a.words;if (1398893684 == b[0] && 1701076831 == b[1]) {
        var c = s.create(b.slice(2, 4));b.splice(0, 4);a.sigBytes -= 16;
      }return n.create({ ciphertext: a, salt: c });
    } },
      a = d.SerializableCipher = l.extend({ cfg: l.extend({ format: b }), encrypt: function encrypt(a, b, c, d) {
      d = this.cfg.extend(d);var l = a.createEncryptor(c, d);b = l.finalize(b);l = l.cfg;return n.create({ ciphertext: b, key: c, iv: l.iv, algorithm: a, mode: l.mode, padding: l.padding, blockSize: a.blockSize, formatter: d.format });
    },
    decrypt: function decrypt(a, b, c, d) {
      d = this.cfg.extend(d);b = this._parse(b, d.format);return a.createDecryptor(c, d).finalize(b.ciphertext);
    }, _parse: function _parse(a, b) {
      return "string" == typeof a ? b.parse(a, this) : a;
    } }),
      p = (p.kdf = {}).OpenSSL = { execute: function execute(a, b, c, d) {
      d || (d = s.random(8));a = w.create({ keySize: b + c }).compute(a, d);c = s.create(a.words.slice(b), 4 * c);a.sigBytes = 4 * b;return n.create({ key: a, iv: c, salt: d });
    } },
      c = d.PasswordBasedCipher = a.extend({ cfg: a.cfg.extend({ kdf: p }), encrypt: function encrypt(b, c, d, l) {
      l = this.cfg.extend(l);d = l.kdf.execute(d, b.keySize, b.ivSize);l.iv = d.iv;b = a.encrypt.call(this, b, c, d.key, l);b.mixIn(d);return b;
    }, decrypt: function decrypt(b, c, d, l) {
      l = this.cfg.extend(l);c = this._parse(c, l.format);d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt);l.iv = d.iv;return a.decrypt.call(this, b, c, d.key, l);
    } });
}();

(function () {
  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++) {
    a[c] = 128 > c ? c << 1 : c << 1 ^ 283;
  }for (var e = 0, j = 0, c = 0; 256 > c; c++) {
    var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4,
        k = k >>> 8 ^ k & 255 ^ 99;l[e] = k;s[k] = e;var z = a[e],
        F = a[z],
        G = a[F],
        y = 257 * a[k] ^ 16843008 * k;t[e] = y << 24 | y >>> 8;r[e] = y << 16 | y >>> 16;w[e] = y << 8 | y >>> 24;v[e] = y;y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e;b[k] = y << 24 | y >>> 8;x[k] = y << 16 | y >>> 16;q[k] = y << 8 | y >>> 24;n[k] = y;e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1;
  }var H = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
      d = d.AES = p.extend({ _doReset: function _doReset() {
      for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++) {
        if (j < d) e[j] = c[j];else {
          var k = e[j - 1];j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24);e[j] = e[j - d] ^ k;
        }
      }c = this._invKeySchedule = [];for (d = 0; d < a; d++) {
        j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>> 8 & 255]] ^ n[l[k & 255]];
      }
    }, encryptBlock: function encryptBlock(a, b) {
      this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l);
    }, decryptBlock: function decryptBlock(a, c) {
      var d = a[c + 1];a[c + 1] = a[c + 3];a[c + 3] = d;this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s);d = a[c + 1];a[c + 1] = a[c + 3];a[c + 3] = d;
    }, _doCryptBlock: function _doCryptBlock(a, b, c, d, e, j, l, f) {
      for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++) {
        var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++],
            s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++],
            t = d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++],
            n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++],
            g = q,
            h = s,
            k = t;
      }q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++];s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++];t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++];n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++];a[b] = q;a[b + 1] = s;a[b + 2] = t;a[b + 3] = n;
    }, keySize: 8 });u.AES = p._createHelper(d);
})();

CryptoJS.mode.ECB = function () {
  var ECB = CryptoJS.lib.BlockCipherMode.extend();

  ECB.Encryptor = ECB.extend({
    processBlock: function processBlock(words, offset) {
      this._cipher.encryptBlock(words, offset);
    }
  });

  ECB.Decryptor = ECB.extend({
    processBlock: function processBlock(words, offset) {
      this._cipher.decryptBlock(words, offset);
    }
  });

  return ECB;
}();

module.exports = CryptoJS;
//# sourceMappingURL=hmac-sha256.js.map


/***/ }),
/* 363 */
/*!**************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/components/subscription_manager.js ***!
  \**************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _cryptography = __webpack_require__(/*! ../components/cryptography */ 134);

var _cryptography2 = _interopRequireDefault(_cryptography);

var _config2 = __webpack_require__(/*! ../components/config */ 29);

var _config3 = _interopRequireDefault(_config2);

var _listener_manager = __webpack_require__(/*! ../components/listener_manager */ 135);

var _listener_manager2 = _interopRequireDefault(_listener_manager);

var _reconnection_manager = __webpack_require__(/*! ../components/reconnection_manager */ 364);

var _reconnection_manager2 = _interopRequireDefault(_reconnection_manager);

var _deduping_manager = __webpack_require__(/*! ../components/deduping_manager */ 365);

var _deduping_manager2 = _interopRequireDefault(_deduping_manager);

var _utils = __webpack_require__(/*! ../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

var _flow_interfaces = __webpack_require__(/*! ../flow_interfaces */ 3);

var _categories = __webpack_require__(/*! ../constants/categories */ 57);

var _categories2 = _interopRequireDefault(_categories);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _class = function () {
  function _class(_ref) {
    var subscribeEndpoint = _ref.subscribeEndpoint,
        leaveEndpoint = _ref.leaveEndpoint,
        heartbeatEndpoint = _ref.heartbeatEndpoint,
        setStateEndpoint = _ref.setStateEndpoint,
        timeEndpoint = _ref.timeEndpoint,
        config = _ref.config,
        crypto = _ref.crypto,
        listenerManager = _ref.listenerManager;

    _classCallCheck(this, _class);

    this._listenerManager = listenerManager;
    this._config = config;

    this._leaveEndpoint = leaveEndpoint;
    this._heartbeatEndpoint = heartbeatEndpoint;
    this._setStateEndpoint = setStateEndpoint;
    this._subscribeEndpoint = subscribeEndpoint;

    this._crypto = crypto;

    this._channels = {};
    this._presenceChannels = {};

    this._channelGroups = {};
    this._presenceChannelGroups = {};

    this._pendingChannelSubscriptions = [];
    this._pendingChannelGroupSubscriptions = [];

    this._currentTimetoken = 0;
    this._lastTimetoken = 0;
    this._storedTimetoken = null;

    this._subscriptionStatusAnnounced = false;

    this._isOnline = true;

    this._reconnectionManager = new _reconnection_manager2.default({ timeEndpoint: timeEndpoint });
    this._dedupingManager = new _deduping_manager2.default({ config: config });
  }

  _createClass(_class, [{
    key: 'adaptStateChange',
    value: function adaptStateChange(args, callback) {
      var _this = this;

      var state = args.state,
          _args$channels = args.channels,
          channels = _args$channels === undefined ? [] : _args$channels,
          _args$channelGroups = args.channelGroups,
          channelGroups = _args$channelGroups === undefined ? [] : _args$channelGroups;


      channels.forEach(function (channel) {
        if (channel in _this._channels) _this._channels[channel].state = state;
      });

      channelGroups.forEach(function (channelGroup) {
        if (channelGroup in _this._channelGroups) _this._channelGroups[channelGroup].state = state;
      });

      return this._setStateEndpoint({ state: state, channels: channels, channelGroups: channelGroups }, callback);
    }
  }, {
    key: 'adaptSubscribeChange',
    value: function adaptSubscribeChange(args) {
      var _this2 = this;

      var timetoken = args.timetoken,
          _args$channels2 = args.channels,
          channels = _args$channels2 === undefined ? [] : _args$channels2,
          _args$channelGroups2 = args.channelGroups,
          channelGroups = _args$channelGroups2 === undefined ? [] : _args$channelGroups2,
          _args$withPresence = args.withPresence,
          withPresence = _args$withPresence === undefined ? false : _args$withPresence;


      if (!this._config.subscribeKey || this._config.subscribeKey === '') {
        if (console && console.log) console.log('subscribe key missing; aborting subscribe');
        return;
      }

      if (timetoken) {
        this._lastTimetoken = this._currentTimetoken;
        this._currentTimetoken = timetoken;
      }

      if (this._currentTimetoken !== '0') {
        this._storedTimetoken = this._currentTimetoken;
        this._currentTimetoken = 0;
      }

      channels.forEach(function (channel) {
        _this2._channels[channel] = { state: {} };
        if (withPresence) _this2._presenceChannels[channel] = {};

        _this2._pendingChannelSubscriptions.push(channel);
      });

      channelGroups.forEach(function (channelGroup) {
        _this2._channelGroups[channelGroup] = { state: {} };
        if (withPresence) _this2._presenceChannelGroups[channelGroup] = {};

        _this2._pendingChannelGroupSubscriptions.push(channelGroup);
      });

      this._subscriptionStatusAnnounced = false;
      this.reconnect();
    }
  }, {
    key: 'adaptUnsubscribeChange',
    value: function adaptUnsubscribeChange(args, isOffline) {
      var _this3 = this;

      var _args$channels3 = args.channels,
          channels = _args$channels3 === undefined ? [] : _args$channels3,
          _args$channelGroups3 = args.channelGroups,
          channelGroups = _args$channelGroups3 === undefined ? [] : _args$channelGroups3;

      var actualChannels = [];
      var actualChannelGroups = [];


      channels.forEach(function (channel) {
        if (channel in _this3._channels) {
          delete _this3._channels[channel];
          actualChannels.push(channel);
        }
        if (channel in _this3._presenceChannels) {
          delete _this3._presenceChannels[channel];
          actualChannels.push(channel);
        }
      });

      channelGroups.forEach(function (channelGroup) {
        if (channelGroup in _this3._channelGroups) {
          delete _this3._channelGroups[channelGroup];
          actualChannelGroups.push(channelGroup);
        }
        if (channelGroup in _this3._presenceChannelGroups) {
          delete _this3._channelGroups[channelGroup];
          actualChannelGroups.push(channelGroup);
        }
      });

      if (actualChannels.length === 0 && actualChannelGroups.length === 0) {
        return;
      }

      if (this._config.suppressLeaveEvents === false && !isOffline) {
        this._leaveEndpoint({ channels: actualChannels, channelGroups: actualChannelGroups }, function (status) {
          status.affectedChannels = actualChannels;
          status.affectedChannelGroups = actualChannelGroups;
          status.currentTimetoken = _this3._currentTimetoken;
          status.lastTimetoken = _this3._lastTimetoken;
          _this3._listenerManager.announceStatus(status);
        });
      }

      if (Object.keys(this._channels).length === 0 && Object.keys(this._presenceChannels).length === 0 && Object.keys(this._channelGroups).length === 0 && Object.keys(this._presenceChannelGroups).length === 0) {
        this._lastTimetoken = 0;
        this._currentTimetoken = 0;
        this._storedTimetoken = null;
        this._region = null;
        this._reconnectionManager.stopPolling();
      }

      this.reconnect();
    }
  }, {
    key: 'unsubscribeAll',
    value: function unsubscribeAll(isOffline) {
      this.adaptUnsubscribeChange({ channels: this.getSubscribedChannels(), channelGroups: this.getSubscribedChannelGroups() }, isOffline);
    }
  }, {
    key: 'getSubscribedChannels',
    value: function getSubscribedChannels() {
      return Object.keys(this._channels);
    }
  }, {
    key: 'getSubscribedChannelGroups',
    value: function getSubscribedChannelGroups() {
      return Object.keys(this._channelGroups);
    }
  }, {
    key: 'reconnect',
    value: function reconnect() {
      this._startSubscribeLoop();
      this._registerHeartbeatTimer();
    }
  }, {
    key: 'disconnect',
    value: function disconnect() {
      this._stopSubscribeLoop();
      this._stopHeartbeatTimer();
      this._reconnectionManager.stopPolling();
    }
  }, {
    key: '_registerHeartbeatTimer',
    value: function _registerHeartbeatTimer() {
      this._stopHeartbeatTimer();

      if (this._config.getHeartbeatInterval() === 0) {
        return;
      }

      this._performHeartbeatLoop();
      this._heartbeatTimer = setInterval(this._performHeartbeatLoop.bind(this), this._config.getHeartbeatInterval() * 1000);
    }
  }, {
    key: '_stopHeartbeatTimer',
    value: function _stopHeartbeatTimer() {
      if (this._heartbeatTimer) {
        clearInterval(this._heartbeatTimer);
        this._heartbeatTimer = null;
      }
    }
  }, {
    key: '_performHeartbeatLoop',
    value: function _performHeartbeatLoop() {
      var _this4 = this;

      var presenceChannels = Object.keys(this._channels);
      var presenceChannelGroups = Object.keys(this._channelGroups);
      var presenceState = {};

      if (presenceChannels.length === 0 && presenceChannelGroups.length === 0) {
        return;
      }

      presenceChannels.forEach(function (channel) {
        var channelState = _this4._channels[channel].state;
        if (Object.keys(channelState).length) presenceState[channel] = channelState;
      });

      presenceChannelGroups.forEach(function (channelGroup) {
        var channelGroupState = _this4._channelGroups[channelGroup].state;
        if (Object.keys(channelGroupState).length) presenceState[channelGroup] = channelGroupState;
      });

      var onHeartbeat = function onHeartbeat(status) {
        if (status.error && _this4._config.announceFailedHeartbeats) {
          _this4._listenerManager.announceStatus(status);
        }

        if (status.error && _this4._config.autoNetworkDetection && _this4._isOnline) {
          _this4._isOnline = false;
          _this4.disconnect();
          _this4._listenerManager.announceNetworkDown();
          _this4.reconnect();
        }

        if (!status.error && _this4._config.announceSuccessfulHeartbeats) {
          _this4._listenerManager.announceStatus(status);
        }
      };

      this._heartbeatEndpoint({
        channels: presenceChannels,
        channelGroups: presenceChannelGroups,
        state: presenceState }, onHeartbeat.bind(this));
    }
  }, {
    key: '_startSubscribeLoop',
    value: function _startSubscribeLoop() {
      this._stopSubscribeLoop();
      var channels = [];
      var channelGroups = [];

      Object.keys(this._channels).forEach(function (channel) {
        return channels.push(channel);
      });
      Object.keys(this._presenceChannels).forEach(function (channel) {
        return channels.push(channel + '-pnpres');
      });

      Object.keys(this._channelGroups).forEach(function (channelGroup) {
        return channelGroups.push(channelGroup);
      });
      Object.keys(this._presenceChannelGroups).forEach(function (channelGroup) {
        return channelGroups.push(channelGroup + '-pnpres');
      });

      if (channels.length === 0 && channelGroups.length === 0) {
        return;
      }

      var subscribeArgs = {
        channels: channels,
        channelGroups: channelGroups,
        timetoken: this._currentTimetoken,
        filterExpression: this._config.filterExpression,
        region: this._region
      };

      this._subscribeCall = this._subscribeEndpoint(subscribeArgs, this._processSubscribeResponse.bind(this));
    }
  }, {
    key: '_processSubscribeResponse',
    value: function _processSubscribeResponse(status, payload) {
      var _this5 = this;

      if (status.error) {
        if (status.category === _categories2.default.PNTimeoutCategory) {
          this._startSubscribeLoop();
        } else if (status.category === _categories2.default.PNNetworkIssuesCategory) {
          this.disconnect();

          if (status.error && this._config.autoNetworkDetection && this._isOnline) {
            this._isOnline = false;
            this._listenerManager.announceNetworkDown();
          }

          this._reconnectionManager.onReconnection(function () {
            if (_this5._config.autoNetworkDetection && !_this5._isOnline) {
              _this5._isOnline = true;
              _this5._listenerManager.announceNetworkUp();
            }
            _this5.reconnect();
            _this5._subscriptionStatusAnnounced = true;
            var reconnectedAnnounce = {
              category: _categories2.default.PNReconnectedCategory,
              operation: status.operation,
              lastTimetoken: _this5._lastTimetoken,
              currentTimetoken: _this5._currentTimetoken
            };
            _this5._listenerManager.announceStatus(reconnectedAnnounce);
          });

          this._reconnectionManager.startPolling();
          this._listenerManager.announceStatus(status);
        } else if (status.category === _categories2.default.PNBadRequestCategory) {
          this._stopHeartbeatTimer();
          this._listenerManager.announceStatus(status);
        } else {
          this._listenerManager.announceStatus(status);
        }

        return;
      }

      if (this._storedTimetoken) {
        this._currentTimetoken = this._storedTimetoken;
        this._storedTimetoken = null;
      } else {
        this._lastTimetoken = this._currentTimetoken;
        this._currentTimetoken = payload.metadata.timetoken;
      }

      if (!this._subscriptionStatusAnnounced) {
        var connectedAnnounce = {};
        connectedAnnounce.category = _categories2.default.PNConnectedCategory;
        connectedAnnounce.operation = status.operation;
        connectedAnnounce.affectedChannels = this._pendingChannelSubscriptions;
        connectedAnnounce.subscribedChannels = this.getSubscribedChannels();
        connectedAnnounce.affectedChannelGroups = this._pendingChannelGroupSubscriptions;
        connectedAnnounce.lastTimetoken = this._lastTimetoken;
        connectedAnnounce.currentTimetoken = this._currentTimetoken;
        this._subscriptionStatusAnnounced = true;
        this._listenerManager.announceStatus(connectedAnnounce);

        this._pendingChannelSubscriptions = [];
        this._pendingChannelGroupSubscriptions = [];
      }

      var messages = payload.messages || [];
      var _config = this._config,
          requestMessageCountThreshold = _config.requestMessageCountThreshold,
          dedupeOnSubscribe = _config.dedupeOnSubscribe;


      if (requestMessageCountThreshold && messages.length >= requestMessageCountThreshold) {
        var countAnnouncement = {};
        countAnnouncement.category = _categories2.default.PNRequestMessageCountExceededCategory;
        countAnnouncement.operation = status.operation;
        this._listenerManager.announceStatus(countAnnouncement);
      }

      messages.forEach(function (message) {
        var channel = message.channel;
        var subscriptionMatch = message.subscriptionMatch;
        var publishMetaData = message.publishMetaData;

        if (channel === subscriptionMatch) {
          subscriptionMatch = null;
        }

        if (dedupeOnSubscribe) {
          if (_this5._dedupingManager.isDuplicate(message)) {
            return;
          } else {
            _this5._dedupingManager.addEntry(message);
          }
        }

        if (_utils2.default.endsWith(message.channel, '-pnpres')) {
          var announce = {};
          announce.channel = null;
          announce.subscription = null;

          announce.actualChannel = subscriptionMatch != null ? channel : null;
          announce.subscribedChannel = subscriptionMatch != null ? subscriptionMatch : channel;


          if (channel) {
            announce.channel = channel.substring(0, channel.lastIndexOf('-pnpres'));
          }

          if (subscriptionMatch) {
            announce.subscription = subscriptionMatch.substring(0, subscriptionMatch.lastIndexOf('-pnpres'));
          }

          announce.action = message.payload.action;
          announce.state = message.payload.data;
          announce.timetoken = publishMetaData.publishTimetoken;
          announce.occupancy = message.payload.occupancy;
          announce.uuid = message.payload.uuid;
          announce.timestamp = message.payload.timestamp;

          if (message.payload.join) {
            announce.join = message.payload.join;
          }

          if (message.payload.leave) {
            announce.leave = message.payload.leave;
          }

          if (message.payload.timeout) {
            announce.timeout = message.payload.timeout;
          }

          _this5._listenerManager.announcePresence(announce);
        } else {
          var _announce = {};
          _announce.channel = null;
          _announce.subscription = null;

          _announce.actualChannel = subscriptionMatch != null ? channel : null;
          _announce.subscribedChannel = subscriptionMatch != null ? subscriptionMatch : channel;


          _announce.channel = channel;
          _announce.subscription = subscriptionMatch;
          _announce.timetoken = publishMetaData.publishTimetoken;
          _announce.publisher = message.issuingClientId;

          if (message.userMetadata) {
            _announce.userMetadata = message.userMetadata;
          }

          if (_this5._config.cipherKey) {
            _announce.message = _this5._crypto.decrypt(message.payload);
          } else {
            _announce.message = message.payload;
          }

          _this5._listenerManager.announceMessage(_announce);
        }
      });

      this._region = payload.metadata.region;
      this._startSubscribeLoop();
    }
  }, {
    key: '_stopSubscribeLoop',
    value: function _stopSubscribeLoop() {
      if (this._subscribeCall) {
        if (typeof this._subscribeCall.abort === 'function') {
          this._subscribeCall.abort();
        }
        this._subscribeCall = null;
      }
    }
  }]);

  return _class;
}();

exports.default = _class;
module.exports = exports['default'];
//# sourceMappingURL=subscription_manager.js.map


/***/ }),
/* 364 */
/*!**************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/components/reconnection_manager.js ***!
  \**************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _time = __webpack_require__(/*! ../endpoints/time */ 136);

var _time2 = _interopRequireDefault(_time);

var _flow_interfaces = __webpack_require__(/*! ../flow_interfaces */ 3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _class = function () {
  function _class(_ref) {
    var timeEndpoint = _ref.timeEndpoint;

    _classCallCheck(this, _class);

    this._timeEndpoint = timeEndpoint;
  }

  _createClass(_class, [{
    key: 'onReconnection',
    value: function onReconnection(reconnectionCallback) {
      this._reconnectionCallback = reconnectionCallback;
    }
  }, {
    key: 'startPolling',
    value: function startPolling() {
      this._timeTimer = setInterval(this._performTimeLoop.bind(this), 3000);
    }
  }, {
    key: 'stopPolling',
    value: function stopPolling() {
      clearInterval(this._timeTimer);
    }
  }, {
    key: '_performTimeLoop',
    value: function _performTimeLoop() {
      var _this = this;

      this._timeEndpoint(function (status) {
        if (!status.error) {
          clearInterval(_this._timeTimer);
          _this._reconnectionCallback();
        }
      });
    }
  }]);

  return _class;
}();

exports.default = _class;
module.exports = exports['default'];
//# sourceMappingURL=reconnection_manager.js.map


/***/ }),
/* 365 */
/*!**********************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/components/deduping_manager.js ***!
  \**********************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(/*! ../components/config */ 29);

var _config2 = _interopRequireDefault(_config);

var _flow_interfaces = __webpack_require__(/*! ../flow_interfaces */ 3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var hashCode = function hashCode(payload) {
  var hash = 0;
  if (payload.length === 0) return hash;
  for (var i = 0; i < payload.length; i += 1) {
    var character = payload.charCodeAt(i);
    hash = (hash << 5) - hash + character;
    hash = hash & hash;
  }
  return hash;
};

var _class = function () {
  function _class(_ref) {
    var config = _ref.config;

    _classCallCheck(this, _class);

    this.hashHistory = [];
    this._config = config;
  }

  _createClass(_class, [{
    key: 'getKey',
    value: function getKey(message) {
      var hashedPayload = hashCode(JSON.stringify(message.payload)).toString();
      var timetoken = message.publishMetaData.publishTimetoken;
      return timetoken + '-' + hashedPayload;
    }
  }, {
    key: 'isDuplicate',
    value: function isDuplicate(message) {
      return this.hashHistory.includes(this.getKey(message));
    }
  }, {
    key: 'addEntry',
    value: function addEntry(message) {
      if (this.hashHistory.length >= this._config.maximumCacheSize) {
        this.hashHistory.shift();
      }

      this.hashHistory.push(this.getKey(message));
    }
  }, {
    key: 'clearHistory',
    value: function clearHistory() {
      this.hashHistory = [];
    }
  }]);

  return _class;
}();

exports.default = _class;
module.exports = exports['default'];
//# sourceMappingURL=deduping_manager.js.map


/***/ }),
/* 366 */
/*!**************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/components/endpoint.js ***!
  \**************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (modules, endpoint) {
  var networking = modules.networking,
      config = modules.config;

  var callback = null;
  var promiseComponent = null;
  var incomingParams = {};

  if (endpoint.getOperation() === _operations2.default.PNTimeOperation || endpoint.getOperation() === _operations2.default.PNChannelGroupsOperation) {
    callback = arguments.length <= 2 ? undefined : arguments[2];
  } else {
    incomingParams = arguments.length <= 2 ? undefined : arguments[2];
    callback = arguments.length <= 3 ? undefined : arguments[3];
  }

  if (typeof Promise !== 'undefined' && !callback) {
    promiseComponent = _utils2.default.createPromise();
  }

  var validationResult = endpoint.validateParams(modules, incomingParams);

  if (validationResult) {
    if (callback) {
      return callback(createValidationError(validationResult));
    } else if (promiseComponent) {
      promiseComponent.reject(new PubNubError('Validation failed, check status for details', createValidationError(validationResult)));
      return promiseComponent.promise;
    }
    return;
  }

  var outgoingParams = endpoint.prepareParams(modules, incomingParams);
  var url = decideURL(endpoint, modules, incomingParams);
  var callInstance = void 0;
  var networkingParams = { url: url,
    operation: endpoint.getOperation(),
    timeout: endpoint.getRequestTimeout(modules)
  };

  outgoingParams.uuid = config.UUID;
  outgoingParams.pnsdk = generatePNSDK(config);

  if (config.useInstanceId) {
    outgoingParams.instanceid = config.instanceId;
  }

  if (config.useRequestId) {
    outgoingParams.requestid = _uuid2.default.createUUID();
  }

  if (endpoint.isAuthSupported() && config.getAuthKey()) {
    outgoingParams.auth = config.getAuthKey();
  }

  if (config.secretKey) {
    signRequest(modules, url, outgoingParams);
  }

  var onResponse = function onResponse(status, payload) {
    if (status.error) {
      if (callback) {
        callback(status);
      } else if (promiseComponent) {
        promiseComponent.reject(new PubNubError('PubNub call failed, check status for details', status));
      }
      return;
    }

    var parsedPayload = endpoint.handleResponse(modules, payload, incomingParams);

    if (callback) {
      callback(status, parsedPayload);
    } else if (promiseComponent) {
      promiseComponent.fulfill(parsedPayload);
    }
  };

  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {
    var payload = endpoint.postPayload(modules, incomingParams);
    callInstance = networking.POST(outgoingParams, payload, networkingParams, onResponse);
  } else if (endpoint.useDelete && endpoint.useDelete()) {
    callInstance = networking.DELETE(outgoingParams, networkingParams, onResponse);
  } else {
    callInstance = networking.GET(outgoingParams, networkingParams, onResponse);
  }

  if (endpoint.getOperation() === _operations2.default.PNSubscribeOperation) {
    return callInstance;
  }

  if (promiseComponent) {
    return promiseComponent.promise;
  }
};

var _uuid = __webpack_require__(/*! ./uuid */ 90);

var _uuid2 = _interopRequireDefault(_uuid);

var _flow_interfaces = __webpack_require__(/*! ../flow_interfaces */ 3);

var _utils = __webpack_require__(/*! ../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

var _config = __webpack_require__(/*! ./config */ 29);

var _config2 = _interopRequireDefault(_config);

var _operations = __webpack_require__(/*! ../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PubNubError = function (_Error) {
  _inherits(PubNubError, _Error);

  function PubNubError(message, status) {
    _classCallCheck(this, PubNubError);

    var _this = _possibleConstructorReturn(this, (PubNubError.__proto__ || Object.getPrototypeOf(PubNubError)).call(this, message));

    _this.name = _this.constructor.name;
    _this.status = status;
    _this.message = message;
    return _this;
  }

  return PubNubError;
}(Error);

function createError(errorPayload, type) {
  errorPayload.type = type;
  errorPayload.error = true;
  return errorPayload;
}

function createValidationError(message) {
  return createError({ message: message }, 'validationError');
}

function decideURL(endpoint, modules, incomingParams) {
  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {
    return endpoint.postURL(modules, incomingParams);
  } else {
    return endpoint.getURL(modules, incomingParams);
  }
}

function generatePNSDK(config) {
  if (config.sdkName) {
    return config.sdkName;
  }

  var base = 'PubNub-JS-' + config.sdkFamily;

  if (config.partnerId) {
    base += '-' + config.partnerId;
  }

  base += '/' + config.getVersion();

  return base;
}

function signRequest(modules, url, outgoingParams) {
  var config = modules.config,
      crypto = modules.crypto;


  outgoingParams.timestamp = Math.floor(new Date().getTime() / 1000);
  var signInput = config.subscribeKey + '\n' + config.publishKey + '\n' + url + '\n';
  signInput += _utils2.default.signPamFromParams(outgoingParams);

  var signature = crypto.HMACSHA256(signInput);
  signature = signature.replace(/\+/g, '-');
  signature = signature.replace(/\//g, '_');

  outgoingParams.signature = signature;
}

module.exports = exports['default'];
//# sourceMappingURL=endpoint.js.map


/***/ }),
/* 367 */
/*!********************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/channel_groups/add_channels.js ***!
  \********************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNAddChannelsToGroupOperation;
}

function validateParams(modules, incomingParams) {
  var channels = incomingParams.channels,
      channelGroup = incomingParams.channelGroup;
  var config = modules.config;


  if (!channelGroup) return 'Missing Channel Group';
  if (!channels || channels.length === 0) return 'Missing Channels';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var channelGroup = incomingParams.channelGroup;
  var config = modules.config;

  return '/v1/channel-registration/sub-key/' + config.subscribeKey + '/channel-group/' + _utils2.default.encodeString(channelGroup);
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann;


  return {
    add: channels.join(',')
  };
}

function handleResponse() {
  return {};
}
//# sourceMappingURL=add_channels.js.map


/***/ }),
/* 368 */
/*!***********************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/channel_groups/remove_channels.js ***!
  \***********************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNRemoveChannelsFromGroupOperation;
}

function validateParams(modules, incomingParams) {
  var channels = incomingParams.channels,
      channelGroup = incomingParams.channelGroup;
  var config = modules.config;


  if (!channelGroup) return 'Missing Channel Group';
  if (!channels || channels.length === 0) return 'Missing Channels';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var channelGroup = incomingParams.channelGroup;
  var config = modules.config;

  return '/v1/channel-registration/sub-key/' + config.subscribeKey + '/channel-group/' + _utils2.default.encodeString(channelGroup);
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann;


  return {
    remove: channels.join(',')
  };
}

function handleResponse() {
  return {};
}
//# sourceMappingURL=remove_channels.js.map


/***/ }),
/* 369 */
/*!********************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/channel_groups/delete_group.js ***!
  \********************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.isAuthSupported = isAuthSupported;
exports.getRequestTimeout = getRequestTimeout;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNRemoveGroupOperation;
}

function validateParams(modules, incomingParams) {
  var channelGroup = incomingParams.channelGroup;
  var config = modules.config;


  if (!channelGroup) return 'Missing Channel Group';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var channelGroup = incomingParams.channelGroup;
  var config = modules.config;

  return '/v1/channel-registration/sub-key/' + config.subscribeKey + '/channel-group/' + _utils2.default.encodeString(channelGroup) + '/remove';
}

function isAuthSupported() {
  return true;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function prepareParams() {
  return {};
}

function handleResponse() {
  return {};
}
//# sourceMappingURL=delete_group.js.map


/***/ }),
/* 370 */
/*!*******************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/channel_groups/list_groups.js ***!
  \*******************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNChannelGroupsOperation;
}

function validateParams(modules) {
  var config = modules.config;


  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules) {
  var config = modules.config;

  return '/v1/channel-registration/sub-key/' + config.subscribeKey + '/channel-group';
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams() {
  return {};
}

function handleResponse(modules, serverResponse) {
  return {
    groups: serverResponse.payload.groups
  };
}
//# sourceMappingURL=list_groups.js.map


/***/ }),
/* 371 */
/*!*********************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/channel_groups/list_channels.js ***!
  \*********************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNChannelsForGroupOperation;
}

function validateParams(modules, incomingParams) {
  var channelGroup = incomingParams.channelGroup;
  var config = modules.config;


  if (!channelGroup) return 'Missing Channel Group';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var channelGroup = incomingParams.channelGroup;
  var config = modules.config;

  return '/v1/channel-registration/sub-key/' + config.subscribeKey + '/channel-group/' + _utils2.default.encodeString(channelGroup);
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams() {
  return {};
}

function handleResponse(modules, serverResponse) {
  return {
    channels: serverResponse.payload.channels
  };
}
//# sourceMappingURL=list_channels.js.map


/***/ }),
/* 372 */
/*!***************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/push/add_push_channels.js ***!
  \***************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNPushNotificationEnabledChannelsOperation;
}

function validateParams(modules, incomingParams) {
  var device = incomingParams.device,
      pushGateway = incomingParams.pushGateway,
      channels = incomingParams.channels;
  var config = modules.config;


  if (!device) return 'Missing Device ID (device)';
  if (!pushGateway) return 'Missing GW Type (pushGateway: gcm or apns)';
  if (!channels || channels.length === 0) return 'Missing Channels';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var device = incomingParams.device;
  var config = modules.config;

  return '/v1/push/sub-key/' + config.subscribeKey + '/devices/' + device;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var pushGateway = incomingParams.pushGateway,
      _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann;

  return { type: pushGateway, add: channels.join(',') };
}

function handleResponse() {
  return {};
}
//# sourceMappingURL=add_push_channels.js.map


/***/ }),
/* 373 */
/*!******************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/push/remove_push_channels.js ***!
  \******************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNPushNotificationEnabledChannelsOperation;
}

function validateParams(modules, incomingParams) {
  var device = incomingParams.device,
      pushGateway = incomingParams.pushGateway,
      channels = incomingParams.channels;
  var config = modules.config;


  if (!device) return 'Missing Device ID (device)';
  if (!pushGateway) return 'Missing GW Type (pushGateway: gcm or apns)';
  if (!channels || channels.length === 0) return 'Missing Channels';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var device = incomingParams.device;
  var config = modules.config;

  return '/v1/push/sub-key/' + config.subscribeKey + '/devices/' + device;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var pushGateway = incomingParams.pushGateway,
      _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann;

  return { type: pushGateway, remove: channels.join(',') };
}

function handleResponse() {
  return {};
}
//# sourceMappingURL=remove_push_channels.js.map


/***/ }),
/* 374 */
/*!****************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/push/list_push_channels.js ***!
  \****************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNPushNotificationEnabledChannelsOperation;
}

function validateParams(modules, incomingParams) {
  var device = incomingParams.device,
      pushGateway = incomingParams.pushGateway;
  var config = modules.config;


  if (!device) return 'Missing Device ID (device)';
  if (!pushGateway) return 'Missing GW Type (pushGateway: gcm or apns)';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var device = incomingParams.device;
  var config = modules.config;

  return '/v1/push/sub-key/' + config.subscribeKey + '/devices/' + device;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var pushGateway = incomingParams.pushGateway;

  return { type: pushGateway };
}

function handleResponse(modules, serverResponse) {
  return { channels: serverResponse };
}
//# sourceMappingURL=list_push_channels.js.map


/***/ }),
/* 375 */
/*!***********************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/push/remove_device.js ***!
  \***********************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNRemoveAllPushNotificationsOperation;
}

function validateParams(modules, incomingParams) {
  var device = incomingParams.device,
      pushGateway = incomingParams.pushGateway;
  var config = modules.config;


  if (!device) return 'Missing Device ID (device)';
  if (!pushGateway) return 'Missing GW Type (pushGateway: gcm or apns)';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var device = incomingParams.device;
  var config = modules.config;

  return '/v1/push/sub-key/' + config.subscribeKey + '/devices/' + device + '/remove';
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var pushGateway = incomingParams.pushGateway;

  return { type: pushGateway };
}

function handleResponse() {
  return {};
}
//# sourceMappingURL=remove_device.js.map


/***/ }),
/* 376 */
/*!*******************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/presence/leave.js ***!
  \*******************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNUnsubscribeOperation;
}

function validateParams(modules) {
  var config = modules.config;


  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var config = modules.config;
  var _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann;

  var stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';
  return '/v2/presence/sub-key/' + config.subscribeKey + '/channel/' + _utils2.default.encodeString(stringifiedChannels) + '/leave';
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var _incomingParams$chann2 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann2 === undefined ? [] : _incomingParams$chann2;

  var params = {};

  if (channelGroups.length > 0) {
    params['channel-group'] = channelGroups.join(',');
  }

  return params;
}

function handleResponse() {
  return {};
}
//# sourceMappingURL=leave.js.map


/***/ }),
/* 377 */
/*!***********************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/presence/where_now.js ***!
  \***********************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNWhereNowOperation;
}

function validateParams(modules) {
  var config = modules.config;


  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var config = modules.config;
  var _incomingParams$uuid = incomingParams.uuid,
      uuid = _incomingParams$uuid === undefined ? config.UUID : _incomingParams$uuid;

  return '/v2/presence/sub-key/' + config.subscribeKey + '/uuid/' + uuid;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams() {
  return {};
}

function handleResponse(modules, serverResponse) {
  if (!serverResponse.payload) {
    return { channels: [] };
  }
  return { channels: serverResponse.payload.channels };
}
//# sourceMappingURL=where_now.js.map


/***/ }),
/* 378 */
/*!***********************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/presence/heartbeat.js ***!
  \***********************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.isAuthSupported = isAuthSupported;
exports.getRequestTimeout = getRequestTimeout;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNHeartbeatOperation;
}

function validateParams(modules) {
  var config = modules.config;


  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var config = modules.config;
  var _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann;

  var stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';
  return '/v2/presence/sub-key/' + config.subscribeKey + '/channel/' + _utils2.default.encodeString(stringifiedChannels) + '/heartbeat';
}

function isAuthSupported() {
  return true;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function prepareParams(modules, incomingParams) {
  var _incomingParams$chann2 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann2 === undefined ? [] : _incomingParams$chann2,
      _incomingParams$state = incomingParams.state,
      state = _incomingParams$state === undefined ? {} : _incomingParams$state;
  var config = modules.config;

  var params = {};

  if (channelGroups.length > 0) {
    params['channel-group'] = channelGroups.join(',');
  }

  params.state = JSON.stringify(state);
  params.heartbeat = config.getPresenceTimeout();
  return params;
}

function handleResponse() {
  return {};
}
//# sourceMappingURL=heartbeat.js.map


/***/ }),
/* 379 */
/*!***********************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/presence/get_state.js ***!
  \***********************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNGetStateOperation;
}

function validateParams(modules) {
  var config = modules.config;


  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var config = modules.config;
  var _incomingParams$uuid = incomingParams.uuid,
      uuid = _incomingParams$uuid === undefined ? config.UUID : _incomingParams$uuid,
      _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann;

  var stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';
  return '/v2/presence/sub-key/' + config.subscribeKey + '/channel/' + _utils2.default.encodeString(stringifiedChannels) + '/uuid/' + uuid;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var _incomingParams$chann2 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann2 === undefined ? [] : _incomingParams$chann2;

  var params = {};

  if (channelGroups.length > 0) {
    params['channel-group'] = channelGroups.join(',');
  }

  return params;
}

function handleResponse(modules, serverResponse, incomingParams) {
  var _incomingParams$chann3 = incomingParams.channels,
      channels = _incomingParams$chann3 === undefined ? [] : _incomingParams$chann3,
      _incomingParams$chann4 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann4 === undefined ? [] : _incomingParams$chann4;

  var channelsResponse = {};

  if (channels.length === 1 && channelGroups.length === 0) {
    channelsResponse[channels[0]] = serverResponse.payload;
  } else {
    channelsResponse = serverResponse.payload;
  }

  return { channels: channelsResponse };
}
//# sourceMappingURL=get_state.js.map


/***/ }),
/* 380 */
/*!***********************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/presence/set_state.js ***!
  \***********************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNSetStateOperation;
}

function validateParams(modules, incomingParams) {
  var config = modules.config;
  var state = incomingParams.state,
      _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann,
      _incomingParams$chann2 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann2 === undefined ? [] : _incomingParams$chann2;


  if (!state) return 'Missing State';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
  if (channels.length === 0 && channelGroups.length === 0) return 'Please provide a list of channels and/or channel-groups';
}

function getURL(modules, incomingParams) {
  var config = modules.config;
  var _incomingParams$chann3 = incomingParams.channels,
      channels = _incomingParams$chann3 === undefined ? [] : _incomingParams$chann3;

  var stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';
  return '/v2/presence/sub-key/' + config.subscribeKey + '/channel/' + _utils2.default.encodeString(stringifiedChannels) + '/uuid/' + config.UUID + '/data';
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var state = incomingParams.state,
      _incomingParams$chann4 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann4 === undefined ? [] : _incomingParams$chann4;

  var params = {};

  params.state = JSON.stringify(state);

  if (channelGroups.length > 0) {
    params['channel-group'] = channelGroups.join(',');
  }

  return params;
}

function handleResponse(modules, serverResponse) {
  return { state: serverResponse.payload };
}
//# sourceMappingURL=set_state.js.map


/***/ }),
/* 381 */
/*!**********************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/presence/here_now.js ***!
  \**********************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNHereNowOperation;
}

function validateParams(modules) {
  var config = modules.config;


  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var config = modules.config;
  var _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann,
      _incomingParams$chann2 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann2 === undefined ? [] : _incomingParams$chann2;

  var baseURL = '/v2/presence/sub-key/' + config.subscribeKey;

  if (channels.length > 0 || channelGroups.length > 0) {
    var stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';
    baseURL += '/channel/' + _utils2.default.encodeString(stringifiedChannels);
  }

  return baseURL;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var _incomingParams$chann3 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann3 === undefined ? [] : _incomingParams$chann3,
      _incomingParams$inclu = incomingParams.includeUUIDs,
      includeUUIDs = _incomingParams$inclu === undefined ? true : _incomingParams$inclu,
      _incomingParams$inclu2 = incomingParams.includeState,
      includeState = _incomingParams$inclu2 === undefined ? false : _incomingParams$inclu2;

  var params = {};

  if (!includeUUIDs) params.disable_uuids = 1;
  if (includeState) params.state = 1;

  if (channelGroups.length > 0) {
    params['channel-group'] = channelGroups.join(',');
  }

  return params;
}

function handleResponse(modules, serverResponse, incomingParams) {
  var _incomingParams$chann4 = incomingParams.channels,
      channels = _incomingParams$chann4 === undefined ? [] : _incomingParams$chann4,
      _incomingParams$chann5 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann5 === undefined ? [] : _incomingParams$chann5,
      _incomingParams$inclu3 = incomingParams.includeUUIDs,
      includeUUIDs = _incomingParams$inclu3 === undefined ? true : _incomingParams$inclu3,
      _incomingParams$inclu4 = incomingParams.includeState,
      includeState = _incomingParams$inclu4 === undefined ? false : _incomingParams$inclu4;


  var prepareSingularChannel = function prepareSingularChannel() {
    var response = {};
    var occupantsList = [];
    response.totalChannels = 1;
    response.totalOccupancy = serverResponse.occupancy;
    response.channels = {};
    response.channels[channels[0]] = {
      occupants: occupantsList,
      name: channels[0],
      occupancy: serverResponse.occupancy
    };

    if (includeUUIDs && serverResponse.uuids) {
      serverResponse.uuids.forEach(function (uuidEntry) {
        if (includeState) {
          occupantsList.push({ state: uuidEntry.state, uuid: uuidEntry.uuid });
        } else {
          occupantsList.push({ state: null, uuid: uuidEntry });
        }
      });
    }

    return response;
  };

  var prepareMultipleChannel = function prepareMultipleChannel() {
    var response = {};
    response.totalChannels = serverResponse.payload.total_channels;
    response.totalOccupancy = serverResponse.payload.total_occupancy;
    response.channels = {};

    Object.keys(serverResponse.payload.channels).forEach(function (channelName) {
      var channelEntry = serverResponse.payload.channels[channelName];
      var occupantsList = [];
      response.channels[channelName] = {
        occupants: occupantsList,
        name: channelName,
        occupancy: channelEntry.occupancy
      };

      if (includeUUIDs) {
        channelEntry.uuids.forEach(function (uuidEntry) {
          if (includeState) {
            occupantsList.push({ state: uuidEntry.state, uuid: uuidEntry.uuid });
          } else {
            occupantsList.push({ state: null, uuid: uuidEntry });
          }
        });
      }

      return response;
    });

    return response;
  };

  var response = void 0;
  if (channels.length > 1 || channelGroups.length > 0 || channelGroups.length === 0 && channels.length === 0) {
    response = prepareMultipleChannel();
  } else {
    response = prepareSingularChannel();
  }

  return response;
}
//# sourceMappingURL=here_now.js.map


/***/ }),
/* 382 */
/*!*************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/access_manager/audit.js ***!
  \*************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNAccessManagerAudit;
}

function validateParams(modules) {
  var config = modules.config;


  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules) {
  var config = modules.config;

  return '/v2/auth/audit/sub-key/' + config.subscribeKey;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return false;
}

function prepareParams(modules, incomingParams) {
  var channel = incomingParams.channel,
      channelGroup = incomingParams.channelGroup,
      _incomingParams$authK = incomingParams.authKeys,
      authKeys = _incomingParams$authK === undefined ? [] : _incomingParams$authK;

  var params = {};

  if (channel) {
    params.channel = channel;
  }

  if (channelGroup) {
    params['channel-group'] = channelGroup;
  }

  if (authKeys.length > 0) {
    params.auth = authKeys.join(',');
  }

  return params;
}

function handleResponse(modules, serverResponse) {
  return serverResponse.payload;
}
//# sourceMappingURL=audit.js.map


/***/ }),
/* 383 */
/*!*************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/access_manager/grant.js ***!
  \*************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNAccessManagerGrant;
}

function validateParams(modules) {
  var config = modules.config;


  if (!config.subscribeKey) return 'Missing Subscribe Key';
  if (!config.publishKey) return 'Missing Publish Key';
  if (!config.secretKey) return 'Missing Secret Key';
}

function getURL(modules) {
  var config = modules.config;

  return '/v2/auth/grant/sub-key/' + config.subscribeKey;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return false;
}

function prepareParams(modules, incomingParams) {
  var _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann,
      _incomingParams$chann2 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann2 === undefined ? [] : _incomingParams$chann2,
      ttl = incomingParams.ttl,
      _incomingParams$read = incomingParams.read,
      read = _incomingParams$read === undefined ? false : _incomingParams$read,
      _incomingParams$write = incomingParams.write,
      write = _incomingParams$write === undefined ? false : _incomingParams$write,
      _incomingParams$manag = incomingParams.manage,
      manage = _incomingParams$manag === undefined ? false : _incomingParams$manag,
      _incomingParams$authK = incomingParams.authKeys,
      authKeys = _incomingParams$authK === undefined ? [] : _incomingParams$authK;

  var params = {};

  params.r = read ? '1' : '0';
  params.w = write ? '1' : '0';
  params.m = manage ? '1' : '0';

  if (channels.length > 0) {
    params.channel = channels.join(',');
  }

  if (channelGroups.length > 0) {
    params['channel-group'] = channelGroups.join(',');
  }

  if (authKeys.length > 0) {
    params.auth = authKeys.join(',');
  }

  if (ttl || ttl === 0) {
    params.ttl = ttl;
  }

  return params;
}

function handleResponse() {
  return {};
}
//# sourceMappingURL=grant.js.map


/***/ }),
/* 384 */
/*!************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/publish.js ***!
  \************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.usePost = usePost;
exports.getURL = getURL;
exports.postURL = postURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.postPayload = postPayload;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function prepareMessagePayload(modules, messagePayload) {
  var crypto = modules.crypto,
      config = modules.config;

  var stringifiedPayload = JSON.stringify(messagePayload);

  if (config.cipherKey) {
    stringifiedPayload = crypto.encrypt(stringifiedPayload);
    stringifiedPayload = JSON.stringify(stringifiedPayload);
  }

  return stringifiedPayload;
}

function getOperation() {
  return _operations2.default.PNPublishOperation;
}

function validateParams(_ref, incomingParams) {
  var config = _ref.config;
  var message = incomingParams.message,
      channel = incomingParams.channel;


  if (!channel) return 'Missing Channel';
  if (!message) return 'Missing Message';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function usePost(modules, incomingParams) {
  var _incomingParams$sendB = incomingParams.sendByPost,
      sendByPost = _incomingParams$sendB === undefined ? false : _incomingParams$sendB;

  return sendByPost;
}

function getURL(modules, incomingParams) {
  var config = modules.config;
  var channel = incomingParams.channel,
      message = incomingParams.message;

  var stringifiedPayload = prepareMessagePayload(modules, message);
  return '/publish/' + config.publishKey + '/' + config.subscribeKey + '/0/' + _utils2.default.encodeString(channel) + '/0/' + _utils2.default.encodeString(stringifiedPayload);
}

function postURL(modules, incomingParams) {
  var config = modules.config;
  var channel = incomingParams.channel;

  return '/publish/' + config.publishKey + '/' + config.subscribeKey + '/0/' + _utils2.default.encodeString(channel) + '/0';
}

function getRequestTimeout(_ref2) {
  var config = _ref2.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function postPayload(modules, incomingParams) {
  var message = incomingParams.message;

  return prepareMessagePayload(modules, message);
}

function prepareParams(modules, incomingParams) {
  var meta = incomingParams.meta,
      _incomingParams$repli = incomingParams.replicate,
      replicate = _incomingParams$repli === undefined ? true : _incomingParams$repli,
      storeInHistory = incomingParams.storeInHistory,
      ttl = incomingParams.ttl;

  var params = {};

  if (storeInHistory != null) {
    if (storeInHistory) {
      params.store = '1';
    } else {
      params.store = '0';
    }
  }

  if (ttl) {
    params.ttl = ttl;
  }

  if (replicate === false) {
    params.norep = 'true';
  }

  if (meta && (typeof meta === 'undefined' ? 'undefined' : _typeof(meta)) === 'object') {
    params.meta = JSON.stringify(meta);
  }

  return params;
}

function handleResponse(modules, serverResponse) {
  return { timetoken: serverResponse[2] };
}
//# sourceMappingURL=publish.js.map


/***/ }),
/* 385 */
/*!************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/history/get_history.js ***!
  \************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function __processMessage(modules, message) {
  var config = modules.config,
      crypto = modules.crypto;

  if (!config.cipherKey) return message;

  try {
    return crypto.decrypt(message);
  } catch (e) {
    return message;
  }
}

function getOperation() {
  return _operations2.default.PNHistoryOperation;
}

function validateParams(modules, incomingParams) {
  var channel = incomingParams.channel;
  var config = modules.config;


  if (!channel) return 'Missing channel';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var channel = incomingParams.channel;
  var config = modules.config;

  return '/v2/history/sub-key/' + config.subscribeKey + '/channel/' + _utils2.default.encodeString(channel);
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var start = incomingParams.start,
      end = incomingParams.end,
      reverse = incomingParams.reverse,
      _incomingParams$count = incomingParams.count,
      count = _incomingParams$count === undefined ? 100 : _incomingParams$count,
      _incomingParams$strin = incomingParams.stringifiedTimeToken,
      stringifiedTimeToken = _incomingParams$strin === undefined ? false : _incomingParams$strin;

  var outgoingParams = {
    include_token: 'true'
  };

  outgoingParams.count = count;
  if (start) outgoingParams.start = start;
  if (end) outgoingParams.end = end;
  if (stringifiedTimeToken) outgoingParams.string_message_token = 'true';
  if (reverse != null) outgoingParams.reverse = reverse.toString();

  return outgoingParams;
}

function handleResponse(modules, serverResponse) {
  var response = {
    messages: [],
    startTimeToken: serverResponse[1],
    endTimeToken: serverResponse[2]
  };

  serverResponse[0].forEach(function (serverHistoryItem) {
    var item = {
      timetoken: serverHistoryItem.timetoken,
      entry: __processMessage(modules, serverHistoryItem.message)
    };

    response.messages.push(item);
  });

  return response;
}
//# sourceMappingURL=get_history.js.map


/***/ }),
/* 386 */
/*!****************************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/history/delete_messages.js ***!
  \****************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.useDelete = useDelete;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNDeleteMessagesOperation;
}

function validateParams(modules, incomingParams) {
  var channel = incomingParams.channel;
  var config = modules.config;


  if (!channel) return 'Missing channel';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function useDelete() {
  return true;
}

function getURL(modules, incomingParams) {
  var channel = incomingParams.channel,
      start = incomingParams.start,
      end = incomingParams.end;
  var config = modules.config;

  var querystring = '';

  if (start) {
    querystring = '?start=' + start;
  }

  if (end) {
    querystring += (querystring !== '' ? '&' : '?') + 'end=' + end;
  }

  return '/v3/history/sub-key/' + config.subscribeKey + '/channel/' + _utils2.default.encodeString(channel) + querystring;
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var start = incomingParams.start,
      end = incomingParams.end;


  var outgoingParams = {};

  if (start) outgoingParams.start = start;
  if (end) outgoingParams.end = end;

  return {};
}

function handleResponse(modules, serverResponse) {
  return serverResponse.payload;
}
//# sourceMappingURL=delete_messages.js.map


/***/ }),
/* 387 */
/*!*******************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/fetch_messages.js ***!
  \*******************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function __processMessage(modules, message) {
  var config = modules.config,
      crypto = modules.crypto;

  if (!config.cipherKey) return message;

  try {
    return crypto.decrypt(message);
  } catch (e) {
    return message;
  }
}

function getOperation() {
  return _operations2.default.PNFetchMessagesOperation;
}

function validateParams(modules, incomingParams) {
  var channels = incomingParams.channels;
  var config = modules.config;


  if (!channels || channels.length === 0) return 'Missing channels';
  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann;
  var config = modules.config;


  var stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';
  return '/v3/history/sub-key/' + config.subscribeKey + '/channel/' + _utils2.default.encodeString(stringifiedChannels);
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getTransactionTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(modules, incomingParams) {
  var start = incomingParams.start,
      end = incomingParams.end,
      count = incomingParams.count;

  var outgoingParams = {};

  if (count) outgoingParams.max = count;
  if (start) outgoingParams.start = start;
  if (end) outgoingParams.end = end;

  return outgoingParams;
}

function handleResponse(modules, serverResponse) {
  var response = {
    channels: {}
  };

  Object.keys(serverResponse.channels || {}).forEach(function (channelName) {
    response.channels[channelName] = [];

    (serverResponse.channels[channelName] || []).forEach(function (messageEnvelope) {
      var announce = {};
      announce.channel = channelName;
      announce.subscription = null;
      announce.timetoken = messageEnvelope.timetoken;
      announce.message = __processMessage(modules, messageEnvelope.message);
      response.channels[channelName].push(announce);
    });
  });

  return response;
}
//# sourceMappingURL=fetch_messages.js.map


/***/ }),
/* 388 */
/*!**************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/core/endpoints/subscribe.js ***!
  \**************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOperation = getOperation;
exports.validateParams = validateParams;
exports.getURL = getURL;
exports.getRequestTimeout = getRequestTimeout;
exports.isAuthSupported = isAuthSupported;
exports.prepareParams = prepareParams;
exports.handleResponse = handleResponse;

var _flow_interfaces = __webpack_require__(/*! ../flow_interfaces */ 3);

var _operations = __webpack_require__(/*! ../constants/operations */ 5);

var _operations2 = _interopRequireDefault(_operations);

var _utils = __webpack_require__(/*! ../utils */ 9);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOperation() {
  return _operations2.default.PNSubscribeOperation;
}

function validateParams(modules) {
  var config = modules.config;


  if (!config.subscribeKey) return 'Missing Subscribe Key';
}

function getURL(modules, incomingParams) {
  var config = modules.config;
  var _incomingParams$chann = incomingParams.channels,
      channels = _incomingParams$chann === undefined ? [] : _incomingParams$chann;

  var stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';
  return '/v2/subscribe/' + config.subscribeKey + '/' + _utils2.default.encodeString(stringifiedChannels) + '/0';
}

function getRequestTimeout(_ref) {
  var config = _ref.config;

  return config.getSubscribeTimeout();
}

function isAuthSupported() {
  return true;
}

function prepareParams(_ref2, incomingParams) {
  var config = _ref2.config;
  var _incomingParams$chann2 = incomingParams.channelGroups,
      channelGroups = _incomingParams$chann2 === undefined ? [] : _incomingParams$chann2,
      timetoken = incomingParams.timetoken,
      filterExpression = incomingParams.filterExpression,
      region = incomingParams.region;

  var params = {
    heartbeat: config.getPresenceTimeout()
  };

  if (channelGroups.length > 0) {
    params['channel-group'] = channelGroups.join(',');
  }

  if (filterExpression && filterExpression.length > 0) {
    params['filter-expr'] = filterExpression;
  }

  if (timetoken) {
    params.tt = timetoken;
  }

  if (region) {
    params.tr = region;
  }

  return params;
}

function handleResponse(modules, serverResponse) {
  var messages = [];

  serverResponse.m.forEach(function (rawMessage) {
    var publishMetaData = {
      publishTimetoken: rawMessage.p.t,
      region: rawMessage.p.r
    };
    var parsedMessage = {
      shard: parseInt(rawMessage.a, 10),
      subscriptionMatch: rawMessage.b,
      channel: rawMessage.c,
      payload: rawMessage.d,
      flags: rawMessage.f,
      issuingClientId: rawMessage.i,
      subscribeKey: rawMessage.k,
      originationTimetoken: rawMessage.o,
      userMetadata: rawMessage.u,
      publishMetaData: publishMetaData
    };
    messages.push(parsedMessage);
  });

  var metadata = {
    timetoken: serverResponse.t.t,
    region: serverResponse.t.r
  };

  return { messages: messages, metadata: metadata };
}
//# sourceMappingURL=subscribe.js.map


/***/ }),
/* 389 */
/*!******************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/networking/index.js ***!
  \******************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(/*! ../core/components/config */ 29);

var _config2 = _interopRequireDefault(_config);

var _categories = __webpack_require__(/*! ../core/constants/categories */ 57);

var _categories2 = _interopRequireDefault(_categories);

var _flow_interfaces = __webpack_require__(/*! ../core/flow_interfaces */ 3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _class = function () {
  function _class(modules) {
    var _this = this;

    _classCallCheck(this, _class);

    this._modules = {};

    Object.keys(modules).forEach(function (key) {
      _this._modules[key] = modules[key].bind(_this);
    });
  }

  _createClass(_class, [{
    key: 'init',
    value: function init(config) {
      this._config = config;

      this._maxSubDomain = 20;
      this._currentSubDomain = Math.floor(Math.random() * this._maxSubDomain);
      this._providedFQDN = (this._config.secure ? 'https://' : 'http://') + this._config.origin;
      this._coreParams = {};

      this.shiftStandardOrigin();
    }
  }, {
    key: 'nextOrigin',
    value: function nextOrigin() {
      if (this._providedFQDN.indexOf('pubsub.') === -1) {
        return this._providedFQDN;
      }

      var newSubDomain = void 0;

      this._currentSubDomain = this._currentSubDomain + 1;

      if (this._currentSubDomain >= this._maxSubDomain) {
        this._currentSubDomain = 1;
      }

      newSubDomain = this._currentSubDomain.toString();

      return this._providedFQDN.replace('pubsub', 'ps' + newSubDomain);
    }
  }, {
    key: 'shiftStandardOrigin',
    value: function shiftStandardOrigin() {
      var failover = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      this._standardOrigin = this.nextOrigin(failover);

      return this._standardOrigin;
    }
  }, {
    key: 'getStandardOrigin',
    value: function getStandardOrigin() {
      return this._standardOrigin;
    }
  }, {
    key: 'POST',
    value: function POST(params, body, endpoint, callback) {
      return this._modules.post(params, body, endpoint, callback);
    }
  }, {
    key: 'GET',
    value: function GET(params, endpoint, callback) {
      return this._modules.get(params, endpoint, callback);
    }
  }, {
    key: 'DELETE',
    value: function DELETE(params, endpoint, callback) {
      return this._modules.del(params, endpoint, callback);
    }
  }, {
    key: '_detectErrorCategory',
    value: function _detectErrorCategory(err) {
      if (err.code === 'ENOTFOUND') return _categories2.default.PNNetworkIssuesCategory;
      if (err.code === 'ECONNREFUSED') return _categories2.default.PNNetworkIssuesCategory;
      if (err.code === 'ECONNRESET') return _categories2.default.PNNetworkIssuesCategory;
      if (err.code === 'EAI_AGAIN') return _categories2.default.PNNetworkIssuesCategory;

      if (err.status === 0 || err.hasOwnProperty('status') && typeof err.status === 'undefined') return _categories2.default.PNNetworkIssuesCategory;
      if (err.timeout) return _categories2.default.PNTimeoutCategory;

      if (err.response) {
        if (err.response.badRequest) return _categories2.default.PNBadRequestCategory;
        if (err.response.forbidden) return _categories2.default.PNAccessDeniedCategory;
      }

      return _categories2.default.PNUnknownCategory;
    }
  }]);

  return _class;
}();

exports.default = _class;
module.exports = exports['default'];
//# sourceMappingURL=index.js.map


/***/ }),
/* 390 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/db/common.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _class = function () {
  function _class() {
    _classCallCheck(this, _class);

    this.storage = {};
  }

  _createClass(_class, [{
    key: "get",
    value: function get(key) {
      return this.storage[key];
    }
  }, {
    key: "set",
    value: function set(key, value) {
      this.storage[key] = value;
    }
  }]);

  return _class;
}();

exports.default = _class;
module.exports = exports["default"];
//# sourceMappingURL=common.js.map


/***/ }),
/* 391 */
/*!*********************************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/networking/modules/nativescript.js ***!
  \*********************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get = get;
exports.post = post;
exports.del = del;

var _http = __webpack_require__(/*! http */ 127);

var _flow_interfaces = __webpack_require__(/*! ../../core/flow_interfaces */ 3);

var _utils = __webpack_require__(/*! ../utils */ 392);

function log(url, qs, res) {
  var _pickLogger = function _pickLogger() {
    if (console && console.log) return console;
    return console;
  };

  var start = new Date().getTime();
  var timestamp = new Date().toISOString();
  var logger = _pickLogger();
  logger.log('<<<<<');
  logger.log('[' + timestamp + ']', '\n', url, '\n', qs);
  logger.log('-----');

  var now = new Date().getTime();
  var elapsed = now - start;
  var timestampDone = new Date().toISOString();

  logger.log('>>>>>>');
  logger.log('[' + timestampDone + ' / ' + elapsed + ']', '\n', url, '\n', qs, '\n', res);
  logger.log('-----');
}

function xdr(method, url, params, body, endpoint, callback) {
  var _this = this;

  var status = {};
  status.operation = endpoint.operation;

  return (0, _http.request)({
    method: method,
    url: (0, _utils.buildUrl)(url, params),
    content: body,
    timeout: endpoint.timeout
  }).then(function (response) {
    status.error = false;

    if (response.statusCode) {
      status.statusCode = response.statusCode;
    }

    return response.content.toJSON();
  }).then(function (response) {
    var resp = response;

    if (_this._config.logVerbosity) {
      log(url, params, resp);
    }

    callback(status, resp);
  }).catch(function (e) {
    status.error = true;
    status.errorData = e;
    status.category = _this._detectErrorCategory(e);
    callback(status, null);
  });
}

function get(params, endpoint, callback) {
  var url = this.getStandardOrigin() + endpoint.url;
  return xdr.call(this, 'GET', url, params, '', endpoint, callback);
}

function post(params, body, endpoint, callback) {
  var url = this.getStandardOrigin() + endpoint.url;
  return xdr.call(this, 'POST', url, params, body, endpoint, callback);
}

function del(params, endpoint, callback) {
  var url = this.getStandardOrigin() + endpoint.url;
  return xdr.call(this, 'DELETE', url, params, '', endpoint, callback);
}
//# sourceMappingURL=nativescript.js.map


/***/ }),
/* 392 */
/*!******************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/pubnub/lib/networking/utils.js ***!
  \******************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.encodedKeyValuePair = encodedKeyValuePair;
exports.buildUrl = buildUrl;
function encodedKeyValuePair(pairs, key, value) {
  if (value != null) {
    if (Array.isArray(value)) {
      value.forEach(function (item) {
        encodedKeyValuePair(pairs, key, item);
      });
    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
      Object.keys(value).forEach(function (subkey) {
        encodedKeyValuePair(pairs, key + '[' + subkey + ']', value[subkey]);
      });
    } else {
      pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
    }
  } else if (value === null) {
    pairs.push(encodeURIComponent('' + encodeURIComponent(key)));
  }
}

function buildUrl(url, params) {
  var pairs = [];

  Object.keys(params).forEach(function (key) {
    encodedKeyValuePair(pairs, key, params[key]);
  });

  return url + '?' + pairs.join('&');
}
//# sourceMappingURL=utils.js.map


/***/ }),
/* 393 */
/*!****************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/extend.js ***!
  \****************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./assignIn */ 394);


/***/ }),
/* 394 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/assignIn.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ 25),
    createAssigner = __webpack_require__(/*! ./_createAssigner */ 73),
    keysIn = __webpack_require__(/*! ./keysIn */ 45);

/**
 * This method is like `_.assign` except that it iterates over own and
 * inherited source properties.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias extend
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assign
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assignIn({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
 */
var assignIn = createAssigner(function(object, source) {
  copyObject(source, keysIn(source), object);
});

module.exports = assignIn;


/***/ }),
/* 395 */
/*!**********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/live/user-to-user/index.js ***!
  \**********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stream = __webpack_require__(/*! ./stream */ 396);

Object.keys(_stream).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _stream[key];
    }
  });
});

var _streamAcl = __webpack_require__(/*! ./stream-acl */ 138);

Object.keys(_streamAcl).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _streamAcl[key];
    }
  });
});

/***/ }),
/* 396 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/live/user-to-user/stream.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Stream = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _errors = __webpack_require__(/*! ../../errors */ 1);

var _client = __webpack_require__(/*! ../../client */ 10);

var _utils = __webpack_require__(/*! ../../utils */ 2);

var _liveService = __webpack_require__(/*! ../live-service */ 56);

var _request = __webpack_require__(/*! ../../request */ 7);

var _streamAcl = __webpack_require__(/*! ./stream-acl */ 138);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @typedef MessageReceiver
 * @property {Function} onMessage
 * @property {Function} onStatus
 * @property {Function} onError
 */

/**
 * A Stream, created in the backend
 * @class Stream
 */
var Stream = exports.Stream = function () {
  function Stream(name) {
    _classCallCheck(this, Stream);

    this.name = name;
    this._client = _client.Client.sharedInstance();
    this._liveService = (0, _liveService.getLiveService)(this._client);
    this._subscribeChannels = {};
    this._publishChannels = {};
  }

  _createClass(Stream, [{
    key: 'getSubstreams',


    /**
     * Gets all substreams of this Stream
     * @returns {Promise}
     */
    value: function getSubstreams() {
      return this._makeStreamRequest('_substreams', _request.RequestMethod.GET);
    }

    /**
     * Gets the current ACL for the given user's message stream
     * @param {string} userId The ID of the user whose stream ACL is being retrieved
     * @returns {Promise} Promise for the ACL object returned
     */

  }, {
    key: 'getACL',
    value: function getACL(userId) {
      if (!(0, _utils.isNonemptyString)(userId)) {
        return Promise.reject(new _errors.KinveyError('Invalid or missing id'));
      }

      return this._makeStreamRequest(userId, _request.RequestMethod.GET);
    }

    /**
     * Sets (overwrites) the ACL for the given user's message stream
     * @param {string} userId The ID of the user whose stream ACL is being set
     * @param {StreamACL} acl The ACL object to be set
     * @returns {Promise}
     */

  }, {
    key: 'setACL',
    value: function setACL(userId, acl) {
      if (!(0, _utils.isNonemptyString)(userId)) {
        return Promise.reject(new _errors.KinveyError('Invalid or missing id'));
      }

      if (!_streamAcl.StreamACL.isValidACLObject(acl)) {
        return Promise.reject(new _errors.KinveyError('Invalid or missing ACL object'));
      }

      if (!(acl instanceof _streamAcl.StreamACL)) {
        acl = new _streamAcl.StreamACL(acl);
      }

      return this._makeStreamRequest(userId, _request.RequestMethod.PUT, acl.toPlainObject());
    }

    // Feed comm

    /**
     * Subscribes the active user to the specified user's channel
     * @param {string} userId
     * @param {MessageReceiver} receiver
     * @returns {Promise}
     */

  }, {
    key: 'follow',
    value: function follow(userId, receiver) {
      return this._subscribe(userId, receiver);
    }

    /**
     * Unsubscribes the active user from the specified user's channel
     * @param {string} userId
     * @returns {Promise}
     */

  }, {
    key: 'unfollow',
    value: function unfollow(userId) {
      return this._unsubscribe(userId);
    }

    /**
     * Posts a message to the active user's channel
     * @param {Object} message
     * @returns {Promise}
     */

  }, {
    key: 'post',
    value: function post(message) {
      var userId = this._client.getActiveUser()._id;
      return this._publish(userId, message);
    }

    // Directed comm

    /**
     * Listens for messages sent to the active user
     * @param {MessageReceiver} receiver
     * @returns {Promise<void>}
     */

  }, {
    key: 'listen',
    value: function listen(receiver) {
      var userId = this._client.getActiveUser()._id;
      return this._subscribe(userId, receiver);
    }

    /**
     * Stops listening for messages sent to the active user
     * @returns {Promise<void>}
     */

  }, {
    key: 'stopListening',
    value: function stopListening() {
      var userId = this._client.getActiveUser()._id;
      return this._unsubscribe(userId);
    }

    /**
     * Sends a message to the specified user
     * @param {string} userId
     * @param {Object} message
     */

  }, {
    key: 'send',
    value: function send(userId, message) {
      return this._publish(userId, message);
    }

    /**
     * @private
     * @param {string} substreamOwnerId
     * @returns {Promise}
     */

  }, {
    key: '_unsubscribeFromSubstream',
    value: function _unsubscribeFromSubstream(substreamOwnerId) {
      var path = substreamOwnerId + '/unsubscribe';

      return this._makeStreamRequest(path, _request.RequestMethod.POST, { deviceId: this._client.deviceId });
    }

    /**
     * @private
     * @param {string} userId
     * @param {MessageReceiver} receiver
     * @returns {Promise}
     */

  }, {
    key: '_subscribe',
    value: function _subscribe(userId, receiver) {
      var _this = this;

      return this._requestSubscribeAccess(userId).then(function () {
        var channelName = _this._subscribeChannels[userId];
        _this._liveService.subscribeToChannel(channelName, receiver);
      });
    }

    /**
     * @private
     * @param {string} userId
     * @returns {Promise<void>}
     */

  }, {
    key: '_unsubscribe',
    value: function _unsubscribe(userId) {
      var _this2 = this;

      return this._unsubscribeFromSubstream(userId).then(function () {
        var channelName = _this2._subscribeChannels[userId];
        _this2._liveService.unsubscribeFromChannel(channelName);
        delete _this2._subscribeChannels[userId];
      });
    }

    /**
     * @private
     * @param {string} userId
     * @param {Object} message
     * @returns {Promise}
     */

  }, {
    key: '_publish',
    value: function _publish(userId, message) {
      if (this._publishChannels[userId]) {
        return this._retriablePublish(userId, message);
      }
      return this._publishWithAccessRequest(userId, message);
    }

    /**
     * @private
     * @param {string} userId
     * @param {Object} message
     * @returns {Promise}
     */

  }, {
    key: '_publishWithAccessRequest',
    value: function _publishWithAccessRequest(userId, message) {
      var _this3 = this;

      return this._requestPublishAccess(userId).then(function () {
        var channelName = _this3._publishChannels[userId];
        return _this3._liveService.publishToChannel(channelName, message);
      });
    }

    /**
     * @private
     * @param {string} userId
     * @param {Object} message
     * @returns {Promise}
     */

  }, {
    key: '_retriablePublish',
    value: function _retriablePublish(userId, message) {
      var _this4 = this;

      var channelName = this._publishChannels[userId];
      return this._liveService.publishToChannel(channelName, message).catch(function (err) {
        var promise = Promise.reject(err);
        if (err.statusCode === _request.StatusCode.Forbidden) {
          promise = _this4._publishWithAccessRequest(userId, message);
        }
        return promise;
      });
    }

    /**
     * @private
     * @param {string} userId
     * @returns {Promise}
     */

  }, {
    key: '_requestPublishAccess',
    value: function _requestPublishAccess(userId) {
      var _this5 = this;

      return this._makeStreamRequest(userId + '/publish', _request.RequestMethod.POST).then(function (resp) {
        if (resp.substreamChannelName) {
          _this5._publishChannels[userId] = resp.substreamChannelName;
        }
        return resp;
      });
    }

    /**
     * @private
     * @param {string} userId
     * @returns {Promise}
     */

  }, {
    key: '_requestSubscribeAccess',
    value: function _requestSubscribeAccess(userId) {
      var _this6 = this;

      var requestBody = { deviceId: this._client.deviceId };

      return this._makeStreamRequest(userId + '/subscribe', _request.RequestMethod.POST, requestBody).then(function (response) {
        _this6._subscribeChannels[userId] = response.substreamChannelName;
        return response;
      });
    }

    /**
     * @private
     * @param {string} path The path after the stream/kid part
     * @param {RequestMethod} method The request method to be used
     * @param {Object} [body] The body of the request, if applicable
     * @returns {Promise}
     */

  }, {
    key: '_makeStreamRequest',
    value: function _makeStreamRequest(path, method, body) {
      return _request.KinveyRequest.executeShort({
        method: method,
        pathname: '/stream/' + this._client.appKey + '/' + this.name + '/' + path,
        body: body
      }, this._client);
    }
  }], [{
    key: 'StreamACL',
    get: function get() {
      return _streamAcl.StreamACL;
    }
  }]);

  return Stream;
}();

/***/ }),
/* 397 */
/*!***************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/every.js ***!
  \***************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayEvery = __webpack_require__(/*! ./_arrayEvery */ 398),
    baseEvery = __webpack_require__(/*! ./_baseEvery */ 399),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ 22),
    isArray = __webpack_require__(/*! ./isArray */ 4),
    isIterateeCall = __webpack_require__(/*! ./_isIterateeCall */ 114);

/**
 * Checks if `predicate` returns truthy for **all** elements of `collection`.
 * Iteration is stopped once `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * **Note:** This method returns `true` for
 * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
 * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
 * elements of empty collections.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 * @example
 *
 * _.every([true, 1, null, 'yes'], Boolean);
 * // => false
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': false },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.every(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.every(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.every(users, 'active');
 * // => false
 */
function every(collection, predicate, guard) {
  var func = isArray(collection) ? arrayEvery : baseEvery;
  if (guard && isIterateeCall(collection, predicate, guard)) {
    predicate = undefined;
  }
  return func(collection, baseIteratee(predicate, 3));
}

module.exports = every;


/***/ }),
/* 398 */
/*!*********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_arrayEvery.js ***!
  \*********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.every` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 */
function arrayEvery(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (!predicate(array[index], index, array)) {
      return false;
    }
  }
  return true;
}

module.exports = arrayEvery;


/***/ }),
/* 399 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/node_modules/lodash/_baseEvery.js ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(/*! ./_baseEach */ 33);

/**
 * The base implementation of `_.every` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`
 */
function baseEvery(collection, predicate) {
  var result = true;
  baseEach(collection, function(value, index, collection) {
    result = !!predicate(value, index, collection);
    return result;
  });
  return result;
}

module.exports = baseEvery;


/***/ }),
/* 400 */
/*!***********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/live/live-service-facade.js ***!
  \***********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onConnectionStatusUpdates = onConnectionStatusUpdates;
exports.offConnectionStatusUpdates = offConnectionStatusUpdates;
exports.isInitialized = isInitialized;

var _client = __webpack_require__(/*! ../client */ 10);

var _liveService = __webpack_require__(/*! ./live-service */ 56);

function _getLiveService() {
  var client = _client.Client.sharedInstance();
  return (0, _liveService.getLiveService)(client);
}

/**
 * Attaches a handler for connection status updates
 * @param {function} func
 */
function onConnectionStatusUpdates(func) {
  _getLiveService().onConnectionStatusUpdates(func);
}

/**
 * Removes a handler for connection status updates.
 * If no handler is specified, removes all handlers
 * @param {function} [func]
 */
function offConnectionStatusUpdates(func) {
  _getLiveService().offConnectionStatusUpdates(func);
}

/**
 * Checks whether live service is ready to subscribe or publish messages
 */
function isInitialized() {
  return _getLiveService().isInitialized();
}

/***/ }),
/* 401 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/datastore/datastore.js ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataStore = exports.DataStoreType = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _request = __webpack_require__(/*! ../request */ 7);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _client = __webpack_require__(/*! ../client */ 10);

var _networkstore = __webpack_require__(/*! ./networkstore */ 88);

var _cachestore = __webpack_require__(/*! ./cachestore */ 83);

var _syncstore = __webpack_require__(/*! ./syncstore */ 140);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @typedef   {Object}    DataStoreType
 * @property  {string}    Cache           Cache datastore type
 * @property  {string}    Network         Network datastore type
 * @property  {string}    Sync            Sync datastore type
 */
var DataStoreType = exports.DataStoreType = {
  Cache: 'Cache',
  Network: 'Network',
  Sync: 'Sync'
};
Object.freeze(DataStoreType);

/**
 * The DataStore class is used to find, create, update, remove, count and group entities.
 */

var DataStore = function () {
  function DataStore() {
    _classCallCheck(this, DataStore);

    throw new _errors.KinveyError('Not allowed to construct a DataStore instance.' + ' Please use the collection() function to get an instance of a DataStore instance.');
  }

  /**
   * Returns an instance of the Store class based on the type provided.
   *
   * @param  {string}       [collection]                  Name of the collection.
   * @param  {StoreType}    [type=DataStoreType.Network]  Type of store to return.
   * @return {DataStore}                                  DataStore instance.
   */


  _createClass(DataStore, null, [{
    key: 'collection',
    value: function collection(_collection) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DataStoreType.Cache;
      var options = arguments[2];

      var store = void 0;

      if ((0, _utils.isDefined)(_collection) === false || (0, _isString2.default)(_collection) === false) {
        throw new _errors.KinveyError('A collection is required and must be a string.');
      }

      switch (type) {
        case DataStoreType.Network:
          store = new _networkstore.NetworkStore(_collection, options);
          break;
        case DataStoreType.Sync:
          store = new _syncstore.SyncStore(_collection, options);
          break;
        case DataStoreType.Cache:
        default:
          store = new _cachestore.CacheStore(_collection, options);

      }

      return store;
    }

    /**
     * @private
     */

  }, {
    key: 'getInstance',
    value: function getInstance(collection, type, options) {
      return this.collection(collection, type, options);
    }

    /**
     * Clear the cache. This will delete all data in the cache.
     *
     * @param  {Object} [options={}] Options
     * @return {Promise<Object>} The result of clearing the cache.
     */

  }, {
    key: 'clearCache',
    value: function clearCache() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var client = options.client || _client.Client.sharedInstance();
      var pathname = '/appdata/' + client.appKey;
      var request = new _request.CacheRequest({
        method: _request.RequestMethod.DELETE,
        url: _url2.default.format({
          protocol: client.apiProtocol,
          host: client.apiHost,
          pathname: pathname
        }),
        properties: options.properties,
        timeout: options.timeout
      });
      return request.execute().then(function (response) {
        return response.data;
      });
    }
  }]);

  return DataStore;
}();

exports.DataStore = DataStore;

/***/ }),
/* 402 */
/*!*************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/user/userstore.js ***!
  \*************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserStore = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _isArray = __webpack_require__(/*! lodash/isArray */ 4);

var _isArray2 = _interopRequireDefault(_isArray);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _request = __webpack_require__(/*! ../request */ 7);

var _errors = __webpack_require__(/*! ../errors */ 1);

var _observable = __webpack_require__(/*! ../observable */ 36);

var _utils = __webpack_require__(/*! ../utils */ 2);

var _query = __webpack_require__(/*! ../query */ 12);

var _datastore = __webpack_require__(/*! ../datastore */ 55);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * The UserStore class is used to find, save, update, remove, count and group users.
 */
var UserStore = exports.UserStore = function (_NetworkStore) {
  _inherits(UserStore, _NetworkStore);

  function UserStore(options) {
    _classCallCheck(this, UserStore);

    return _possibleConstructorReturn(this, (UserStore.__proto__ || Object.getPrototypeOf(UserStore)).call(this, null, options));
  }

  /**
   * The pathname for the store.
   *
   * @return  {string}   Pathname
   */


  _createClass(UserStore, [{
    key: 'lookup',


    /**
     * Lookup users.
     * [User Discovery](http://devcenter.kinvey.com/guides/users#lookup)
     *
     * @param {Query} [query] Query used to filter entities.
     * @param {Object} [options] Options
     * @return {Observable} Observable.
     */
    value: function lookup(query) {
      var _this2 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        // Check that the query is valid
        if ((0, _utils.isDefined)(query) && !(query instanceof _query.Query)) {
          return observer.error(new _errors.KinveyError('Invalid query. It must be an instance of the Query class.'));
        }

        var request = new _request.KinveyRequest({
          method: _request.RequestMethod.POST,
          authType: _request.AuthType.Default,
          url: _url2.default.format({
            protocol: _this2.client.apiProtocol,
            host: _this2.client.apiHost,
            pathname: _this2.pathname + '/_lookup'
          }),
          properties: options.properties,
          body: (0, _utils.isDefined)(query) ? query.toPlainObject().filter : null,
          timeout: options.timeout,
          client: _this2.client
        });

        // Execute the request
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (data) {
          return observer.next(data);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });
      return stream;
    }

    /**
     * @private
     * @throws {KinveyError} Method is unsupported. Instead use User.signup() to create a user.
     */

  }, {
    key: 'create',
    value: function create() {
      return _es6Promise2.default.reject(new _errors.KinveyError('Please use `User.signup()` to create a user.'));
    }

    /**
     * Update a user.
     *
     * @param {Object} data Data for user to update.
     * @param {Object} [options={}] Options
     * @return {Promise<Object>} The updated user data.
     */

  }, {
    key: 'update',
    value: function update(data) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!data) {
        return _es6Promise2.default.reject(new _errors.KinveyError('No user was provided to be updated.'));
      }

      if ((0, _isArray2.default)(data)) {
        return _es6Promise2.default.reject(new _errors.KinveyError('Only one user can be updated at one time.', data));
      }

      if (!data._id) {
        return _es6Promise2.default.reject(new _errors.KinveyError('User must have an _id.'));
      }

      return _get(UserStore.prototype.__proto__ || Object.getPrototypeOf(UserStore.prototype), 'update', this).call(this, data, options);
    }

    /**
     * Check if a username already exists.
     *
     * @param {string} username Username
     * @param {Object} [options={}] Options
     * @return {boolean} True if the username already exists otherwise false.
     */

  }, {
    key: 'exists',
    value: function exists(username) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        authType: _request.AuthType.App,
        url: _url2.default.format({
          protocol: this.client.apiProtocol,
          host: this.client.apiHost,
          pathname: '/rpc/' + this.client.appKey + '/check-username-exists'
        }),
        properties: options.properties,
        data: { username: username },
        timeout: options.timeout,
        client: this.client
      });
      return request.execute().then(function (response) {
        return response.data;
      }).then(function () {
        var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        return data.usernameExists === true;
      });
    }

    /**
     * Remove a user.
     *
     * @param   {string}  id               Id of the user to remove.
     * @param   {Object}  [options]        Options
     * @param   {boolean} [options.hard=false]   Boolean indicating whether user should be permanently removed from the backend (defaults to false).
     * @return  {Promise}
     */

  }, {
    key: 'removeById',
    value: function removeById(id) {
      var _this3 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var stream = _observable.KinveyObservable.create(function (observer) {
        if ((0, _utils.isDefined)(id) === false) {
          return observer.error(new _errors.KinveyError('An id was not provided.', 'Please provide a valid id for a user that you would like to remove.'));
        }

        if ((0, _isString2.default)(id) === false) {
          return observer.error(new _errors.KinveyError('The id provided is not a string.', 'Please provide a valid id for a user that you would like to remove.'));
        }

        var request = new _request.KinveyRequest({
          method: _request.RequestMethod.DELETE,
          authType: _request.AuthType.Default,
          url: _url2.default.format({
            protocol: _this3.client.apiProtocol,
            host: _this3.client.apiHost,
            pathname: _this3.pathname + '/' + id,
            query: options.hard === true ? { hard: true } : undefined
          }),
          properties: options.properties,
          timeout: options.timeout
        });
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (data) {
          return observer.next(data);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });

      return stream.toPromise();
    }
  }, {
    key: 'pathname',
    get: function get() {
      return '/user/' + this.client.appKey;
    }
  }]);

  return UserStore;
}(_datastore.NetworkStore);

/***/ }),
/* 403 */
/*!*******************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/endpoint.js ***!
  \*******************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomEndpoint = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _isString = __webpack_require__(/*! lodash/isString */ 8);

var _isString2 = _interopRequireDefault(_isString);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _errors = __webpack_require__(/*! ./errors */ 1);

var _client = __webpack_require__(/*! ./client */ 10);

var _request = __webpack_require__(/*! ./request */ 7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Executes a custom endpoint on the Kinvey backend.
 */
var CustomEndpoint = exports.CustomEndpoint = function () {
  function CustomEndpoint() {
    _classCallCheck(this, CustomEndpoint);

    throw new _errors.KinveyError('Not allowed to create an instance of the `CustomEndpoint` class.', 'Please use `CustomEndpoint.execute()` function.');
  }
  /**
   * Execute a custom endpoint. A promise will be returned that will be resolved
   * with the result of the command or rejected with an error.
   *
   * @param   {String}          endpoint                          Endpoint to execute.
   * @param   {Object}          [args]                            Command arguments
   * @param   {Object}          [options={}]                      Options
   * @param   {Properties}      [options.properties]              Custom properties to send with
   *                                                              the request.
   * @param   {Number}          [options.timeout]                 Timeout for the request.
   * @return  {Promise}                                           Promise
   *
   * @example
   * var promise = CustomEndpoint.execute('myCustomEndpoint').then(function(data) {
   *   ...
   * }).catch(function(error) {
   *   ...
   * });
   */


  _createClass(CustomEndpoint, null, [{
    key: 'execute',
    value: function execute(endpoint, args) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var client = options.client || _client.Client.sharedInstance();

      if (!endpoint) {
        return _es6Promise2.default.reject(new _errors.KinveyError('An endpoint argument is required.'));
      }

      if (!(0, _isString2.default)(endpoint)) {
        return _es6Promise2.default.reject(new _errors.KinveyError('The endpoint argument must be a string.'));
      }

      var request = new _request.KinveyRequest({
        method: _request.RequestMethod.POST,
        authType: _request.AuthType.Default,
        url: _url2.default.format({
          protocol: client.apiProtocol,
          host: client.apiHost,
          pathname: '/rpc/' + client.appKey + '/custom/' + endpoint
        }),
        properties: options.properties,
        body: args,
        timeout: options.timeout,
        client: client
      });
      return request.execute().then(function (response) {
        return response.data;
      });
    }
  }]);

  return CustomEndpoint;
}();

/***/ }),
/* 404 */
/*!****************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/core/files.js ***!
  \****************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Files = exports.FileStore = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _es6Promise = __webpack_require__(/*! es6-promise */ 6);

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _map = __webpack_require__(/*! lodash/map */ 84);

var _map2 = _interopRequireDefault(_map);

var _assign = __webpack_require__(/*! lodash/assign */ 17);

var _assign2 = _interopRequireDefault(_assign);

var _isFunction = __webpack_require__(/*! lodash/isFunction */ 19);

var _isFunction2 = _interopRequireDefault(_isFunction);

var _isNumber = __webpack_require__(/*! lodash/isNumber */ 75);

var _isNumber2 = _interopRequireDefault(_isNumber);

var _url = __webpack_require__(/*! url */ 11);

var _url2 = _interopRequireDefault(_url);

var _request = __webpack_require__(/*! ./request */ 7);

var _errors = __webpack_require__(/*! ./errors */ 1);

var _observable = __webpack_require__(/*! ./observable */ 36);

var _log = __webpack_require__(/*! ./log */ 21);

var _utils = __webpack_require__(/*! ./utils */ 2);

var _query = __webpack_require__(/*! ./query */ 12);

var _datastore = __webpack_require__(/*! ./datastore */ 55);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function randomInt(min, max) {
  return Math.floor(Math.random() * (max - min)) + min;
}

// Calculate where we should start the file upload
function getStartIndex(rangeHeader, max) {
  var start = rangeHeader ? parseInt(rangeHeader.split('-')[1], 10) + 1 : 0;
  return start >= max ? max - 1 : start;
}

/**
 * The FileStore class is used to find, save, update, remove, count and group files.
 */

var FileStore = exports.FileStore = function (_NetworkStore) {
  _inherits(FileStore, _NetworkStore);

  function FileStore() {
    _classCallCheck(this, FileStore);

    return _possibleConstructorReturn(this, (FileStore.__proto__ || Object.getPrototypeOf(FileStore)).apply(this, arguments));
  }

  _createClass(FileStore, [{
    key: 'find',


    /**
     * Finds all files. A query can be optionally provided to return
     * a subset of all the files for your application or omitted to return all the files.
     * The number of files returned will adhere to the limits specified
     * at http://devcenter.kinvey.com/rest/guides/datastore#queryrestrictions. A
     * promise will be returned that will be resolved with the files or rejected with
     * an error.
     *
     * @param   {Query}                 [query]                                   Query used to filter result.
     * @param   {Object}                [options]                                 Options
     * @param   {Properties}            [options.properties]                      Custom properties to send with
     *                                                                            the request.
     * @param   {Number}                [options.timeout]                         Timeout for the request.
     * @param   {Boolean}               [options.tls]                             Use Transport Layer Security
     * @param   {Boolean}               [options.download]                        Download the files
     * @return  {Promise}                                                         Promise
     *
     * @example
     * var filesStore = new Kinvey.FilesStore();
     * var query = new Kinvey.Query();
     * query.equalTo('location', 'Boston');
     * files.find(query, {
     *   tls: true, // Use transport layer security
     *   ttl: 60 * 60 * 24, // 1 day in seconds
     *   download: true // download the files
     * }).then(function(files) {
     *   ...
     * }).catch(function(err) {
     *   ...
     * });
     */
    value: function find(query) {
      var _this2 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options = (0, _assign2.default)({ tls: true }, options);
      var queryStringObject = { tls: options.tls === true };

      if ((0, _isNumber2.default)(options.ttl)) {
        queryStringObject.ttl_in_seconds = parseInt(options.ttl, 10);
      }

      var stream = _observable.KinveyObservable.create(function (observer) {
        // Check that the query is valid
        if ((0, _utils.isDefined)(query) && !(query instanceof _query.Query)) {
          return observer.error(new _errors.KinveyError('Invalid query. It must be an instance of the Query class.'));
        }

        // Create the request
        var request = new _request.KinveyRequest({
          method: _request.RequestMethod.GET,
          authType: _request.AuthType.Default,
          url: _url2.default.format({
            protocol: _this2.client.apiProtocol,
            host: _this2.client.apiHost,
            pathname: _this2.pathname,
            query: queryStringObject
          }),
          properties: options.properties,
          query: query,
          timeout: options.timeout,
          client: _this2.client
        });
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (data) {
          return observer.next(data);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });
      return stream.toPromise().then(function (files) {
        if (options.download === true) {
          return _es6Promise2.default.all((0, _map2.default)(files, function (file) {
            return _this2.downloadByUrl(file._downloadURL, options);
          }));
        }

        return files;
      });
    }
  }, {
    key: 'findById',
    value: function findById(id, options) {
      return this.download(id, options);
    }

    /**
     * Download a file.
     *
     * @param   {string}        name                                          Name
     * @param   {Object}        [options]                                     Options
     * @param   {Boolean}       [options.tls]                                 Use Transport Layer Security
     * @param   {Number}        [options.ttl]                                 Time To Live (in seconds)
     * @param   {Boolean}       [options.stream=false]                        Stream the file
     * @return  {Promise<string>}                                             File content
     *
     * @example
     * var files = new Kinvey.Files();
     * files.download('Kinvey.png', {
     *   tls: true, // Use transport layer security
     *   ttl: 60 * 60 * 24, // 1 day in seconds
     *   stream: true // stream the file
     * }).then(function(file) {
     *   ...
     * }).catch(function(err) {
     *   ...
     * });
    */

  }, {
    key: 'download',
    value: function download(name) {
      var _this3 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options = (0, _assign2.default)({ tls: true }, options);
      var queryStringObject = { tls: options.tls === true };

      if ((0, _isNumber2.default)(options.ttl)) {
        queryStringObject.ttl_in_seconds = parseInt(options.ttl, 10);
      }

      var stream = _observable.KinveyObservable.create(function (observer) {
        if ((0, _utils.isDefined)(name) === false) {
          observer.next(undefined);
          return observer.complete();
        }

        var request = new _request.KinveyRequest({
          method: _request.RequestMethod.GET,
          authType: _request.AuthType.Default,
          url: _url2.default.format({
            protocol: _this3.client.apiProtocol,
            host: _this3.client.apiHost,
            pathname: _this3.pathname + '/' + name,
            query: queryStringObject
          }),
          properties: options.properties,
          timeout: options.timeout,
          client: _this3.client
        });
        return request.execute().then(function (response) {
          return response.data;
        }).then(function (data) {
          return observer.next(data);
        }).then(function () {
          return observer.complete();
        }).catch(function (error) {
          return observer.error(error);
        });
      });
      return stream.toPromise().then(function (file) {
        if (options.stream === true) {
          return file;
        }

        options.mimeType = file.mimeType;
        return _this3.downloadByUrl(file._downloadURL, options);
      });
    }

    /**
     * Download a file using a url.
     *
     * @param   {string}        url                                           File download url
     * @param   {Object}        [options]                                     Options
     * @return  {Promise<string>}                                             File content.
    */

  }, {
    key: 'downloadByUrl',
    value: function downloadByUrl(url) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var request = new _request.NetworkRequest({
        method: _request.RequestMethod.GET,
        url: url,
        timeout: options.timeout
      });
      return request.execute().then(function (response) {
        return response.data;
      });
    }

    /**
     * Stream a file. A promise will be returned that will be resolved with the file or rejected with
     * an error.
     *
     * @param   {string}        name                                          File name
     * @param   {Object}        [options]                                     Options
     * @param   {Boolean}       [options.tls]                                 Use Transport Layer Security
     * @param   {Number}        [options.ttl]                                 Time To Live (in seconds)
     * @param   {DataPolicy}    [options.dataPolicy=DataPolicy.NetworkFirst]    Data policy
     * @param   {AuthType}      [options.authType=AuthType.Default]           Auth type
     * @return  {Promise}                                                     Promise
     *
     * @example
     * var files = new Kinvey.Files();
     * files.stream('BostonTeaParty.png', {
     *   tls: true, // Use transport layer security
     *   ttl: 60 * 60 * 24, // 1 day in seconds
     * }).then(function(file) {
     *   ...
     * }).catch(function(err) {
     *   ...
     * });
     */

  }, {
    key: 'stream',
    value: function stream(name) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options.stream = true;
      return this.download(name, options);
    }

    /**
     * Upload a file.
     *
     * @param {Blob|string} file  File content
     * @param {Object} [metadata={}] File metadata
     * @param {Object} [options={}] Options
     * @return {Promise<File>} A file entity.
     */

  }, {
    key: 'upload',
    value: function upload(file) {
      var _this4 = this;

      var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      metadata = this.transformMetadata(file, metadata);
      var kinveyFileData = null;

      return this.saveFileMetadata(options, metadata).then(function (response) {
        kinveyFileData = response.data;
        return _this4.makeStatusCheckRequest(response.data._uploadURL, response.data._requiredHeaders, metadata, options.timeout);
      }).then(function (response) {
        _log.Log.debug('File upload status check response', response);

        if (!response.isSuccess()) {
          return _es6Promise2.default.reject(response.error);
        }

        if (response.statusCode === 200 || response.statusCode === 201) {
          return response; // file is already uploaded
        }

        if (response.statusCode !== 308) {
          // TODO: Here we should handle redirects according to location header, but this generally shouldn't happen
          var error = new _errors.KinveyError('Unexpected response for upload file status check request.', false, response.statusCode, response.headers.get('X-Kinvey-Request-ID'));
          return _es6Promise2.default.reject(error);
        }

        var uploadOptions = {
          start: getStartIndex(response.headers.get('range'), metadata.size),
          timeout: options.timeout,
          maxBackoff: options.maxBackoff,
          headers: kinveyFileData._requiredHeaders
        };
        return _this4.retriableUpload(kinveyFileData._uploadURL, file, metadata, uploadOptions);
      }).then(function () {
        delete kinveyFileData._expiresAt;
        delete kinveyFileData._requiredHeaders;
        delete kinveyFileData._uploadURL;
        kinveyFileData._data = file;
        return kinveyFileData;
      });
    }

    /**
     * @private
     */

  }, {
    key: 'transformMetadata',
    value: function transformMetadata(file, metadata) {
      var fileMetadata = (0, _assign2.default)({
        filename: file._filename || file.name,
        public: false,
        size: file.size || file.length,
        mimeType: file.mimeType || file.type || 'application/octet-stream'
      }, metadata);
      fileMetadata._filename = metadata.filename;
      delete fileMetadata.filename;
      fileMetadata._public = metadata.public;
      delete fileMetadata.public;
      return fileMetadata;
    }

    /**
     * Save the file to Kinvey
     *
     * @private
     */

  }, {
    key: 'saveFileMetadata',
    value: function saveFileMetadata(options, metadata) {
      var isUpdate = (0, _utils.isDefined)(metadata._id);
      var request = new _request.KinveyRequest({
        method: isUpdate ? _request.RequestMethod.PUT : _request.RequestMethod.POST,
        authType: _request.AuthType.Default,
        headers: {
          'X-Kinvey-Content-Type': metadata.mimeType
        },
        url: _url2.default.format({
          protocol: this.client.apiProtocol,
          host: this.client.apiHost,
          pathname: isUpdate ? this.pathname + '/' + metadata._id : this.pathname
        }),
        properties: options.properties,
        timeout: options.timeout,
        body: metadata,
        client: this.client
      });
      return request.execute();
    }

    /**
     * @private
     */

  }, {
    key: 'makeStatusCheckRequest',
    value: function makeStatusCheckRequest(uploadUrl, requiredHeaders, metadata, timeout) {
      var headers = new _request.Headers(requiredHeaders);
      headers.set('content-type', metadata.mimeType);
      headers.set('content-range', 'bytes */' + metadata.size);
      var request = new _request.NetworkRequest({
        method: _request.RequestMethod.PUT,
        url: uploadUrl,
        timeout: timeout,
        headers: headers
      });
      return request.execute();
    }

    /**
     * @private
     */

  }, {
    key: 'retriableUpload',
    value: function retriableUpload(uploadUrl, file, metadata, options) {
      var _this5 = this;

      options = (0, _assign2.default)({
        count: 0,
        start: 0,
        maxBackoff: 32 * 1000
      }, options);

      _log.Log.debug('Start file upload');
      _log.Log.debug('File upload headers', options.headers);
      _log.Log.debug('File upload upload url', _url2.default);
      _log.Log.debug('File upload file', file);
      _log.Log.debug('File upload metadata', metadata);
      _log.Log.debug('File upload options', options);

      return this.makeUploadRequest(uploadUrl, file, metadata, options).then(function (response) {
        _log.Log.debug('File upload response', response);

        if (response.isClientError()) {
          return _es6Promise2.default.reject(response.error);
        }
        if (!response.isSuccess() && !response.isServerError() && response.statusCode !== 308) {
          // TODO: Here we should handle redirects according to location header
          var error = new _errors.KinveyError('Unexpected response for upload file request.', false, response.statusCode, response.headers.get('X-Kinvey-Request-ID'));
          return _es6Promise2.default.reject(error);
        }

        return response;
      }).then(function (response) {
        var backoff = 0;

        if (response.isServerError()) {
          // should retry
          _log.Log.debug('File upload server error. Probably network congestion.', response.statusCode, response.data);
          backoff = Math.pow(2, options.count) + randomInt(1, 1001); // Calculate the exponential backoff

          if (backoff >= options.maxBackoff) {
            return _es6Promise2.default.reject(response.error);
          }

          _log.Log.debug('File upload will try again in ' + backoff + ' seconds.');

          return new _es6Promise2.default(function (resolve) {
            setTimeout(function () {
              options.count += 1;
              resolve(true);
            }, backoff);
          });
        }

        if (response.statusCode === 308) {
          // upload isn't complete, must upload the rest of the file
          _log.Log.debug('File upload was incomplete (statusCode 308). Trying to upload the remainder of file.');
          options.start = getStartIndex(response.headers.get('range'), metadata.size);
          return new _es6Promise2.default(function (resolve) {
            setTimeout(function () {
              options.count = 0;
              resolve(true);
            }, backoff);
          });
        }

        return new _es6Promise2.default(function (resolve) {
          setTimeout(function () {
            resolve(false);
          }, backoff);
        });
      }).then(function (shouldRetry) {
        if (shouldRetry) {
          // should continue with upload
          return _this5.retriableUpload(uploadUrl, file, metadata, options);
        }

        return null;
      });
    }

    /**
     * @protected
     */

  }, {
    key: 'makeUploadRequest',
    value: function makeUploadRequest(uploadUrl, file, metadata, options) {
      var headers = new _request.Headers(options.headers);
      headers.set('content-type', metadata.mimeType);
      headers.set('content-range', 'bytes ' + options.start + '-' + (metadata.size - 1) + '/' + metadata.size);
      var request = new _request.NetworkRequest({
        method: _request.RequestMethod.PUT,
        url: uploadUrl,
        headers: headers,
        body: (0, _isFunction2.default)(file.slice) ? file.slice(options.start) : file,
        timeout: options.timeout
      });
      return request.execute();
    }

    /**
     * @private
     */

  }, {
    key: 'create',
    value: function create(file, metadata, options) {
      return this.upload(file, metadata, options);
    }

    /**
     * @private
     */

  }, {
    key: 'update',
    value: function update(file, metadata, options) {
      return this.upload(file, metadata, options);
    }

    /**
     * @private
     */

  }, {
    key: 'remove',
    value: function remove() {
      throw new _errors.KinveyError('Please use removeById() to remove files one by one.');
    }
  }, {
    key: 'pathname',

    /**
     * @private
     * The pathname for the store.
     *
     * @return  {string}  Pathname
     */
    get: function get() {
      return '/blob/' + this.client.appKey;
    }
  }]);

  return FileStore;
}(_datastore.NetworkStore);

var Files = exports.Files = new FileStore();

/***/ }),
/* 405 */
/*!************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/nativescript/index.ts ***!
  \************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./kinvey */ 406));
var push_1 = __webpack_require__(/*! ./push */ 409);
exports.Push = push_1.Push;


/***/ }),
/* 406 */
/*!*************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/nativescript/kinvey.ts ***!
  \*************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var es6_promise_1 = __webpack_require__(/*! es6-promise */ 6);
var utils_1 = __webpack_require__(/*! ../core/utils */ 2);
var errors_1 = __webpack_require__(/*! ../core/errors */ 1);
var client_1 = __webpack_require__(/*! ./client */ 407);
var USERS_NAMESPACE = 'user';
var ACTIVE_USER_COLLECTION_NAME = 'kinvey_active_user';
function init(config) {
    if (config === void 0) { config = {}; }
    if (!utils_1.isDefined(config.appKey)) {
        throw new errors_1.KinveyError('No App Key was provided.'
            + ' Unable to create a new Client without an App Key.');
    }
    if (!utils_1.isDefined(config.appSecret) && !utils_1.isDefined(config.masterSecret)) {
        throw new errors_1.KinveyError('No App Secret or Master Secret was provided.'
            + ' Unable to create a new Client without an App Secret.');
    }
    return client_1.Client.init(config);
}
exports.init = init;
function initialize(config) {
    var client = init(config);
    return es6_promise_1.Promise.resolve(client.getActiveUser());
}
exports.initialize = initialize;


/***/ }),
/* 407 */
/*!*************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/nativescript/client.ts ***!
  \*************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var client_1 = __webpack_require__(/*! ../core/client */ 10);
var errors_1 = __webpack_require__(/*! ../core/errors */ 1);
var utils_1 = __webpack_require__(/*! ../core/utils */ 2);
var log_1 = __webpack_require__(/*! ../core/log */ 21);
var secure_1 = __webpack_require__(/*! ./secure */ 408);
var storage = new secure_1.SecureStorage();
var ActiveUserStorage = (function () {
    function ActiveUserStorage() {
    }
    ActiveUserStorage.prototype.get = function (key) {
        if (typeof key !== 'string') {
            throw new errors_1.KinveyError('The key argument must be a string.');
        }
        try {
            return JSON.parse(storage.get(key));
        }
        catch (e) {
            log_1.Log.debug('Unable to parse stored active user.', e);
            return null;
        }
    };
    ActiveUserStorage.prototype.set = function (key, value) {
        if (typeof key !== 'string') {
            throw new errors_1.KinveyError('The key argument must be a string.');
        }
        if (utils_1.isDefined(value)) {
            storage.set(key, value);
        }
        else {
            this.remove(key);
        }
        return value;
    };
    ActiveUserStorage.prototype.remove = function (key) {
        if (typeof key !== 'string') {
            throw new errors_1.KinveyError('The key argument must be a string.');
        }
        storage.remove(key);
        return null;
    };
    return ActiveUserStorage;
}());
var Client = (function (_super) {
    __extends(Client, _super);
    function Client() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Client.init = function (config) {
        var client = client_1.Client.init(config);
        client.activeUserStorage = new ActiveUserStorage();
        return client;
    };
    return Client;
}(client_1.Client));
exports.Client = Client;


/***/ }),
/* 408 */
/*!************************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/nativescript/secure/secure.ios.ts ***!
  \************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SecureStorage = (function () {
    function SecureStorage() {
        this.defaultService = 'kinvey_nativescript_sdk';
    }
    SecureStorage.prototype.get = function (key) {
        if (typeof key !== 'string') {
            throw new Error('The key argument must be a string.');
        }
        var query = SAMKeychainQuery.new();
        query.service = this.defaultService;
        query.account = key;
        try {
            query.fetch();
            return query.password;
        }
        catch (e) {
            return null;
        }
    };
    SecureStorage.prototype.set = function (key, value) {
        if (typeof key !== 'string') {
            throw new Error('The key argument must be a string.');
        }
        if (value !== null && value !== undefined && typeof value === 'object') {
            value = JSON.stringify(value);
        }
        if (value !== null && value !== undefined && typeof value !== 'string') {
            value = String(value);
        }
        var accessibility = kSecAttrAccessibleAlwaysThisDeviceOnly;
        SAMKeychain.setAccessibilityType(accessibility);
        var query = SAMKeychainQuery.new();
        query.service = this.defaultService;
        query.account = key;
        query.password = value;
        return query.save();
    };
    SecureStorage.prototype.remove = function (key) {
        if (typeof key !== 'string') {
            throw new Error('The key argument must be a string.');
        }
        var query = SAMKeychainQuery.new();
        query.service = this.defaultService;
        query.account = key;
        try {
            return query.deleteItem();
        }
        catch (e) {
            return false;
        }
    };
    return SecureStorage;
}());
exports.SecureStorage = SecureStorage;


/***/ }),
/* 409 */
/*!********************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/nativescript/push/push.ios.ts ***!
  \********************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var es6_promise_1 = __webpack_require__(/*! es6-promise */ 6);
var utils_1 = __webpack_require__(/*! ../../core/utils */ 2);
var errors_1 = __webpack_require__(/*! ../../core/errors */ 1);
var common_1 = __webpack_require__(/*! ./common */ 410);
// tslint:disable-next-line:variable-name
var PushPlugin;
try {
    PushPlugin = __webpack_require__(/*! nativescript-push-notifications */ 411);
}
catch (e) {
    // Just catch the error
}
var IOSPush = (function (_super) {
    __extends(IOSPush, _super);
    function IOSPush() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IOSPush.prototype._registerWithPushPlugin = function (options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        var config = options.ios || {};
        return new es6_promise_1.Promise(function (resolve, reject) {
            if (utils_1.isDefined(PushPlugin) === false) {
                return reject(new errors_1.KinveyError('NativeScript Push Plugin is not installed.', 'Please refer to http://devcenter.kinvey.com/nativescript/guides/push#ProjectSetUp for help with'
                    + ' setting up your project.'));
            }
            config.notificationCallbackIOS = function (data) {
                _this.emit('notification', data);
            };
            PushPlugin.register(config, function (token) {
                if (utils_1.isDefined(config.interactiveSettings)) {
                    PushPlugin.registerUserNotificationSettings(function () {
                        resolve(token);
                    }, function (error) {
                        // do something with error
                        resolve(token);
                    });
                }
                else {
                    resolve(token);
                }
            }, reject);
        });
    };
    IOSPush.prototype._unregisterWithPushPlugin = function (options) {
        if (options === void 0) { options = {}; }
        return new es6_promise_1.Promise(function (resolve, reject) {
            if (utils_1.isDefined(PushPlugin) === false) {
                return reject(new errors_1.KinveyError('NativeScript Push Plugin is not installed.', 'Please refer to http://devcenter.kinvey.com/nativescript/guides/push#ProjectSetUp for help with'
                    + ' setting up your project.'));
            }
            PushPlugin.unregister(resolve, reject, options);
        });
    };
    return IOSPush;
}(common_1.PushCommon));
// tslint:disable-next-line:variable-name
var Push = new IOSPush();
exports.Push = Push;


/***/ }),
/* 410 */
/*!******************************************************************************************************!*\
  !*** /Users/Thomas/Documents/Kinvey/Development/SDKs/JavaScript/SDK/src/nativescript/push/common.ts ***!
  \******************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var es6_promise_1 = __webpack_require__(/*! es6-promise */ 6);
var events_1 = __webpack_require__(/*! events */ 54);
var platform_1 = __webpack_require__(/*! tns-core-modules/platform */ 128);
var client_1 = __webpack_require__(/*! ../../core/client */ 10);
var errors_1 = __webpack_require__(/*! ../../core/errors */ 1);
var utils_1 = __webpack_require__(/*! ../../core/utils */ 2);
var user_1 = __webpack_require__(/*! ../../core/user */ 82);
var request_1 = __webpack_require__(/*! ../../core/request */ 7);
var PushCommon = (function (_super) {
    __extends(PushCommon, _super);
    function PushCommon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(PushCommon.prototype, "client", {
        get: function () {
            if (utils_1.isDefined(this._client) === false) {
                return client_1.Client.sharedInstance();
            }
            return this._client;
        },
        set: function (client) {
            if (utils_1.isDefined(client) && (client instanceof client_1.Client) === false) {
                throw new Error('client must be an instance of Client.');
            }
            this._client = client;
        },
        enumerable: true,
        configurable: true
    });
    PushCommon.prototype.onNotification = function (listener) {
        return this.on('notification', listener);
    };
    PushCommon.prototype.onceNotification = function (listener) {
        return this.once('notification', listener);
    };
    PushCommon.prototype.register = function (options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        return this._registerWithPushPlugin(options)
            .then(function (token) {
            if (utils_1.isDefined(token) === false) {
                throw new errors_1.KinveyError('Unable to retrieve the device token to register this device for push notifications.');
            }
            return _this._registerWithKinvey(token, options);
        })
            .then(function (token) {
            return _this._saveTokenToCache(token, options);
        });
    };
    PushCommon.prototype.unregister = function (options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        return this._unregisterWithPushPlugin(options)
            .then(function () {
            return _this._getTokenFromCache(options);
        })
            .then(function (token) {
            if (utils_1.isDefined(token) === false) {
                throw new errors_1.KinveyError('Unable to retrieve the device token to unregister this device for push notifications.');
            }
            return _this._unregisterWithKinvey(token, options);
        })
            .then(function () {
            return _this._deleteTokenFromCache(options);
        });
    };
    PushCommon.prototype._registerWithPushPlugin = function (options) {
        if (options === void 0) { options = {}; }
        return es6_promise_1.Promise.reject(new errors_1.KinveyError('Unable to register for push notifications.'));
    };
    PushCommon.prototype._unregisterWithPushPlugin = function (options) {
        if (options === void 0) { options = {}; }
        return es6_promise_1.Promise.reject(new errors_1.KinveyError('Unable to unregister for push notifications.'));
    };
    PushCommon.prototype._registerWithKinvey = function (token, options) {
        if (options === void 0) { options = {}; }
        var activeUser = user_1.User.getActiveUser(this.client);
        if (utils_1.isDefined(activeUser) === false) {
            return es6_promise_1.Promise.reject(new errors_1.KinveyError('Unable to register this device for push notifications.', 'You must login a user.'));
        }
        var request = new request_1.KinveyRequest({
            method: request_1.RequestMethod.POST,
            url: this.client.apiHostname + "/push/" + this.client.appKey + "/register-device",
            authType: activeUser ? request_1.AuthType.Session : request_1.AuthType.Master,
            data: {
                platform: platform_1.device.os.toLowerCase(),
                framework: 'nativescript',
                deviceId: token
            },
            timeout: options.timeout,
            client: this.client
        });
        return request.execute().then(function () { return token; });
    };
    PushCommon.prototype._unregisterWithKinvey = function (token, options) {
        if (options === void 0) { options = {}; }
        var activeUser = user_1.User.getActiveUser(this.client);
        if (utils_1.isDefined(activeUser) === false) {
            return es6_promise_1.Promise.reject(new errors_1.KinveyError('Unable to unregister this device for push notifications.', 'You must login a user.'));
        }
        var request = new request_1.KinveyRequest({
            method: request_1.RequestMethod.POST,
            url: this.client.apiHostname + "/push/" + this.client.appKey + "/unregister-device",
            authType: utils_1.isDefined(activeUser) ? request_1.AuthType.Session : request_1.AuthType.Master,
            data: {
                platform: platform_1.device.os.toLowerCase(),
                framework: 'nativescript',
                deviceId: token
            },
            timeout: options.timeout,
            client: this.client
        });
        return request.execute().then(function (response) { return response.data; });
    };
    PushCommon.prototype._getTokenFromCache = function (options) {
        if (options === void 0) { options = {}; }
        var activeUser = user_1.User.getActiveUser(this.client);
        if (utils_1.isDefined(activeUser) === false) {
            throw new errors_1.KinveyError('Unable to retrieve device token.', 'You must login a user.');
        }
        var request = new request_1.CacheRequest({
            method: request_1.RequestMethod.GET,
            url: this.client.apiHostname + "/appdata/" + this.client.appKey + "/__device/" + activeUser._id,
            client: this.client
        });
        return request.execute()
            .catch(function (error) {
            if (error instanceof errors_1.NotFoundError) {
                return {};
            }
            throw error;
        })
            .then(function (response) { return response.data; })
            .then(function (device) {
            if (utils_1.isDefined(device)) {
                return device.token;
            }
            return null;
        });
    };
    PushCommon.prototype._saveTokenToCache = function (token, options) {
        if (options === void 0) { options = {}; }
        var activeUser = user_1.User.getActiveUser(this.client);
        if (utils_1.isDefined(activeUser) === false) {
            throw new errors_1.KinveyError('Unable to save device token.', 'You must login a user.');
        }
        var request = new request_1.CacheRequest({
            method: request_1.RequestMethod.PUT,
            url: this.client.apiHostname + "/appdata/" + this.client.appKey + "/__device",
            data: {
                userId: activeUser._id,
                token: token
            },
            client: this.client
        });
        return request.execute().then(function () { return token; });
    };
    PushCommon.prototype._deleteTokenFromCache = function (options) {
        if (options === void 0) { options = {}; }
        var activeUser = user_1.User.getActiveUser(this.client);
        if (utils_1.isDefined(activeUser) === false) {
            throw new errors_1.KinveyError('Unable to delete device token.', 'You must login a user.');
        }
        var request = new request_1.CacheRequest({
            method: request_1.RequestMethod.DELETE,
            url: this.client.apiHostname + "/appdata/" + this.client.appKey + "/__device/" + activeUser._id,
            client: this.client
        });
        return request.execute()
            .catch(function (error) {
            if (error instanceof errors_1.NotFoundError) {
                return {};
            }
            throw error;
        })
            .then(function () { return null; });
    };
    return PushCommon;
}(events_1.EventEmitter));
exports.PushCommon = PushCommon;


/***/ }),
/* 411 */
/*!**************************************************!*\
  !*** external "nativescript-push-notifications" ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = require("nativescript-push-notifications");

/***/ })
/******/ ]);
//# sourceMappingURL=kinvey-nativescript-sdk.ios.js.map